{
  "version": 3,
  "sources": ["../../binary-search-bounds/search-bounds.js", "../../interval-tree-1d/interval-tree.js", "../../d3-axis/src/identity.js", "../../d3-axis/src/axis.js", "../../d3-dispatch/src/dispatch.js", "../../d3-selection/src/namespaces.js", "../../d3-selection/src/namespace.js", "../../d3-selection/src/creator.js", "../../d3-selection/src/selector.js", "../../d3-selection/src/selection/select.js", "../../d3-selection/src/array.js", "../../d3-selection/src/selectorAll.js", "../../d3-selection/src/selection/selectAll.js", "../../d3-selection/src/matcher.js", "../../d3-selection/src/selection/selectChild.js", "../../d3-selection/src/selection/selectChildren.js", "../../d3-selection/src/selection/filter.js", "../../d3-selection/src/selection/sparse.js", "../../d3-selection/src/selection/enter.js", "../../d3-selection/src/constant.js", "../../d3-selection/src/selection/data.js", "../../d3-selection/src/selection/exit.js", "../../d3-selection/src/selection/join.js", "../../d3-selection/src/selection/merge.js", "../../d3-selection/src/selection/order.js", "../../d3-selection/src/selection/sort.js", "../../d3-selection/src/selection/call.js", "../../d3-selection/src/selection/nodes.js", "../../d3-selection/src/selection/node.js", "../../d3-selection/src/selection/size.js", "../../d3-selection/src/selection/empty.js", "../../d3-selection/src/selection/each.js", "../../d3-selection/src/selection/attr.js", "../../d3-selection/src/window.js", "../../d3-selection/src/selection/style.js", "../../d3-selection/src/selection/property.js", "../../d3-selection/src/selection/classed.js", "../../d3-selection/src/selection/text.js", "../../d3-selection/src/selection/html.js", "../../d3-selection/src/selection/raise.js", "../../d3-selection/src/selection/lower.js", "../../d3-selection/src/selection/append.js", "../../d3-selection/src/selection/insert.js", "../../d3-selection/src/selection/remove.js", "../../d3-selection/src/selection/clone.js", "../../d3-selection/src/selection/datum.js", "../../d3-selection/src/selection/on.js", "../../d3-selection/src/selection/dispatch.js", "../../d3-selection/src/selection/iterator.js", "../../d3-selection/src/selection/index.js", "../../d3-selection/src/select.js", "../../d3-selection/src/create.js", "../../d3-selection/src/local.js", "../../d3-drag/src/event.js", "../../d3-timer/src/timer.js", "../../d3-timer/src/timeout.js", "../../d3-transition/src/transition/schedule.js", "../../d3-transition/src/interrupt.js", "../../d3-transition/src/selection/interrupt.js", "../../d3-transition/src/transition/tween.js", "../../d3-transition/src/transition/interpolate.js", "../../d3-transition/src/transition/attr.js", "../../d3-transition/src/transition/attrTween.js", "../../d3-transition/src/transition/delay.js", "../../d3-transition/src/transition/duration.js", "../../d3-transition/src/transition/ease.js", "../../d3-transition/src/transition/easeVarying.js", "../../d3-transition/src/transition/filter.js", "../../d3-transition/src/transition/merge.js", "../../d3-transition/src/transition/on.js", "../../d3-transition/src/transition/remove.js", "../../d3-transition/src/transition/select.js", "../../d3-transition/src/transition/selectAll.js", "../../d3-transition/src/transition/selection.js", "../../d3-transition/src/transition/style.js", "../../d3-transition/src/transition/styleTween.js", "../../d3-transition/src/transition/text.js", "../../d3-transition/src/transition/textTween.js", "../../d3-transition/src/transition/transition.js", "../../d3-transition/src/transition/end.js", "../../d3-transition/src/transition/index.js", "../../d3-ease/src/cubic.js", "../../d3-ease/src/poly.js", "../../d3-ease/src/sin.js", "../../d3-ease/src/math.js", "../../d3-ease/src/bounce.js", "../../d3-ease/src/back.js", "../../d3-ease/src/elastic.js", "../../d3-transition/src/selection/transition.js", "../../d3-transition/src/selection/index.js", "../../d3-brush/src/brush.js", "../../d3-chord/src/math.js", "../../d3-chord/src/array.js", "../../d3-contour/src/array.js", "../../d3-contour/src/ascending.js", "../../d3-contour/src/area.js", "../../d3-contour/src/constant.js", "../../d3-contour/src/contains.js", "../../d3-contour/src/noop.js", "../../d3-contour/src/contours.js", "../../d3-contour/src/density.js", "../../d3-dsv/src/dsv.js", "../../d3-dsv/src/csv.js", "../../d3-dsv/src/tsv.js", "../../d3-dsv/src/autoType.js", "../../d3-fetch/src/text.js", "../../d3-fetch/src/dsv.js", "../../d3-fetch/src/xml.js", "../../d3-quadtree/src/add.js", "../../d3-quadtree/src/cover.js", "../../d3-quadtree/src/data.js", "../../d3-quadtree/src/extent.js", "../../d3-quadtree/src/quad.js", "../../d3-quadtree/src/find.js", "../../d3-quadtree/src/remove.js", "../../d3-quadtree/src/root.js", "../../d3-quadtree/src/size.js", "../../d3-quadtree/src/visit.js", "../../d3-quadtree/src/visitAfter.js", "../../d3-quadtree/src/x.js", "../../d3-quadtree/src/y.js", "../../d3-quadtree/src/quadtree.js", "../../d3-force/src/simulation.js", "../../d3-geo/src/math.js", "../../d3-geo/src/noop.js", "../../d3-geo/src/stream.js", "../../d3-geo/src/area.js", "../../d3-geo/src/cartesian.js", "../../d3-geo/src/rotation.js", "../../d3-geo/src/clip/buffer.js", "../../d3-geo/src/pointEqual.js", "../../d3-geo/src/clip/rejoin.js", "../../d3-geo/src/polygonContains.js", "../../d3-geo/src/clip/index.js", "../../d3-geo/src/clip/antimeridian.js", "../../d3-geo/src/clip/rectangle.js", "../../d3-geo/src/identity.js", "../../d3-geo/src/path/area.js", "../../d3-geo/src/path/bounds.js", "../../d3-geo/src/path/centroid.js", "../../d3-geo/src/path/context.js", "../../d3-geo/src/path/measure.js", "../../d3-geo/src/path/string.js", "../../d3-geo/src/path/index.js", "../../d3-geo/src/transform.js", "../../d3-geo/src/projection/resample.js", "../../d3-geo/src/projection/index.js", "../../d3-geo/src/projection/azimuthal.js", "../../d3-geo/src/projection/azimuthalEqualArea.js", "../../d3-geo/src/projection/azimuthalEquidistant.js", "../../d3-geo/src/projection/mercator.js", "../../d3-geo/src/projection/equirectangular.js", "../../d3-geo/src/projection/equalEarth.js", "../../d3-geo/src/projection/gnomonic.js", "../../d3-geo/src/projection/naturalEarth1.js", "../../d3-geo/src/projection/orthographic.js", "../../d3-geo/src/projection/stereographic.js", "../../d3-geo/src/projection/transverseMercator.js", "../../d3-hierarchy/src/cluster.js", "../../d3-hierarchy/src/hierarchy/count.js", "../../d3-hierarchy/src/hierarchy/each.js", "../../d3-hierarchy/src/hierarchy/eachBefore.js", "../../d3-hierarchy/src/hierarchy/eachAfter.js", "../../d3-hierarchy/src/hierarchy/find.js", "../../d3-hierarchy/src/hierarchy/sum.js", "../../d3-hierarchy/src/hierarchy/sort.js", "../../d3-hierarchy/src/hierarchy/path.js", "../../d3-hierarchy/src/hierarchy/ancestors.js", "../../d3-hierarchy/src/hierarchy/descendants.js", "../../d3-hierarchy/src/hierarchy/leaves.js", "../../d3-hierarchy/src/hierarchy/links.js", "../../d3-hierarchy/src/hierarchy/iterator.js", "../../d3-hierarchy/src/hierarchy/index.js", "../../d3-hierarchy/src/accessors.js", "../../d3-hierarchy/src/treemap/dice.js", "../../d3-hierarchy/src/stratify.js", "../../d3-hierarchy/src/tree.js", "../../d3-hierarchy/src/treemap/slice.js", "../../d3-hierarchy/src/treemap/squarify.js", "../../d3-hierarchy/src/treemap/resquarify.js", "../../d3-random/src/defaultSource.js", "../../d3-random/src/uniform.js", "../../d3-random/src/int.js", "../../d3-random/src/normal.js", "../../d3-random/src/logNormal.js", "../../d3-random/src/irwinHall.js", "../../d3-random/src/bates.js", "../../d3-random/src/exponential.js", "../../d3-random/src/pareto.js", "../../d3-random/src/bernoulli.js", "../../d3-random/src/geometric.js", "../../d3-random/src/gamma.js", "../../d3-random/src/beta.js", "../../d3-random/src/binomial.js", "../../d3-random/src/weibull.js", "../../d3-random/src/cauchy.js", "../../d3-random/src/logistic.js", "../../d3-random/src/poisson.js", "../../d3-random/src/lcg.js", "../../d3-scale-chromatic/src/colors.js", "../../d3-scale-chromatic/src/categorical/category10.js", "../../d3-scale-chromatic/src/categorical/Accent.js", "../../d3-scale-chromatic/src/categorical/Dark2.js", "../../d3-scale-chromatic/src/categorical/Paired.js", "../../d3-scale-chromatic/src/categorical/Pastel1.js", "../../d3-scale-chromatic/src/categorical/Pastel2.js", "../../d3-scale-chromatic/src/categorical/Set1.js", "../../d3-scale-chromatic/src/categorical/Set2.js", "../../d3-scale-chromatic/src/categorical/Set3.js", "../../d3-scale-chromatic/src/categorical/Tableau10.js", "../../d3-scale-chromatic/src/ramp.js", "../../d3-scale-chromatic/src/diverging/BrBG.js", "../../d3-scale-chromatic/src/diverging/PRGn.js", "../../d3-scale-chromatic/src/diverging/PiYG.js", "../../d3-scale-chromatic/src/diverging/PuOr.js", "../../d3-scale-chromatic/src/diverging/RdBu.js", "../../d3-scale-chromatic/src/diverging/RdGy.js", "../../d3-scale-chromatic/src/diverging/RdYlBu.js", "../../d3-scale-chromatic/src/diverging/RdYlGn.js", "../../d3-scale-chromatic/src/diverging/Spectral.js", "../../d3-scale-chromatic/src/sequential-multi/BuGn.js", "../../d3-scale-chromatic/src/sequential-multi/BuPu.js", "../../d3-scale-chromatic/src/sequential-multi/GnBu.js", "../../d3-scale-chromatic/src/sequential-multi/OrRd.js", "../../d3-scale-chromatic/src/sequential-multi/PuBuGn.js", "../../d3-scale-chromatic/src/sequential-multi/PuBu.js", "../../d3-scale-chromatic/src/sequential-multi/PuRd.js", "../../d3-scale-chromatic/src/sequential-multi/RdPu.js", "../../d3-scale-chromatic/src/sequential-multi/YlGnBu.js", "../../d3-scale-chromatic/src/sequential-multi/YlGn.js", "../../d3-scale-chromatic/src/sequential-multi/YlOrBr.js", "../../d3-scale-chromatic/src/sequential-multi/YlOrRd.js", "../../d3-scale-chromatic/src/sequential-single/Blues.js", "../../d3-scale-chromatic/src/sequential-single/Greens.js", "../../d3-scale-chromatic/src/sequential-single/Greys.js", "../../d3-scale-chromatic/src/sequential-single/Purples.js", "../../d3-scale-chromatic/src/sequential-single/Reds.js", "../../d3-scale-chromatic/src/sequential-single/Oranges.js", "../../d3-scale-chromatic/src/sequential-multi/cividis.js", "../../d3-scale-chromatic/src/sequential-multi/cubehelix.js", "../../d3-scale-chromatic/src/sequential-multi/rainbow.js", "../../d3-scale-chromatic/src/sequential-multi/sinebow.js", "../../d3-scale-chromatic/src/sequential-multi/turbo.js", "../../d3-scale-chromatic/src/sequential-multi/viridis.js", "../../d3-zoom/src/transform.js", "../../@observablehq/plot/dist/context.js", "../../isoformat/src/format.js", "../../isoformat/src/parse.js", "../../@observablehq/plot/dist/options.js", "../../@observablehq/plot/dist/memoize.js", "../../@observablehq/plot/dist/format.js", "../../@observablehq/plot/dist/math.js", "../../@observablehq/plot/dist/defined.js", "../../@observablehq/plot/dist/warnings.js", "../../@observablehq/plot/dist/style.js", "../../@observablehq/plot/dist/axis.js", "../../@observablehq/plot/dist/scales/index.js", "../../@observablehq/plot/dist/scales/schemes.js", "../../@observablehq/plot/dist/transforms/inset.js", "../../@observablehq/plot/dist/transforms/interval.js", "../../@observablehq/plot/dist/scales/quantitative.js", "../../@observablehq/plot/dist/scales/diverging.js", "../../@observablehq/plot/dist/scales/temporal.js", "../../@observablehq/plot/dist/symbols.js", "../../@observablehq/plot/dist/scales/ordinal.js", "../../@observablehq/plot/dist/scales.js", "../../@observablehq/plot/dist/axes.js", "../../@observablehq/plot/dist/transforms/basic.js", "../../@observablehq/plot/dist/transforms/group.js", "../../@observablehq/plot/dist/channel.js", "../../@observablehq/plot/dist/dimensions.js", "../../@observablehq/plot/dist/legends/ramp.js", "../../@observablehq/plot/dist/legends/swatches.js", "../../@observablehq/plot/dist/legends.js", "../../@observablehq/plot/dist/plot.js", "../../@observablehq/plot/dist/curve.js", "../../@observablehq/plot/dist/transforms/bin.js", "../../@observablehq/plot/dist/transforms/identity.js", "../../@observablehq/plot/dist/transforms/stack.js", "../../@observablehq/plot/dist/marks/area.js", "../../@observablehq/plot/dist/marks/marker.js", "../../@observablehq/plot/dist/marks/link.js", "../../@observablehq/plot/dist/marks/arrow.js", "../../@observablehq/plot/dist/marks/bar.js", "../../@observablehq/plot/dist/transforms/map.js", "../../@observablehq/plot/dist/marks/dot.js", "../../@observablehq/plot/dist/marks/rule.js", "../../@observablehq/plot/dist/marks/tick.js", "../../@observablehq/plot/dist/marks/box.js", "../../@observablehq/plot/dist/marks/cell.js", "../../@observablehq/plot/dist/marks/delaunay.js", "../../@observablehq/plot/dist/marks/density.js", "../../@observablehq/plot/dist/marks/frame.js", "../../@observablehq/plot/dist/transforms/hexbin.js", "../../@observablehq/plot/dist/marks/hexgrid.js", "../../@observablehq/plot/dist/marks/image.js", "../../@observablehq/plot/dist/marks/line.js", "../../@observablehq/plot/dist/stats.js", "../../@observablehq/plot/dist/marks/linearRegression.js", "../../@observablehq/plot/dist/marks/rect.js", "../../@observablehq/plot/dist/marks/text.js", "../../@observablehq/plot/dist/transforms/tree.js", "../../@observablehq/plot/dist/marks/tree.js", "../../@observablehq/plot/dist/marks/vector.js", "../../@observablehq/plot/dist/transforms/dodge.js", "../../@observablehq/plot/dist/transforms/normalize.js", "../../@observablehq/plot/dist/transforms/window.js", "../../@observablehq/plot/dist/transforms/select.js"],
  "sourcesContent": ["\"use strict\"\n\n// (a, y, c, l, h) = (array, y[, cmp, lo, hi])\n\nfunction ge(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p >= 0) { i = m; h = m - 1 } else { l = m + 1 }\n  }\n  return i;\n};\n\nfunction gt(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p > 0) { i = m; h = m - 1 } else { l = m + 1 }\n  }\n  return i;\n};\n\nfunction lt(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p < 0) { i = m; l = m + 1 } else { h = m - 1 }\n  }\n  return i;\n};\n\nfunction le(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p <= 0) { i = m; l = m + 1 } else { h = m - 1 }\n  }\n  return i;\n};\n\nfunction eq(a, y, c, l, h) {\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p === 0) { return m }\n    if (p <= 0) { l = m + 1 } else { h = m - 1 }\n  }\n  return -1;\n};\n\nfunction norm(a, y, c, l, h, f) {\n  if (typeof c === 'function') {\n    return f(a, y, c, (l === undefined) ? 0 : l | 0, (h === undefined) ? a.length - 1 : h | 0);\n  }\n  return f(a, y, undefined, (c === undefined) ? 0 : c | 0, (l === undefined) ? a.length - 1 : l | 0);\n}\n\nmodule.exports = {\n  ge: function(a, y, c, l, h) { return norm(a, y, c, l, h, ge)},\n  gt: function(a, y, c, l, h) { return norm(a, y, c, l, h, gt)},\n  lt: function(a, y, c, l, h) { return norm(a, y, c, l, h, lt)},\n  le: function(a, y, c, l, h) { return norm(a, y, c, l, h, le)},\n  eq: function(a, y, c, l, h) { return norm(a, y, c, l, h, eq)}\n}\n", "\"use strict\"\n\nvar bounds = require(\"binary-search-bounds\")\n\nvar NOT_FOUND = 0\nvar SUCCESS = 1\nvar EMPTY = 2\n\nmodule.exports = createWrapper\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid\n  this.left = left\n  this.right = right\n  this.leftPoints = leftPoints\n  this.rightPoints = rightPoints\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length\n}\n\nvar proto = IntervalTreeNode.prototype\n\nfunction copy(a, b) {\n  a.mid = b.mid\n  a.left = b.left\n  a.right = b.right\n  a.leftPoints = b.leftPoints\n  a.rightPoints = b.rightPoints\n  a.count = b.count\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals)\n  node.mid = ntree.mid\n  node.left = ntree.left\n  node.right = ntree.right\n  node.leftPoints = ntree.leftPoints\n  node.rightPoints = ntree.rightPoints\n  node.count = ntree.count\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([])\n  intervals.push(interval)\n  rebuild(node, intervals)    \n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([])\n  var idx = intervals.indexOf(interval)\n  if(idx < 0) {\n    return NOT_FOUND\n  }\n  intervals.splice(idx, 1)\n  rebuild(node, intervals)\n  return SUCCESS\n}\n\nproto.intervals = function(result) {\n  result.push.apply(result, this.leftPoints)\n  if(this.left) {\n    this.left.intervals(result)\n  }\n  if(this.right) {\n    this.right.intervals(result)\n  }\n  return result\n}\n\nproto.insert = function(interval) {\n  var weight = this.count - this.leftPoints.length\n  this.count += 1\n  if(interval[1] < this.mid) {\n    if(this.left) {\n      if(4*(this.left.count+1) > 3*(weight+1)) {\n        rebuildWithInterval(this, interval)\n      } else {\n        this.left.insert(interval)\n      }\n    } else {\n      this.left = createIntervalTree([interval])\n    }\n  } else if(interval[0] > this.mid) {\n    if(this.right) {\n      if(4*(this.right.count+1) > 3*(weight+1)) {\n        rebuildWithInterval(this, interval)\n      } else {\n        this.right.insert(interval)\n      }\n    } else {\n      this.right = createIntervalTree([interval])\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin)\n    var r = bounds.ge(this.rightPoints, interval, compareEnd)\n    this.leftPoints.splice(l, 0, interval)\n    this.rightPoints.splice(r, 0, interval)\n  }\n}\n\nproto.remove = function(interval) {\n  var weight = this.count - this.leftPoints\n  if(interval[1] < this.mid) {\n    if(!this.left) {\n      return NOT_FOUND\n    }\n    var rw = this.right ? this.right.count : 0\n    if(4 * rw > 3 * (weight-1)) {\n      return rebuildWithoutInterval(this, interval)\n    }\n    var r = this.left.remove(interval)\n    if(r === EMPTY) {\n      this.left = null\n      this.count -= 1\n      return SUCCESS\n    } else if(r === SUCCESS) {\n      this.count -= 1\n    }\n    return r\n  } else if(interval[0] > this.mid) {\n    if(!this.right) {\n      return NOT_FOUND\n    }\n    var lw = this.left ? this.left.count : 0\n    if(4 * lw > 3 * (weight-1)) {\n      return rebuildWithoutInterval(this, interval)\n    }\n    var r = this.right.remove(interval)\n    if(r === EMPTY) {\n      this.right = null\n      this.count -= 1\n      return SUCCESS\n    } else if(r === SUCCESS) {\n      this.count -= 1\n    }\n    return r\n  } else {\n    if(this.count === 1) {\n      if(this.leftPoints[0] === interval) {\n        return EMPTY\n      } else {\n        return NOT_FOUND\n      }\n    }\n    if(this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if(this.left && this.right) {\n        var p = this\n        var n = this.left\n        while(n.right) {\n          p = n\n          n = n.right\n        }\n        if(p === this) {\n          n.right = this.right\n        } else {\n          var l = this.left\n          var r = this.right\n          p.count -= n.count\n          p.right = n.left\n          n.left = l\n          n.right = r\n        }\n        copy(this, n)\n        this.count = (this.left?this.left.count:0) + (this.right?this.right.count:0) + this.leftPoints.length\n      } else if(this.left) {\n        copy(this, this.left)\n      } else {\n        copy(this, this.right)\n      }\n      return SUCCESS\n    }\n    for(var l = bounds.ge(this.leftPoints, interval, compareBegin); l<this.leftPoints.length; ++l) {\n      if(this.leftPoints[l][0] !== interval[0]) {\n        break\n      }\n      if(this.leftPoints[l] === interval) {\n        this.count -= 1\n        this.leftPoints.splice(l, 1)\n        for(var r = bounds.ge(this.rightPoints, interval, compareEnd); r<this.rightPoints.length; ++r) {\n          if(this.rightPoints[r][1] !== interval[1]) {\n            break\n          } else if(this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1)\n            return SUCCESS\n          }\n        }\n      }\n    }\n    return NOT_FOUND\n  }\n}\n\nfunction reportLeftRange(arr, hi, cb) {\n  for(var i=0; i<arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i])\n    if(r) { return r }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for(var i=arr.length-1; i>=0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i])\n    if(r) { return r }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for(var i=0; i<arr.length; ++i) {\n    var r = cb(arr[i])\n    if(r) { return r }\n  }\n}\n\nproto.queryPoint = function(x, cb) {\n  if(x < this.mid) {\n    if(this.left) {\n      var r = this.left.queryPoint(x, cb)\n      if(r) { return r }\n    }\n    return reportLeftRange(this.leftPoints, x, cb)\n  } else if(x > this.mid) {\n    if(this.right) {\n      var r = this.right.queryPoint(x, cb)\n      if(r) { return r }\n    }\n    return reportRightRange(this.rightPoints, x, cb)\n  } else {\n    return reportRange(this.leftPoints, cb)\n  }\n}\n\nproto.queryInterval = function(lo, hi, cb) {\n  if(lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb)\n    if(r) { return r }\n  }\n  if(hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb)\n    if(r) { return r }\n  }\n  if(hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb)\n  } else if(lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb)\n  } else {\n    return reportRange(this.leftPoints, cb)\n  }\n}\n\nfunction compareNumbers(a, b) {\n  return a - b\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0]\n  if(d) { return d }\n  return a[1] - b[1]\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1]\n  if(d) { return d }\n  return a[0] - b[0]\n}\n\nfunction createIntervalTree(intervals) {\n  if(intervals.length === 0) {\n    return null\n  }\n  var pts = []\n  for(var i=0; i<intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1])\n  }\n  pts.sort(compareNumbers)\n\n  var mid = pts[pts.length>>1]\n\n  var leftIntervals = []\n  var rightIntervals = []\n  var centerIntervals = []\n  for(var i=0; i<intervals.length; ++i) {\n    var s = intervals[i]\n    if(s[1] < mid) {\n      leftIntervals.push(s)\n    } else if(mid < s[0]) {\n      rightIntervals.push(s)\n    } else {\n      centerIntervals.push(s)\n    }\n  }\n\n  //Split center intervals\n  var leftPoints = centerIntervals\n  var rightPoints = centerIntervals.slice()\n  leftPoints.sort(compareBegin)\n  rightPoints.sort(compareEnd)\n\n  return new IntervalTreeNode(mid, \n    createIntervalTree(leftIntervals),\n    createIntervalTree(rightIntervals),\n    leftPoints,\n    rightPoints)\n}\n\n//User friendly wrapper that makes it possible to support empty trees\nfunction IntervalTree(root) {\n  this.root = root\n}\n\nvar tproto = IntervalTree.prototype\n\ntproto.insert = function(interval) {\n  if(this.root) {\n    this.root.insert(interval)\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval])\n  }\n}\n\ntproto.remove = function(interval) {\n  if(this.root) {\n    var r = this.root.remove(interval)\n    if(r === EMPTY) {\n      this.root = null\n    }\n    return r !== NOT_FOUND\n  }\n  return false\n}\n\ntproto.queryPoint = function(p, cb) {\n  if(this.root) {\n    return this.root.queryPoint(p, cb)\n  }\n}\n\ntproto.queryInterval = function(lo, hi, cb) {\n  if(lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb)\n  }\n}\n\nObject.defineProperty(tproto, \"count\", {\n  get: function() {\n    if(this.root) {\n      return this.root.count\n    }\n    return 0\n  }\n})\n\nObject.defineProperty(tproto, \"intervals\", {\n  get: function() {\n    if(this.root) {\n      return this.root.intervals([])\n    }\n    return []\n  }\n})\n\nfunction createWrapper(intervals) {\n  if(!intervals || intervals.length === 0) {\n    return new IntervalTree(null)\n  }\n  return new IntervalTree(createIntervalTree(intervals))\n}\n", "export default function(x) {\n  return x;\n}\n", "import identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = Array.from(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n", "var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n", "export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n", "import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n", "import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n", "function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n", "import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n", "// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don\u2019t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n", "function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n", "import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    return array(select.apply(this, arguments));\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n", "export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n", "import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n", "import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n", "import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n", "export default function(update) {\n  return new Array(update.length);\n}\n", "import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don\u2019t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn\u2019t worried about \u201Clive\u201D collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don\u2019t; we\u2019d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n", "import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n", "export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n", "import {Selection} from \"./index.js\";\n\nexport default function(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n", "export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n", "import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n", "export default function() {\n  return Array.from(this);\n}\n", "export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n", "export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n", "export default function() {\n  return !this.node();\n}\n", "export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n", "import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n", "export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n", "import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n", "function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n", "function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n", "function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n", "function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n", "function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n", "function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n", "import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n", "import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n", "function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n", "function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n", "export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n", "function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n", "import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n", "export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n", "import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n", "import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n", "import creator from \"./creator.js\";\nimport select from \"./select.js\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n", "var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n", "export default function DragEvent(type, {\n  sourceEvent,\n  subject,\n  target,\n  identifier,\n  active,\n  x, y, dx, dy,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    subject: {value: subject, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    identifier: {value: identifier, enumerable: true, configurable: true},\n    active: {value: active, enumerable: true, configurable: true},\n    x: {value: x, enumerable: true, configurable: true},\n    y: {value: y, enumerable: true, configurable: true},\n    dx: {value: dx, enumerable: true, configurable: true},\n    dy: {value: dy, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n", "var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we\u2019ve set an alarm, if we haven\u2019t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n", "import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n", "import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n", "import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n", "import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n", "import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n", "import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n", "import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n", "import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n", "import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n", "import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n", "import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n", "import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n", "import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n", "import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n", "import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n", "function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n", "import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n", "import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n", "import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n", "import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n", "function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n", "import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n", "function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n", "import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n", "import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we\u2019re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n", "import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n", "export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n", "var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n", "var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n", "// tpmt is two power minus ten times t scaled to [0,1]\nexport function tpmt(x) {\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\n}\n", "var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n", "var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return (t = +t) * t * (s * (t - 1) + t);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((t + 1) * s + t) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n", "import {tpmt} from \"./math.js\";\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * tpmt(-(--t)) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * tpmt(-t) * Math.sin((s - t) / p)\n        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n", "import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n", "import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n", "import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name \u201C__brush\u201D rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n", "export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n", "export var slice = Array.prototype.slice;\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\n", "export default function(a, b) {\n  return a - b;\n}\n", "export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n", "export default x => () => x;\n", "export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n", "export default function() {}\n", "import {extent, thresholdSturges, ticks, tickStep} from \"d3-array\";\nimport {slice} from \"./array.js\";\nimport ascending from \"./ascending.js\";\nimport area from \"./area.js\";\nimport constant from \"./constant.js\";\nimport contains from \"./contains.js\";\nimport noop from \"./noop.js\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      const e = extent(values), ts = tickStep(e[0], e[1], tz);\n      tz = ticks(Math.floor(e[0] / ts) * ts, Math.floor(e[1] / ts - 1) * ts, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(value => contour(values, value));\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n", "import {blur2, max, ticks} from \"d3-array\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport Contours from \"./contours.js\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function grid(data) {\n    var values = new Float32Array(n * m),\n        pow2k = Math.pow(2, -k),\n        i = -1;\n\n    for (const d of data) {\n      var xi = (x(d, ++i, data) + o) * pow2k,\n          yi = (y(d, i, data) + o) * pow2k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        var x0 = Math.floor(xi),\n            y0 = Math.floor(yi),\n            xt = xi - x0 - 0.5,\n            yt = yi - y0 - 0.5;\n        values[x0 + y0 * n] += (1 - xt) * (1 - yt) * wi;\n        values[x0 + 1 + y0 * n] += xt * (1 - yt) * wi;\n        values[x0 + 1 + (y0 + 1) * n] += xt * yt * wi;\n        values[x0 + (y0 + 1) * n] += (1 - xt) * yt * wi;\n      }\n    }\n\n    blur2({data: values, width: n, height: m}, r * pow2k);\n    return values;\n  }\n\n  function density(data) {\n    var values = grid(data),\n        tz = threshold(values),\n        pow4k = Math.pow(2, 2 * k);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = ticks(Number.MIN_VALUE, max(values) / pow4k, tz);\n    }\n\n    return Contours()\n        .size([n, m])\n        .thresholds(tz.map(d => d * pow4k))\n      (values)\n        .map((c, i) => (c.value = +tz[i], transform(c)));\n  }\n\n  density.contours = function(data) {\n    var values = grid(data),\n        contours = Contours().size([n, m]),\n        pow4k = Math.pow(2, 2 * k),\n        contour = value => {\n          value = +value;\n          var c = transform(contours.contour(values, value * pow4k));\n          c.value = value; // preserve exact threshold value\n          return c;\n        };\n    Object.defineProperty(contour, \"max\", {get: () => max(values) / pow4k});\n    return contour;\n  };\n\n  function transform(geometry) {\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = +_[0], _1 = +_[1];\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = (Math.sqrt(4 * _ * _ + 1) - 1) / 2, resize();\n  };\n\n  return density;\n}\n", "var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n", "import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n", "import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n", "export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();", "function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n", "import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n", "import text from \"./text.js\";\n\nfunction parser(type) {\n  return (input, init) => text(input, init)\n    .then(text => (new DOMParser).parseFromString(text, type));\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n", "export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n", "export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don\u2019t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n", "export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n", "export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n", "export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can\u2019t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn\u2019t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n", "export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n", "export default function() {\n  return this._root;\n}\n", "export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n", "export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n", "export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n", "import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n", "import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "export default function noop() {}\n", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n", "import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli\u2019s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n", "import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n", "import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n", "import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n", "import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n", "import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point\u2019s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n", "import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n", "import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n", "import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n", "export default x => x;\n", "import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n", "import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n", "import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n", "import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n", "import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n", "export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n", "import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n", "export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n", "import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n", "import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n", "import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n", "import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n", "import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n", "import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n", "import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n", "import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n", "function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n", "function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n", "export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n", "export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n", "export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n", "export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n", "export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n", "export default function() {\n  return Array.from(this);\n}\n", "export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n", "export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don\u2019t include the root\u2019s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n", "export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n", "import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n", "export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n", "import {optional} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {},\n    imputed = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId,\n      path;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        currentId = id,\n        currentParentId = parentId,\n        n,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    if (path != null) {\n      const I = nodes.map((d, i) => normalize(path(d, i, data)));\n      const P = I.map(parentof);\n      const S = new Set(I).add(\"\");\n      for (const i of P) {\n        if (!S.has(i)) {\n          S.add(i);\n          I.push(i);\n          P.push(parentof(i));\n          nodes.push(imputed);\n        }\n      }\n      currentId = (_, i) => I[i];\n      currentParentId = (_, i) => P[i];\n    }\n\n    for (i = 0, n = nodes.length; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = currentId(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = currentParentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n\n    // When imputing internal nodes, only introduce roots if needed.\n    // Then replace the imputed marker data with null.\n    if (path != null) {\n      while (root.data === imputed && root.children.length === 1) {\n        root = root.children[0], --n;\n      }\n      for (let i = nodes.length - 1; i >= 0; --i) {\n        node = nodes[i];\n        if (node.data !== imputed) break;\n        node.data = null;\n      }\n    }\n\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = optional(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = optional(x), stratify) : parentId;\n  };\n\n  stratify.path = function(x) {\n    return arguments.length ? (path = optional(x), stratify) : path;\n  };\n\n  return stratify;\n}\n\n// To normalize a path, we coerce to a string, strip the trailing slash if any\n// (as long as the trailing slash is not immediately preceded by another slash),\n// and add leading slash if missing.\nfunction normalize(path) {\n  path = `${path}`;\n  let i = path.length;\n  if (slash(path, i - 1) && !slash(path, i - 2)) path = path.slice(0, -1);\n  return path[0] === \"/\" ? path : `/${path}`;\n}\n\n// Walk backwards to find the first slash that is not the leading slash, e.g.:\n// \"/foo/bar\" \u21E5 \"/foo\", \"/foo\" \u21E5 \"/\", \"/\" \u21A6 \"\". (The root is special-cased\n// because the id of the root must be a truthy value.)\nfunction parentof(path) {\n  let i = path.length;\n  if (i < 2) return \"\";\n  while (--i > 1) if (slash(path, i)) break;\n  return path.slice(0, i);\n}\n\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\n// count the number of preceding backslashes escaping the forward slash: an odd\n// number indicates an escaped forward slash.\nfunction slash(path, i) {\n  if (path[i] === \"/\") {\n    let k = 0;\n    while (i > 0 && path[--i] === \"\\\\\") ++k;\n    if ((k & 1) === 0) return true;\n  }\n  return false;\n}\n", "import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-\u2019s ancestor is a sibling of v, returns vi-\u2019s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.\u2019s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n", "export default Math.random;\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomInt(source) {\n  function randomInt(min, max) {\n    if (arguments.length < 2) max = min, min = 0;\n    min = Math.floor(min);\n    max = Math.floor(max) - min;\n    return function() {\n      return Math.floor(source() * max + min);\n    };\n  }\n\n  randomInt.source = sourceRandomInt;\n\n  return randomInt;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\n\nexport default (function sourceRandomLogNormal(source) {\n  var N = normal.source(source);\n\n  function randomLogNormal() {\n    var randomNormal = N.apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    if ((n = +n) <= 0) return () => 0;\n    return function() {\n      for (var sum = 0, i = n; i > 1; --i) sum += source();\n      return sum + i * source();\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport irwinHall from \"./irwinHall.js\";\n\nexport default (function sourceRandomBates(source) {\n  var I = irwinHall.source(source);\n\n  function randomBates(n) {\n    // use limiting distribution at n === 0\n    if ((n = +n) === 0) return source;\n    var randomIrwinHall = I(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log1p(-source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomPareto(source) {\n  function randomPareto(alpha) {\n    if ((alpha = +alpha) < 0) throw new RangeError(\"invalid alpha\");\n    alpha = 1 / -alpha;\n    return function() {\n      return Math.pow(1 - source(), alpha);\n    };\n  }\n\n  randomPareto.source = sourceRandomPareto;\n\n  return randomPareto;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomBernoulli(source) {\n  function randomBernoulli(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n    return function() {\n      return Math.floor(source() + p);\n    };\n  }\n\n  randomBernoulli.source = sourceRandomBernoulli;\n\n  return randomBernoulli;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomGeometric(source) {\n  function randomGeometric(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n    if (p === 0) return () => Infinity;\n    if (p === 1) return () => 1;\n    p = Math.log1p(-p);\n    return function() {\n      return 1 + Math.floor(Math.log1p(-source()) / p);\n    };\n  }\n\n  randomGeometric.source = sourceRandomGeometric;\n\n  return randomGeometric;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\n\nexport default (function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\");\n    // degenerate distribution if k === 0\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta;\n    // exponential distribution if k === 1\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n        c = 1 / (3 * Math.sqrt(d)),\n        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function() {\n      do {\n        do {\n          var x = randomNormal(),\n              v = 1 + c * x;\n        } while (v <= 0);\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n      return d * v * multiplier() * theta;\n    };\n  }\n\n  randomGamma.source = sourceRandomGamma;\n\n  return randomGamma;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport gamma from \"./gamma.js\";\n\nexport default (function sourceRandomBeta(source) {\n  var G = gamma.source(source);\n\n  function randomBeta(alpha, beta) {\n    var X = G(alpha),\n        Y = G(beta);\n    return function() {\n      var x = X();\n      return x === 0 ? 0 : x / (x + Y());\n    };\n  }\n\n  randomBeta.source = sourceRandomBeta;\n\n  return randomBeta;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport beta from \"./beta.js\";\nimport geometric from \"./geometric.js\";\n\nexport default (function sourceRandomBinomial(source) {\n  var G = geometric.source(source),\n      B = beta.source(source);\n\n  function randomBinomial(n, p) {\n    n = +n;\n    if ((p = +p) >= 1) return () => n;\n    if (p <= 0) return () => 0;\n    return function() {\n      var acc = 0, nn = n, pp = p;\n      while (nn * pp > 16 && nn * (1 - pp) > 16) {\n        var i = Math.floor((nn + 1) * pp),\n            y = B(i, nn - i + 1)();\n        if (y <= pp) {\n          acc += i;\n          nn -= i;\n          pp = (pp - y) / (1 - y);\n        } else {\n          nn = i - 1;\n          pp /= y;\n        }\n      }\n      var sign = pp < 0.5,\n          pFinal = sign ? pp : 1 - pp,\n          g = G(pFinal);\n      for (var s = g(), k = 0; s <= nn; ++k) s += g();\n      return acc + (sign ? k : nn - k);\n    };\n  }\n\n  randomBinomial.source = sourceRandomBinomial;\n\n  return randomBinomial;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomWeibull(source) {\n  function randomWeibull(k, a, b) {\n    var outerFunc;\n    if ((k = +k) === 0) {\n      outerFunc = x => -Math.log(x);\n    } else {\n      k = 1 / k;\n      outerFunc = x => Math.pow(x, k);\n    }\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      return a + b * outerFunc(-Math.log1p(-source()));\n    };\n  }\n\n  randomWeibull.source = sourceRandomWeibull;\n\n  return randomWeibull;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomCauchy(source) {\n  function randomCauchy(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      return a + b * Math.tan(Math.PI * source());\n    };\n  }\n\n  randomCauchy.source = sourceRandomCauchy;\n\n  return randomCauchy;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomLogistic(source) {\n  function randomLogistic(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      var u = source();\n      return a + b * Math.log(u / (1 - u));\n    };\n  }\n\n  randomLogistic.source = sourceRandomLogistic;\n\n  return randomLogistic;\n})(defaultSource);\n", "import defaultSource from \"./defaultSource.js\";\nimport binomial from \"./binomial.js\";\nimport gamma from \"./gamma.js\";\n\nexport default (function sourceRandomPoisson(source) {\n  var G = gamma.source(source),\n      B = binomial.source(source);\n\n  function randomPoisson(lambda) {\n    return function() {\n      var acc = 0, l = lambda;\n      while (l > 16) {\n        var n = Math.floor(0.875 * l),\n            t = G(n)();\n        if (t > l) return acc + B(n - 1, l / t)();\n        acc += n;\n        l -= t;\n      }\n      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());\n      return acc + k;\n    };\n  }\n\n  randomPoisson.source = sourceRandomPoisson;\n\n  return randomPoisson;\n})(defaultSource);\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst mul = 0x19660D;\nconst inc = 0x3C6EF35F;\nconst eps = 1 / 0x100000000;\n\nexport default function lcg(seed = Math.random()) {\n  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\n  return () => (state = mul * state + inc | 0, eps * (state >>> 0));\n}\n", "export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n", "import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n", "import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n", "import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default scheme => interpolateRgbBasis(scheme[scheme.length - 1]);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n", "import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n", "export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n", "import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n", "import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n", "import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n", "export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n", "import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n", "export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n", "import { creator, select } from \"d3\";\nexport function Context({ document = window.document } = {}) {\n    return { document };\n}\nexport function create(name, { document }) {\n    return select(creator(name).call(document.documentElement));\n}\n", "export default function format(date, fallback) {\n  if (!(date instanceof Date)) date = new Date(+date);\n  if (isNaN(date)) return typeof fallback === \"function\" ? fallback(date) : fallback;\n  const hours = date.getUTCHours();\n  const minutes = date.getUTCMinutes();\n  const seconds = date.getUTCSeconds();\n  const milliseconds = date.getUTCMilliseconds();\n  return `${formatYear(date.getUTCFullYear(), 4)}-${pad(date.getUTCMonth() + 1, 2)}-${pad(date.getUTCDate(), 2)}${\n    hours || minutes || seconds || milliseconds ? `T${pad(hours, 2)}:${pad(minutes, 2)}${\n      seconds || milliseconds ? `:${pad(seconds, 2)}${\n        milliseconds ? `.${pad(milliseconds, 3)}` : ``\n      }` : ``\n    }Z` : ``\n  }`;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? `-${pad(-year, 6)}`\n    : year > 9999 ? `+${pad(year, 6)}`\n    : pad(year, 4);\n}\n\nfunction pad(value, width) {\n  return `${value}`.padStart(width, \"0\");\n}\n", "const re = /^(?:[-+]\\d{2})?\\d{4}(?:-\\d{2}(?:-\\d{2})?)?(?:T\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d{3})?)?(?:Z|[-+]\\d{2}:?\\d{2})?)?$/;\n\nexport default function parse(string, fallback) {\n  if (!re.test(string += \"\")) return typeof fallback === \"function\" ? fallback(string) : fallback;\n  return new Date(string);\n}\n", "import { parse as isoParse } from \"isoformat\";\nimport { color, descending, quantile } from \"d3\";\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\nconst TypedArray = Object.getPrototypeOf(Uint8Array);\nconst objectToString = Object.prototype.toString;\n/**\n * Given an iterable *data* and some *value* accessor, returns an array (a\n * column) of the specified *type* with the corresponding value of each element\n * of the data. The *value* accessor may be one of the following types:\n *\n * * a string - corresponding to the field accessor (`d => d[value]`)\n * * an accessor function - called as *type*.from(*data*, *value*)\n * * a number, Date, or boolean \u2014 resulting in an array uniformly filled with\n *   the *value*\n * * an object with a transform method \u2014 called as *value*.transform(*data*)\n * * an array of values - returning the same\n * * null or undefined - returning the same\n *\n * If *type* is specified, it must be Array or a similar class that implements\n * the\n * [Array.from](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from)\n * interface such as a typed array. When *type* is Array or a typed array class,\n * the return value of valueof will be an instance of the same (or null or\n * undefined). If *type* is not specified, valueof may return either an array or\n * a typed array (or null or undefined).\n *\n * Plot.valueof is not guaranteed to return a new array. When a transform method\n * is used, or when the given *value* is an array that is compatible with the\n * requested *type*, the array may be returned as-is without making a copy.\n */\nexport function valueof(data, value, type) {\n    const valueType = typeof value;\n    return valueType === \"string\"\n        ? map(data, field(value), type)\n        : valueType === \"function\"\n            ? map(data, value, type)\n            : valueType === \"number\" || value instanceof Date || valueType === \"boolean\"\n                ? map(data, constant(value), type)\n                : value && typeof value.transform === \"function\"\n                    ? arrayify(value.transform(data), type)\n                    : arrayify(value, type); // preserve undefined type\n}\nexport const field = (name) => (d) => d[name];\nexport const indexOf = (d, i) => i;\nexport const identity = { transform: (d) => d };\nexport const zero = () => 0;\nexport const one = () => 1;\nexport const yes = () => true;\nexport const string = (x) => (x == null ? x : `${x}`);\nexport const number = (x) => (x == null ? x : +x);\nexport const boolean = (x) => (x == null ? x : !!x);\nexport const first = (x) => (x ? x[0] : undefined);\nexport const second = (x) => (x ? x[1] : undefined);\nexport const constant = (x) => () => x;\n// Converts a string like \u201Cp25\u201D into a function that takes an index I and an\n// accessor function f, returning the corresponding percentile value.\nexport function percentile(reduce) {\n    const p = +`${reduce}`.slice(1) / 100;\n    return (I, f) => quantile(I, p, f);\n}\n// Some channels may allow a string constant to be specified; to differentiate\n// string constants (e.g., \"red\") from named fields (e.g., \"date\"), this\n// function tests whether the given value is a CSS color string and returns a\n// tuple [channel, constant] where one of the two is undefined, and the other is\n// the given value. If you wish to reference a named field that is also a valid\n// CSS color, use an accessor (d => d.red) instead.\nexport function maybeColorChannel(value, defaultValue) {\n    if (value === undefined)\n        value = defaultValue;\n    return value === null ? [undefined, \"none\"] : isColor(value) ? [undefined, value] : [value, undefined];\n}\n// Similar to maybeColorChannel, this tests whether the given value is a number\n// indicating a constant, and otherwise assumes that it\u2019s a channel value.\nexport function maybeNumberChannel(value, defaultValue) {\n    if (value === undefined)\n        value = defaultValue;\n    return value === null || typeof value === \"number\" ? [undefined, value] : [value, undefined];\n}\n// Validates the specified optional string against the allowed list of keywords.\nexport function maybeKeyword(input, name, allowed) {\n    if (input != null)\n        return keyword(input, name, allowed);\n}\n// Validates the specified required string against the allowed list of keywords.\nexport function keyword(input, name, allowed) {\n    const i = `${input}`.toLowerCase();\n    if (!allowed.includes(i))\n        throw new Error(`invalid ${name}: ${input}`);\n    return i;\n}\n// Promotes the specified data to an array or typed array as needed. If an array\n// type is provided (e.g., Array), then the returned array will strictly be of\n// the specified type; otherwise, any array or typed array may be returned. If\n// the specified data is null or undefined, returns the value as-is.\nexport function arrayify(data, type) {\n    return data == null\n        ? data\n        : type === undefined\n            ? data instanceof Array || data instanceof TypedArray\n                ? data\n                : Array.from(data)\n            : data instanceof type\n                ? data\n                : type.from(data);\n}\n// An optimization of type.from(values, f): if the given values are already an\n// instanceof the desired array type, the faster values.map method is used.\nexport function map(values, f, type = Array) {\n    return values instanceof type ? values.map(f) : type.from(values, f);\n}\n// An optimization of type.from(values): if the given values are already an\n// instanceof the desired array type, the faster values.slice method is used.\nexport function slice(values, type = Array) {\n    return values instanceof type ? values.slice() : type.from(values);\n}\nexport function isTypedArray(values) {\n    return values instanceof TypedArray;\n}\n// Disambiguates an options object (e.g., {y: \"x2\"}) from a primitive value.\nexport function isObject(option) {\n    return option?.toString === objectToString;\n}\n// Disambiguates a scale options object (e.g., {color: {type: \"linear\"}}) from\n// some other option (e.g., {color: \"red\"}). When creating standalone legends,\n// this is used to test whether a scale is defined; this should be consistent\n// with inferScaleType when there are no channels associated with the scale, and\n// if this returns true, then normalizeScale must return non-null.\nexport function isScaleOptions(option) {\n    return isObject(option) && (option.type !== undefined || option.domain !== undefined);\n}\n// Disambiguates an options object (e.g., {y: \"x2\"}) from a channel value\n// definition expressed as a channel transform (e.g., {transform: \u2026}).\nexport function isOptions(option) {\n    return isObject(option) && typeof option.transform !== \"function\";\n}\n// Disambiguates a sort transform (e.g., {sort: \"date\"}) from a channel domain\n// sort definition (e.g., {sort: {y: \"x\"}}).\nexport function isDomainSort(sort) {\n    return isOptions(sort) && sort.value === undefined && sort.channel === undefined;\n}\n// For marks specified either as [0, x] or [x1, x2], such as areas and bars.\nexport function maybeZero(x, x1, x2, x3 = identity) {\n    if (x1 === undefined && x2 === undefined) {\n        // {x} or {}\n        (x1 = 0), (x2 = x === undefined ? x3 : x);\n    }\n    else if (x1 === undefined) {\n        // {x, x2} or {x2}\n        x1 = x === undefined ? 0 : x;\n    }\n    else if (x2 === undefined) {\n        // {x, x1} or {x1}\n        x2 = x === undefined ? 0 : x;\n    }\n    return [x1, x2];\n}\n// For marks that have x and y channels (e.g., cell, dot, line, text).\nexport function maybeTuple(x, y) {\n    return x === undefined && y === undefined ? [first, second] : [x, y];\n}\n// A helper for extracting the z channel, if it is variable. Used by transforms\n// that require series, such as moving average and normalize.\nexport function maybeZ({ z, fill, stroke } = {}) {\n    if (z === undefined)\n        [z] = maybeColorChannel(fill);\n    if (z === undefined)\n        [z] = maybeColorChannel(stroke);\n    return z;\n}\n// Returns a Uint32Array with elements [0, 1, 2, \u2026 data.length - 1].\nexport function range(data) {\n    const n = data.length;\n    const r = new Uint32Array(n);\n    for (let i = 0; i < n; ++i)\n        r[i] = i;\n    return r;\n}\n// Returns a filtered range of data given the test function.\nexport function where(data, test) {\n    return range(data).filter((i) => test(data[i], i, data));\n}\n// Returns an array [values[index[0]], values[index[1]], \u2026].\nexport function take(values, index) {\n    return map(index, (i) => values[i]);\n}\n// Based on InternMap (d3.group).\nexport function keyof(value) {\n    return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\nexport function maybeInput(key, options) {\n    if (options[key] !== undefined)\n        return options[key];\n    switch (key) {\n        case \"x1\":\n        case \"x2\":\n            key = \"x\";\n            break;\n        case \"y1\":\n        case \"y2\":\n            key = \"y\";\n            break;\n    }\n    return options[key];\n}\n/**\n * This helper for constructing derived columns returns a [*column*,\n * *setColumn*] array. The *column* object implements *column*.transform,\n * returning whatever value was most recently passed to *setColumn*. If\n * *setColumn* is not called, then *column*.transform returns undefined. If a\n * *source* is specified, then *column*.label exposes the given *source*\u2019s\n * label, if any: if *source* is a string as when representing a named field of\n * data, then *column*.label is *source*; otherwise *column*.label propagates\n * *source*.label. This allows derived columns to propagate a human-readable\n * axis or legend label.\n *\n * Plot.column is typically used by options transforms to define new channels;\n * the associated columns are populated (derived) when the **transform** option\n * function is invoked.\n */\nexport function column(source) {\n    // Defines a column whose values are lazily populated by calling the returned\n    // setter. If the given source is labeled, the label is propagated to the\n    // returned column definition.\n    let value;\n    return [\n        {\n            transform: () => value,\n            label: labelof(source)\n        },\n        (v) => (value = v)\n    ];\n}\n// Like column, but allows the source to be null.\nexport function maybeColumn(source) {\n    return source == null ? [source] : column(source);\n}\nexport function labelof(value, defaultValue) {\n    return typeof value === \"string\" ? value : value && value.label !== undefined ? value.label : defaultValue;\n}\n// Assuming that both x1 and x2 and lazy columns (per above), this derives a new\n// a column that\u2019s the average of the two, and which inherits the column label\n// (if any). Both input columns are assumed to be quantitative. If either column\n// is temporal, the returned column is also temporal.\nexport function mid(x1, x2) {\n    return {\n        transform(data) {\n            const X1 = x1.transform(data);\n            const X2 = x2.transform(data);\n            return isTemporal(X1) || isTemporal(X2)\n                ? map(X1, (_, i) => new Date((+X1[i] + +X2[i]) / 2))\n                : map(X1, (_, i) => (+X1[i] + +X2[i]) / 2, Float64Array);\n        },\n        label: x1.label\n    };\n}\n// This distinguishes between per-dimension options and a standalone value.\nexport function maybeValue(value) {\n    return value === undefined || isOptions(value) ? value : { value };\n}\n// Coerces the given channel values (if any) to numbers. This is useful when\n// values will be interpolated into other code, such as an SVG transform, and\n// where we don\u2019t wish to allow unexpected behavior for weird input.\nexport function numberChannel(source) {\n    return source == null\n        ? null\n        : {\n            transform: (data) => valueof(data, source, Float64Array),\n            label: labelof(source)\n        };\n}\nexport function isIterable(value) {\n    return value && typeof value[Symbol.iterator] === \"function\";\n}\nexport function isTextual(values) {\n    for (const value of values) {\n        if (value == null)\n            continue;\n        return typeof value !== \"object\" || value instanceof Date;\n    }\n}\nexport function isOrdinal(values) {\n    for (const value of values) {\n        if (value == null)\n            continue;\n        const type = typeof value;\n        return type === \"string\" || type === \"boolean\";\n    }\n}\nexport function isTemporal(values) {\n    for (const value of values) {\n        if (value == null)\n            continue;\n        return value instanceof Date;\n    }\n}\n// Are these strings that might represent dates? This is stricter than ISO 8601\n// because we want to ignore false positives on numbers; for example, the string\n// \"1192\" is more likely to represent a number than a date even though it is\n// valid ISO 8601 representing 1192-01-01.\nexport function isTemporalString(values) {\n    for (const value of values) {\n        if (value == null)\n            continue;\n        return typeof value === \"string\" && isNaN(value) && isoParse(value);\n    }\n}\n// Are these strings that might represent numbers? This is stricter than\n// coercion because we want to ignore false positives on e.g. empty strings.\nexport function isNumericString(values) {\n    for (const value of values) {\n        if (value == null || value === \"\")\n            continue;\n        return typeof value === \"string\" && !isNaN(value);\n    }\n}\nexport function isNumeric(values) {\n    for (const value of values) {\n        if (value == null)\n            continue;\n        return typeof value === \"number\";\n    }\n}\nexport function isFirst(values, is) {\n    for (const value of values) {\n        if (value == null)\n            continue;\n        return is(value);\n    }\n}\n// Whereas isFirst only tests the first defined value and returns undefined for\n// an empty array, this tests all defined values and only returns true if all of\n// them are valid colors. It also returns true for an empty array, and thus\n// should generally be used in conjunction with isFirst.\nexport function isEvery(values, is) {\n    for (const value of values) {\n        if (value == null)\n            continue;\n        if (!is(value))\n            return false;\n    }\n    return true;\n}\n// Mostly relies on d3-color, with a few extra color keywords. Currently this\n// strictly requires that the value be a string; we might want to apply string\n// coercion here, though note that d3-color instances would need to support\n// valueOf to work correctly with InternMap.\n// https://www.w3.org/TR/SVG11/painting.html#SpecifyingPaint\nexport function isColor(value) {\n    if (typeof value !== \"string\")\n        return false;\n    value = value.toLowerCase().trim();\n    return (value === \"none\" ||\n        value === \"currentcolor\" ||\n        (value.startsWith(\"url(\") && value.endsWith(\")\")) || // <funciri>, e.g. pattern or gradient\n        (value.startsWith(\"var(\") && value.endsWith(\")\")) || // CSS variable\n        color(value) !== null);\n}\nexport function isNoneish(value) {\n    return value == null || isNone(value);\n}\nexport function isNone(value) {\n    return /^\\s*none\\s*$/i.test(value);\n}\nexport function isRound(value) {\n    return /^\\s*round\\s*$/i.test(value);\n}\nexport function maybeFrameAnchor(value = \"middle\") {\n    return keyword(value, \"frameAnchor\", [\n        \"middle\",\n        \"top-left\",\n        \"top\",\n        \"top-right\",\n        \"right\",\n        \"bottom-right\",\n        \"bottom\",\n        \"bottom-left\",\n        \"left\"\n    ]);\n}\n// Like a sort comparator, returns a positive value if the given array of values\n// is in ascending order, a negative value if the values are in descending\n// order. Assumes monotonicity; only tests the first and last values.\nexport function order(values) {\n    if (values == null)\n        return;\n    const first = values[0];\n    const last = values[values.length - 1];\n    return descending(first, last);\n}\n// Unlike {...defaults, ...options}, this ensures that any undefined (but\n// present) properties in options inherit the given default value.\nexport function inherit(options = {}, ...rest) {\n    let o = options;\n    for (const defaults of rest) {\n        for (const key in defaults) {\n            if (o[key] === undefined) {\n                const value = defaults[key];\n                if (o === options)\n                    o = { ...o, [key]: value };\n                else\n                    o[key] = value;\n            }\n        }\n    }\n    return o;\n}\n// Given an iterable of named things (objects with a name property), returns a\n// corresponding object with properties associated with the given name.\nexport function Named(things) {\n    console.warn(\"named iterables are deprecated; please use an object instead\");\n    const names = new Set();\n    return Object.fromEntries(Array.from(things, (thing) => {\n        const { name } = thing;\n        if (name == null)\n            throw new Error(\"missing name\");\n        const key = `${name}`;\n        if (key === \"__proto__\")\n            throw new Error(`illegal name: ${key}`);\n        if (names.has(key))\n            throw new Error(`duplicate name: ${key}`);\n        names.add(key);\n        return [name, thing];\n    }));\n}\nexport function maybeNamed(things) {\n    return isIterable(things) ? Named(things) : things;\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function memoize1(compute) {\n    let cacheValue, cacheKeys;\n    return (...keys) => {\n        if (cacheKeys?.length !== keys.length || cacheKeys.some((k, i) => k !== keys[i])) {\n            cacheKeys = keys;\n            cacheValue = compute(...keys);\n        }\n        return cacheValue;\n    };\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { format as isoFormat } from \"isoformat\";\nimport { string } from \"./options.js\";\nimport { memoize1 } from \"./memoize.js\";\nconst numberFormat = memoize1((locale) => new Intl.NumberFormat(locale));\nconst monthFormat = memoize1((locale, month) => new Intl.DateTimeFormat(locale, { timeZone: \"UTC\", ...(month && { month }) }));\nconst weekdayFormat = memoize1((locale, weekday) => new Intl.DateTimeFormat(locale, { timeZone: \"UTC\", ...(weekday && { weekday }) }));\nexport function formatNumber(locale = \"en-US\") {\n    const format = numberFormat(locale);\n    return (i) => (i != null && !isNaN(i) ? format.format(i) : undefined);\n}\n/**\n * ```js\n * Plot.formatMonth(\"es-MX\", \"long\")(0) // \"enero\"\n * ```\n *\n * Returns a function that formats a given month number (from 0 = January to 11\n * = December) according to the specified *locale* and *format*. The *locale* is\n * a [BCP 47 language tag](https://tools.ietf.org/html/bcp47) and defaults to\n * U.S. English. The *format* is a [month\n * format](https://tc39.es/ecma402/#datetimeformat-objects): either *2-digit*,\n * *numeric*, *narrow*, *short*, *long*; if not specified, it defaults to\n * *short*.\n */\nexport function formatMonth(locale = \"en-US\", format = \"short\") {\n    const fmt = monthFormat(locale, format);\n    return (i) => i != null && !isNaN((i = +new Date(Date.UTC(2000, +i)))) ? fmt.format(i) : undefined;\n}\n/**\n * ```js\n * Plot.formatWeekday(\"es-MX\", \"long\")(0) // \"domingo\"\n * ```\n *\n * Returns a function that formats a given week day number (from 0 = Sunday to 6\n * = Saturday) according to the specified *locale* and *format*. The *locale* is\n * a [BCP 47 language tag](https://tools.ietf.org/html/bcp47) and defaults to\n * U.S. English. The *format* is a [weekday\n * format](https://tc39.es/ecma402/#datetimeformat-objects): either *narrow*,\n * *short*, or *long*; if not specified, it defaults to *short*.\n */\nexport function formatWeekday(locale = \"en-US\", format = \"short\") {\n    const fmt = weekdayFormat(locale, format);\n    return (i) => i != null && !isNaN((i = +new Date(Date.UTC(2001, 0, +i)))) ? fmt.format(i) : undefined;\n}\n/**\n * ```js\n * Plot.formatIsoDate(new Date(\"2020-01-01T00:00.000Z\")) // \"2020-01-01\"\n * ```\n *\n * Given a *date*, returns the shortest equivalent ISO 8601 UTC string. If the\n * given *date* is not valid, returns `\"Invalid Date\"`.\n */\nexport function formatIsoDate(date) {\n    return isoFormat(date, \"Invalid Date\");\n}\nexport function formatAuto(locale = \"en-US\") {\n    const number = formatNumber(locale);\n    return (v) => (v instanceof Date ? formatIsoDate : typeof v === \"number\" ? number : string)(v);\n}\n// TODO When Plot supports a top-level locale option, this should be removed\n// because it lacks context to know which locale to use; formatAuto should be\n// used instead whenever possible.\nexport const formatDefault = formatAuto();\n", "export const radians = Math.PI / 180;\n", "import { ascending, descending } from \"d3\";\nexport function defined(x) {\n    return x != null && !Number.isNaN(x);\n}\nexport function ascendingDefined(a, b) {\n    return +defined(b) - +defined(a) || ascending(a, b);\n}\nexport function descendingDefined(a, b) {\n    return +defined(b) - +defined(a) || descending(a, b);\n}\nexport function nonempty(x) {\n    return x != null && `${x}` !== \"\";\n}\nexport function finite(x) {\n    return isFinite(x) ? x : NaN;\n}\nexport function positive(x) {\n    return x > 0 && isFinite(x) ? x : NaN;\n}\nexport function negative(x) {\n    return x < 0 && isFinite(x) ? x : NaN;\n}\n", "let warnings = 0;\nexport function consumeWarnings() {\n    const w = warnings;\n    warnings = 0;\n    return w;\n}\nexport function warn(message) {\n    console.warn(message);\n    ++warnings;\n}\n", "import { group, namespaces } from \"d3\";\nimport { defined, nonempty } from \"./defined.js\";\nimport { formatDefault } from \"./format.js\";\nimport { string, number, maybeColorChannel, maybeNumberChannel, isNoneish, isNone, isRound, keyof } from \"./options.js\";\nimport { warn } from \"./warnings.js\";\nexport const offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5;\nlet nextClipId = 0;\nexport function styles(mark, { title, href, ariaLabel: variaLabel, ariaDescription, ariaHidden, target, fill, fillOpacity, stroke, strokeWidth, strokeOpacity, strokeLinejoin, strokeLinecap, strokeMiterlimit, strokeDasharray, strokeDashoffset, opacity, mixBlendMode, paintOrder, pointerEvents, shapeRendering }, { ariaLabel: cariaLabel, fill: defaultFill = \"currentColor\", fillOpacity: defaultFillOpacity, stroke: defaultStroke = \"none\", strokeOpacity: defaultStrokeOpacity, strokeWidth: defaultStrokeWidth, strokeLinecap: defaultStrokeLinecap, strokeLinejoin: defaultStrokeLinejoin, strokeMiterlimit: defaultStrokeMiterlimit, paintOrder: defaultPaintOrder }) {\n    // Some marks don\u2019t support fill (e.g., tick and rule).\n    if (defaultFill === null) {\n        fill = null;\n        fillOpacity = null;\n    }\n    // Some marks don\u2019t support stroke (e.g., image).\n    if (defaultStroke === null) {\n        stroke = null;\n        strokeOpacity = null;\n    }\n    // Some marks default to fill with no stroke, while others default to stroke\n    // with no fill. For example, bar and area default to fill, while dot and line\n    // default to stroke. For marks that fill by default, the default fill only\n    // applies if the stroke is (constant) none; if you set a stroke, then the\n    // default fill becomes none. Similarly for marks that stroke by stroke, the\n    // default stroke only applies if the fill is (constant) none.\n    if (isNoneish(defaultFill)) {\n        if (!isNoneish(defaultStroke) && !isNoneish(fill))\n            defaultStroke = \"none\";\n    }\n    else {\n        if (isNoneish(defaultStroke) && !isNoneish(stroke))\n            defaultFill = \"none\";\n    }\n    const [vfill, cfill] = maybeColorChannel(fill, defaultFill);\n    const [vfillOpacity, cfillOpacity] = maybeNumberChannel(fillOpacity, defaultFillOpacity);\n    const [vstroke, cstroke] = maybeColorChannel(stroke, defaultStroke);\n    const [vstrokeOpacity, cstrokeOpacity] = maybeNumberChannel(strokeOpacity, defaultStrokeOpacity);\n    const [vopacity, copacity] = maybeNumberChannel(opacity);\n    // For styles that have no effect if there is no stroke, only apply the\n    // defaults if the stroke is not the constant none. (If stroke is a channel,\n    // then cstroke will be undefined, but there\u2019s still a stroke; hence we don\u2019t\n    // use isNoneish here.)\n    if (!isNone(cstroke)) {\n        if (strokeWidth === undefined)\n            strokeWidth = defaultStrokeWidth;\n        if (strokeLinecap === undefined)\n            strokeLinecap = defaultStrokeLinecap;\n        if (strokeLinejoin === undefined)\n            strokeLinejoin = defaultStrokeLinejoin;\n        // The default stroke miterlimit need not be applied if the current stroke\n        // is the constant round; this only has effect on miter joins.\n        if (strokeMiterlimit === undefined && !isRound(strokeLinejoin))\n            strokeMiterlimit = defaultStrokeMiterlimit;\n        // The paint order only takes effect if there is both a fill and a stroke\n        // (at least if we ignore markers, which no built-in marks currently use).\n        if (!isNone(cfill) && paintOrder === undefined)\n            paintOrder = defaultPaintOrder;\n    }\n    const [vstrokeWidth, cstrokeWidth] = maybeNumberChannel(strokeWidth);\n    // Some marks don\u2019t support fill (e.g., tick and rule).\n    if (defaultFill !== null) {\n        mark.fill = impliedString(cfill, \"currentColor\");\n        mark.fillOpacity = impliedNumber(cfillOpacity, 1);\n    }\n    // Some marks don\u2019t support stroke (e.g., image).\n    if (defaultStroke !== null) {\n        mark.stroke = impliedString(cstroke, \"none\");\n        mark.strokeWidth = impliedNumber(cstrokeWidth, 1);\n        mark.strokeOpacity = impliedNumber(cstrokeOpacity, 1);\n        mark.strokeLinejoin = impliedString(strokeLinejoin, \"miter\");\n        mark.strokeLinecap = impliedString(strokeLinecap, \"butt\");\n        mark.strokeMiterlimit = impliedNumber(strokeMiterlimit, 4);\n        mark.strokeDasharray = impliedString(strokeDasharray, \"none\");\n        mark.strokeDashoffset = impliedString(strokeDashoffset, \"0\");\n    }\n    mark.target = string(target);\n    mark.ariaLabel = string(cariaLabel);\n    mark.ariaDescription = string(ariaDescription);\n    mark.ariaHidden = string(ariaHidden);\n    mark.opacity = impliedNumber(copacity, 1);\n    mark.mixBlendMode = impliedString(mixBlendMode, \"normal\");\n    mark.paintOrder = impliedString(paintOrder, \"normal\");\n    mark.pointerEvents = impliedString(pointerEvents, \"auto\");\n    mark.shapeRendering = impliedString(shapeRendering, \"auto\");\n    return {\n        title: { value: title, optional: true },\n        href: { value: href, optional: true },\n        ariaLabel: { value: variaLabel, optional: true },\n        fill: { value: vfill, scale: \"color\", optional: true },\n        fillOpacity: { value: vfillOpacity, scale: \"opacity\", optional: true },\n        stroke: { value: vstroke, scale: \"color\", optional: true },\n        strokeOpacity: { value: vstrokeOpacity, scale: \"opacity\", optional: true },\n        strokeWidth: { value: vstrokeWidth, optional: true },\n        opacity: { value: vopacity, scale: \"opacity\", optional: true }\n    };\n}\n// Applies the specified titles via selection.call.\nexport function applyTitle(selection, L) {\n    if (L)\n        selection\n            .filter((i) => nonempty(L[i]))\n            .append(\"title\")\n            .call(applyText, L);\n}\n// Like applyTitle, but for grouped data (lines, areas).\nexport function applyTitleGroup(selection, L) {\n    if (L)\n        selection\n            .filter(([i]) => nonempty(L[i]))\n            .append(\"title\")\n            .call(applyTextGroup, L);\n}\nexport function applyText(selection, T) {\n    if (T)\n        selection.text((i) => formatDefault(T[i]));\n}\nexport function applyTextGroup(selection, T) {\n    if (T)\n        selection.text(([i]) => formatDefault(T[i]));\n}\nexport function applyChannelStyles(selection, { target }, { ariaLabel: AL, title: T, fill: F, fillOpacity: FO, stroke: S, strokeOpacity: SO, strokeWidth: SW, opacity: O, href: H }) {\n    if (AL)\n        applyAttr(selection, \"aria-label\", (i) => AL[i]);\n    if (F)\n        applyAttr(selection, \"fill\", (i) => F[i]);\n    if (FO)\n        applyAttr(selection, \"fill-opacity\", (i) => FO[i]);\n    if (S)\n        applyAttr(selection, \"stroke\", (i) => S[i]);\n    if (SO)\n        applyAttr(selection, \"stroke-opacity\", (i) => SO[i]);\n    if (SW)\n        applyAttr(selection, \"stroke-width\", (i) => SW[i]);\n    if (O)\n        applyAttr(selection, \"opacity\", (i) => O[i]);\n    if (H)\n        applyHref(selection, (i) => H[i], target);\n    applyTitle(selection, T);\n}\nexport function applyGroupedChannelStyles(selection, { target }, { ariaLabel: AL, title: T, fill: F, fillOpacity: FO, stroke: S, strokeOpacity: SO, strokeWidth: SW, opacity: O, href: H }) {\n    if (AL)\n        applyAttr(selection, \"aria-label\", ([i]) => AL[i]);\n    if (F)\n        applyAttr(selection, \"fill\", ([i]) => F[i]);\n    if (FO)\n        applyAttr(selection, \"fill-opacity\", ([i]) => FO[i]);\n    if (S)\n        applyAttr(selection, \"stroke\", ([i]) => S[i]);\n    if (SO)\n        applyAttr(selection, \"stroke-opacity\", ([i]) => SO[i]);\n    if (SW)\n        applyAttr(selection, \"stroke-width\", ([i]) => SW[i]);\n    if (O)\n        applyAttr(selection, \"opacity\", ([i]) => O[i]);\n    if (H)\n        applyHref(selection, ([i]) => H[i], target);\n    applyTitleGroup(selection, T);\n}\nfunction groupAesthetics({ ariaLabel: AL, title: T, fill: F, fillOpacity: FO, stroke: S, strokeOpacity: SO, strokeWidth: SW, opacity: O, href: H }) {\n    return [AL, T, F, FO, S, SO, SW, O, H].filter((c) => c !== undefined);\n}\nexport function groupZ(I, Z, z) {\n    const G = group(I, (i) => Z[i]);\n    if (z === undefined && G.size > I.length >> 1) {\n        warn(`Warning: the implicit z channel has high cardinality. This may occur when the fill or stroke channel is associated with quantitative data rather than ordinal or categorical data. You can suppress this warning by setting the z option explicitly; if this data represents a single series, set z to null.`);\n    }\n    return G.values();\n}\nexport function* groupIndex(I, position, { z }, channels) {\n    const { z: Z } = channels; // group channel\n    const A = groupAesthetics(channels); // aesthetic channels\n    const C = [...position, ...A]; // all channels\n    // Group the current index by Z (if any).\n    for (const G of Z ? groupZ(I, Z, z) : [I]) {\n        let Ag; // the A-values (aesthetics) of the current group, if any\n        let Gg; // the current group index (a subset of G, and I), if any\n        out: for (const i of G) {\n            // If any channel has an undefined value for this index, skip it.\n            for (const c of C) {\n                if (!defined(c[i])) {\n                    if (Gg)\n                        Gg.push(-1);\n                    continue out;\n                }\n            }\n            // Otherwise, if this is a new group, record the aesthetics for this\n            // group. Yield the current group and start a new one.\n            if (Ag === undefined) {\n                if (Gg)\n                    yield Gg;\n                (Ag = A.map((c) => keyof(c[i]))), (Gg = [i]);\n                continue;\n            }\n            // Otherwise, add the current index to the current group. Then, if any of\n            // the aesthetics don\u2019t match the current group, yield the current group\n            // and start a new group of the current index.\n            Gg.push(i);\n            for (let j = 0; j < A.length; ++j) {\n                const k = keyof(A[j][i]);\n                if (k !== Ag[j]) {\n                    yield Gg;\n                    (Ag = A.map((c) => keyof(c[i]))), (Gg = [i]);\n                    continue out;\n                }\n            }\n        }\n        // Yield the current group, if any.\n        if (Gg)\n            yield Gg;\n    }\n}\n// clip: true clips to the frame\n// TODO: accept other types of clips (paths, urls, x, y, other marks?\u2026)\n// https://github.com/observablehq/plot/issues/181\nexport function maybeClip(clip) {\n    if (clip === true)\n        return \"frame\";\n    if (clip == null || clip === false)\n        return false;\n    throw new Error(`invalid clip method: ${clip}`);\n}\nexport function applyIndirectStyles(selection, mark, scales, dimensions) {\n    applyAttr(selection, \"aria-label\", mark.ariaLabel);\n    applyAttr(selection, \"aria-description\", mark.ariaDescription);\n    applyAttr(selection, \"aria-hidden\", mark.ariaHidden);\n    applyAttr(selection, \"fill\", mark.fill);\n    applyAttr(selection, \"fill-opacity\", mark.fillOpacity);\n    applyAttr(selection, \"stroke\", mark.stroke);\n    applyAttr(selection, \"stroke-width\", mark.strokeWidth);\n    applyAttr(selection, \"stroke-opacity\", mark.strokeOpacity);\n    applyAttr(selection, \"stroke-linejoin\", mark.strokeLinejoin);\n    applyAttr(selection, \"stroke-linecap\", mark.strokeLinecap);\n    applyAttr(selection, \"stroke-miterlimit\", mark.strokeMiterlimit);\n    applyAttr(selection, \"stroke-dasharray\", mark.strokeDasharray);\n    applyAttr(selection, \"stroke-dashoffset\", mark.strokeDashoffset);\n    applyAttr(selection, \"shape-rendering\", mark.shapeRendering);\n    applyAttr(selection, \"paint-order\", mark.paintOrder);\n    applyAttr(selection, \"pointer-events\", mark.pointerEvents);\n    if (mark.clip === \"frame\") {\n        const { x, y } = scales;\n        const { width, height, marginLeft, marginRight, marginTop, marginBottom } = dimensions;\n        const id = `plot-clip-${++nextClipId}`;\n        selection\n            .attr(\"clip-path\", `url(#${id})`)\n            .append(\"clipPath\")\n            .attr(\"id\", id)\n            .append(\"rect\")\n            .attr(\"x\", marginLeft - (x?.bandwidth ? x.bandwidth() / 2 : 0))\n            .attr(\"y\", marginTop - (y?.bandwidth ? y.bandwidth() / 2 : 0))\n            .attr(\"width\", width - marginRight - marginLeft)\n            .attr(\"height\", height - marginTop - marginBottom);\n    }\n}\nexport function applyDirectStyles(selection, mark) {\n    applyStyle(selection, \"mix-blend-mode\", mark.mixBlendMode);\n    applyAttr(selection, \"opacity\", mark.opacity);\n}\nfunction applyHref(selection, href, target) {\n    selection.each(function (i) {\n        const h = href(i);\n        if (h != null) {\n            const a = this.ownerDocument.createElementNS(namespaces.svg, \"a\");\n            a.setAttribute(\"fill\", \"inherit\");\n            a.setAttributeNS(namespaces.xlink, \"href\", h);\n            if (target != null)\n                a.setAttribute(\"target\", target);\n            this.parentNode.insertBefore(a, this).appendChild(this);\n        }\n    });\n}\nexport function applyAttr(selection, name, value) {\n    if (value != null)\n        selection.attr(name, value);\n}\nexport function applyStyle(selection, name, value) {\n    if (value != null)\n        selection.style(name, value);\n}\nexport function applyTransform(selection, mark, { x, y }, tx = offset, ty = offset) {\n    tx += mark.dx;\n    ty += mark.dy;\n    if (x?.bandwidth)\n        tx += x.bandwidth() / 2;\n    if (y?.bandwidth)\n        ty += y.bandwidth() / 2;\n    if (tx || ty)\n        selection.attr(\"transform\", `translate(${tx},${ty})`);\n}\nexport function impliedString(value, impliedValue) {\n    if ((value = string(value)) !== impliedValue)\n        return value;\n}\nexport function impliedNumber(value, impliedValue) {\n    if ((value = number(value)) !== impliedValue)\n        return value;\n}\nconst validClassName = /^-?([_a-z]|[\\240-\\377]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\t\\r\\n\\f])?|\\\\[^\\r\\n\\f0-9a-f])([_a-z0-9-]|[\\240-\\377]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\t\\r\\n\\f])?|\\\\[^\\r\\n\\f0-9a-f])*$/;\nexport function maybeClassName(name) {\n    if (name === undefined)\n        return `plot-${Math.random().toString(16).slice(2)}`;\n    name = `${name}`;\n    if (!validClassName.test(name))\n        throw new Error(`invalid class name: ${name}`);\n    return name;\n}\nexport function applyInlineStyles(selection, style) {\n    if (typeof style === \"string\") {\n        selection.property(\"style\", style);\n    }\n    else if (style != null) {\n        for (const element of selection) {\n            Object.assign(element.style, style);\n        }\n    }\n}\nexport function applyFrameAnchor({ frameAnchor }, { width, height, marginTop, marginRight, marginBottom, marginLeft }) {\n    return [\n        /left$/.test(frameAnchor)\n            ? marginLeft\n            : /right$/.test(frameAnchor)\n                ? width - marginRight\n                : (marginLeft + width - marginRight) / 2,\n        /^top/.test(frameAnchor)\n            ? marginTop\n            : /^bottom/.test(frameAnchor)\n                ? height - marginBottom\n                : (marginTop + height - marginBottom) / 2\n    ];\n}\n", "import { axisTop, axisBottom, axisRight, axisLeft, format, utcFormat } from \"d3\";\nimport { create } from \"./context.js\";\nimport { formatIsoDate } from \"./format.js\";\nimport { radians } from \"./math.js\";\nimport { boolean, take, number, string, keyword, maybeKeyword, constant, isTemporal } from \"./options.js\";\nimport { applyAttr, impliedString } from \"./style.js\";\nexport class AxisX {\n    constructor({ name = \"x\", axis, ticks, tickSize = name === \"fx\" ? 0 : 6, tickPadding = tickSize === 0 ? 9 : 3, tickFormat, fontVariant, grid, label, labelAnchor, labelOffset, line, tickRotate, ariaLabel, ariaDescription } = {}) {\n        this.name = name;\n        this.axis = keyword(axis, \"axis\", [\"top\", \"bottom\"]);\n        this.ticks = maybeTicks(ticks);\n        this.tickSize = number(tickSize);\n        this.tickPadding = number(tickPadding);\n        this.tickFormat = maybeTickFormat(tickFormat);\n        this.fontVariant = impliedString(fontVariant, \"normal\");\n        this.grid = boolean(grid);\n        this.label = string(label);\n        this.labelAnchor = maybeKeyword(labelAnchor, \"labelAnchor\", [\"center\", \"left\", \"right\"]);\n        this.labelOffset = number(labelOffset);\n        this.line = boolean(line);\n        this.tickRotate = number(tickRotate);\n        this.ariaLabel = string(ariaLabel);\n        this.ariaDescription = string(ariaDescription);\n    }\n    render(index, { [this.name]: x, fy }, { width, height, marginTop, marginRight, marginBottom, marginLeft, offsetLeft = 0, facetMarginTop, facetMarginBottom, labelMarginLeft = 0, labelMarginRight = 0 }, context) {\n        const { axis, fontVariant, grid, label, labelAnchor, labelOffset, line, name, tickRotate } = this;\n        const offset = name === \"x\" ? 0 : axis === \"top\" ? marginTop - facetMarginTop : marginBottom - facetMarginBottom;\n        const offsetSign = axis === \"top\" ? -1 : 1;\n        const ty = offsetSign * offset + (axis === \"top\" ? marginTop : height - marginBottom);\n        return create(\"svg:g\", context)\n            .call(applyAria, this)\n            .attr(\"transform\", `translate(${offsetLeft},${ty})`)\n            .call(createAxis(axis === \"top\" ? axisTop : axisBottom, x, this))\n            .call(maybeTickRotate, tickRotate)\n            .attr(\"font-size\", null)\n            .attr(\"font-family\", null)\n            .attr(\"font-variant\", fontVariant)\n            .call(!line ? (g) => g.select(\".domain\").remove() : () => { })\n            .call(!grid ? () => { } : fy ? gridFacetX(index, fy, -ty) : gridX(offsetSign * (marginBottom + marginTop - height)))\n            .call(!label\n            ? () => { }\n            : (g) => g\n                .append(\"text\")\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"transform\", `translate(${labelAnchor === \"center\"\n                ? (width + marginLeft - marginRight) / 2\n                : labelAnchor === \"right\"\n                    ? width + labelMarginRight\n                    : -labelMarginLeft},${labelOffset * offsetSign})`)\n                .attr(\"dy\", axis === \"top\" ? \"1em\" : \"-0.32em\")\n                .attr(\"text-anchor\", labelAnchor === \"center\" ? \"middle\" : labelAnchor === \"right\" ? \"end\" : \"start\")\n                .text(label))\n            .node();\n    }\n}\nexport class AxisY {\n    constructor({ name = \"y\", axis, ticks, tickSize = name === \"fy\" ? 0 : 6, tickPadding = tickSize === 0 ? 9 : 3, tickFormat, fontVariant, grid, label, labelAnchor, labelOffset, line, tickRotate, ariaLabel, ariaDescription } = {}) {\n        this.name = name;\n        this.axis = keyword(axis, \"axis\", [\"left\", \"right\"]);\n        this.ticks = maybeTicks(ticks);\n        this.tickSize = number(tickSize);\n        this.tickPadding = number(tickPadding);\n        this.tickFormat = maybeTickFormat(tickFormat);\n        this.fontVariant = impliedString(fontVariant, \"normal\");\n        this.grid = boolean(grid);\n        this.label = string(label);\n        this.labelAnchor = maybeKeyword(labelAnchor, \"labelAnchor\", [\"center\", \"top\", \"bottom\"]);\n        this.labelOffset = number(labelOffset);\n        this.line = boolean(line);\n        this.tickRotate = number(tickRotate);\n        this.ariaLabel = string(ariaLabel);\n        this.ariaDescription = string(ariaDescription);\n    }\n    render(index, { [this.name]: y, fx }, { width, height, marginTop, marginRight, marginBottom, marginLeft, offsetTop = 0, facetMarginLeft, facetMarginRight }, context) {\n        const { axis, fontVariant, grid, label, labelAnchor, labelOffset, line, name, tickRotate } = this;\n        const offset = name === \"y\" ? 0 : axis === \"left\" ? marginLeft - facetMarginLeft : marginRight - facetMarginRight;\n        const offsetSign = axis === \"left\" ? -1 : 1;\n        const tx = offsetSign * offset + (axis === \"right\" ? width - marginRight : marginLeft);\n        return create(\"svg:g\", context)\n            .call(applyAria, this)\n            .attr(\"transform\", `translate(${tx},${offsetTop})`)\n            .call(createAxis(axis === \"right\" ? axisRight : axisLeft, y, this))\n            .call(maybeTickRotate, tickRotate)\n            .attr(\"font-size\", null)\n            .attr(\"font-family\", null)\n            .attr(\"font-variant\", fontVariant)\n            .call(!line ? (g) => g.select(\".domain\").remove() : () => { })\n            .call(!grid ? () => { } : fx ? gridFacetY(index, fx, -tx) : gridY(offsetSign * (marginLeft + marginRight - width)))\n            .call(!label\n            ? () => { }\n            : (g) => g\n                .append(\"text\")\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"font-variant\", fontVariant == null ? null : \"normal\")\n                .attr(\"transform\", `translate(${labelOffset * offsetSign},${labelAnchor === \"center\"\n                ? (height + marginTop - marginBottom) / 2\n                : labelAnchor === \"bottom\"\n                    ? height - marginBottom\n                    : marginTop})${labelAnchor === \"center\" ? ` rotate(-90)` : \"\"}`)\n                .attr(\"dy\", labelAnchor === \"center\"\n                ? axis === \"right\"\n                    ? \"-0.32em\"\n                    : \"0.75em\"\n                : labelAnchor === \"bottom\"\n                    ? \"1.4em\"\n                    : \"-1em\")\n                .attr(\"text-anchor\", labelAnchor === \"center\" ? \"middle\" : axis === \"right\" ? \"end\" : \"start\")\n                .text(label))\n            .node();\n    }\n}\nfunction applyAria(selection, { name, label, ariaLabel = `${name}-axis`, ariaDescription = label }) {\n    applyAttr(selection, \"aria-label\", ariaLabel);\n    applyAttr(selection, \"aria-description\", ariaDescription);\n}\nfunction gridX(y2) {\n    return (g) => g.selectAll(\".tick line\").clone(true).attr(\"stroke-opacity\", 0.1).attr(\"y2\", y2);\n}\nfunction gridY(x2) {\n    return (g) => g.selectAll(\".tick line\").clone(true).attr(\"stroke-opacity\", 0.1).attr(\"x2\", x2);\n}\nfunction gridFacetX(index, fy, ty) {\n    const dy = fy.bandwidth();\n    const domain = fy.domain();\n    return (g) => g\n        .selectAll(\".tick\")\n        .append(\"path\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(\"stroke-opacity\", 0.1)\n        .attr(\"d\", (index ? take(domain, index) : domain).map((v) => `M0,${fy(v) + ty}v${dy}`).join(\"\"));\n}\nfunction gridFacetY(index, fx, tx) {\n    const dx = fx.bandwidth();\n    const domain = fx.domain();\n    return (g) => g\n        .selectAll(\".tick\")\n        .append(\"path\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(\"stroke-opacity\", 0.1)\n        .attr(\"d\", (index ? take(domain, index) : domain).map((v) => `M${fx(v) + tx},0h${dx}`).join(\"\"));\n}\nfunction maybeTicks(ticks) {\n    return ticks === null ? [] : ticks;\n}\nfunction maybeTickFormat(tickFormat) {\n    return tickFormat === null ? () => null : tickFormat;\n}\n// D3 doesn\u2019t provide a tick format for ordinal scales; we want shorthand when\n// an ordinal domain is numbers or dates, and we want null to mean the empty\n// string, not the default identity format.\nexport function maybeAutoTickFormat(tickFormat, domain) {\n    return tickFormat === undefined\n        ? isTemporal(domain)\n            ? formatIsoDate\n            : string\n        : typeof tickFormat === \"function\"\n            ? tickFormat\n            : (typeof tickFormat === \"string\" ? (isTemporal(domain) ? utcFormat : format) : constant)(tickFormat);\n}\nfunction createAxis(axis, scale, { ticks, tickSize, tickPadding, tickFormat }) {\n    if (!scale.tickFormat) {\n        tickFormat = maybeAutoTickFormat(tickFormat, scale.domain());\n    }\n    return axis(scale)\n        .ticks(Array.isArray(ticks) ? null : ticks, typeof tickFormat === \"function\" ? null : tickFormat)\n        .tickFormat(typeof tickFormat === \"function\" ? tickFormat : null)\n        .tickSizeInner(tickSize)\n        .tickSizeOuter(0)\n        .tickPadding(tickPadding)\n        .tickValues(Array.isArray(ticks) ? ticks : null);\n}\nfunction maybeTickRotate(g, rotate) {\n    if (!(rotate = +rotate))\n        return;\n    for (const text of g.selectAll(\"text\")) {\n        const x = +text.getAttribute(\"x\");\n        const y = +text.getAttribute(\"y\");\n        if (Math.abs(y) > Math.abs(x)) {\n            const s = Math.sign(y);\n            text.setAttribute(\"transform\", `translate(0, ${y + s * 4 * Math.cos(rotate * radians)}) rotate(${rotate})`);\n            text.setAttribute(\"text-anchor\", Math.abs(rotate) < 10 ? \"middle\" : (rotate < 0) ^ (s > 0) ? \"start\" : \"end\");\n        }\n        else {\n            const s = Math.sign(x);\n            text.setAttribute(\"transform\", `translate(${x + s * 4 * Math.abs(Math.sin(rotate * radians))}, 0) rotate(${rotate})`);\n            text.setAttribute(\"text-anchor\", Math.abs(rotate) > 60 ? \"middle\" : s > 0 ? \"start\" : \"end\");\n        }\n        text.removeAttribute(\"x\");\n        text.removeAttribute(\"y\");\n        text.setAttribute(\"dy\", \"0.32em\");\n    }\n}\n", "// Positional scales have associated axes, and for ordinal data, a point or band\n// scale is used instead of an ordinal scale.\nexport const position = Symbol(\"position\");\n// Color scales default to the turbo interpolator for quantitative data, and to\n// the Tableau10 scheme for ordinal data. In the future, color scales may also\n// have an associated legend.\nexport const color = Symbol(\"color\");\n// Radius scales default to the sqrt type, have a default range of [0, 3], and a\n// default domain from 0 to the median first quartile of associated channels.\nexport const radius = Symbol(\"radius\");\n// Length scales default to the linear type, have a default range of [0, 12],\n// and a default domain from 0 to the median median of associated channels.\nexport const length = Symbol(\"length\");\n// Opacity scales have a default range of [0, 1], and a default domain from 0 to\n// the maximum value of associated channels.\nexport const opacity = Symbol(\"opacity\");\n// Symbol scales have a default range of d3.symbols.\nexport const symbol = Symbol(\"symbol\");\n// TODO Rather than hard-coding the list of known scale names, collect the names\n// and categories for each plot specification, so that custom marks can register\n// custom scales.\nexport const registry = new Map([\n    [\"x\", position],\n    [\"y\", position],\n    [\"fx\", position],\n    [\"fy\", position],\n    [\"r\", radius],\n    [\"color\", color],\n    [\"opacity\", opacity],\n    [\"symbol\", symbol],\n    [\"length\", length]\n]);\n", "import { interpolateBlues, interpolateBrBG, interpolateBuGn, interpolateBuPu, interpolateGnBu, interpolateGreens, interpolateGreys, interpolateOranges, interpolateOrRd, interpolatePiYG, interpolatePRGn, interpolatePuBu, interpolatePuBuGn, interpolatePuOr, interpolatePuRd, interpolatePurples, interpolateRdBu, interpolateRdGy, interpolateRdPu, interpolateRdYlBu, interpolateRdYlGn, interpolateReds, interpolateSpectral, interpolateYlGn, interpolateYlGnBu, interpolateYlOrBr, interpolateYlOrRd, interpolateTurbo, interpolateViridis, interpolateMagma, interpolateInferno, interpolatePlasma, interpolateCividis, interpolateCubehelixDefault, interpolateWarm, interpolateCool, interpolateRainbow, interpolateSinebow, quantize, schemeAccent, schemeBlues, schemeBrBG, schemeBuGn, schemeBuPu, schemeCategory10, schemeDark2, schemeGnBu, schemeGreens, schemeGreys, schemeOranges, schemeOrRd, schemePaired, schemePastel1, schemePastel2, schemePiYG, schemePRGn, schemePuBu, schemePuBuGn, schemePuOr, schemePuRd, schemePurples, schemeRdBu, schemeRdGy, schemeRdPu, schemeRdYlBu, schemeRdYlGn, schemeReds, schemeSet1, schemeSet2, schemeSet3, schemeSpectral, schemeTableau10, schemeYlGn, schemeYlGnBu, schemeYlOrBr, schemeYlOrRd } from \"d3\";\nconst ordinalSchemes = new Map([\n    // categorical\n    [\"accent\", schemeAccent],\n    [\"category10\", schemeCategory10],\n    [\"dark2\", schemeDark2],\n    [\"paired\", schemePaired],\n    [\"pastel1\", schemePastel1],\n    [\"pastel2\", schemePastel2],\n    [\"set1\", schemeSet1],\n    [\"set2\", schemeSet2],\n    [\"set3\", schemeSet3],\n    [\"tableau10\", schemeTableau10],\n    // diverging\n    [\"brbg\", scheme11(schemeBrBG, interpolateBrBG)],\n    [\"prgn\", scheme11(schemePRGn, interpolatePRGn)],\n    [\"piyg\", scheme11(schemePiYG, interpolatePiYG)],\n    [\"puor\", scheme11(schemePuOr, interpolatePuOr)],\n    [\"rdbu\", scheme11(schemeRdBu, interpolateRdBu)],\n    [\"rdgy\", scheme11(schemeRdGy, interpolateRdGy)],\n    [\"rdylbu\", scheme11(schemeRdYlBu, interpolateRdYlBu)],\n    [\"rdylgn\", scheme11(schemeRdYlGn, interpolateRdYlGn)],\n    [\"spectral\", scheme11(schemeSpectral, interpolateSpectral)],\n    // reversed diverging (for temperature data)\n    [\"burd\", scheme11r(schemeRdBu, interpolateRdBu)],\n    [\"buylrd\", scheme11r(schemeRdYlBu, interpolateRdYlBu)],\n    // sequential (single-hue)\n    [\"blues\", scheme9(schemeBlues, interpolateBlues)],\n    [\"greens\", scheme9(schemeGreens, interpolateGreens)],\n    [\"greys\", scheme9(schemeGreys, interpolateGreys)],\n    [\"oranges\", scheme9(schemeOranges, interpolateOranges)],\n    [\"purples\", scheme9(schemePurples, interpolatePurples)],\n    [\"reds\", scheme9(schemeReds, interpolateReds)],\n    // sequential (multi-hue)\n    [\"turbo\", schemei(interpolateTurbo)],\n    [\"viridis\", schemei(interpolateViridis)],\n    [\"magma\", schemei(interpolateMagma)],\n    [\"inferno\", schemei(interpolateInferno)],\n    [\"plasma\", schemei(interpolatePlasma)],\n    [\"cividis\", schemei(interpolateCividis)],\n    [\"cubehelix\", schemei(interpolateCubehelixDefault)],\n    [\"warm\", schemei(interpolateWarm)],\n    [\"cool\", schemei(interpolateCool)],\n    [\"bugn\", scheme9(schemeBuGn, interpolateBuGn)],\n    [\"bupu\", scheme9(schemeBuPu, interpolateBuPu)],\n    [\"gnbu\", scheme9(schemeGnBu, interpolateGnBu)],\n    [\"orrd\", scheme9(schemeOrRd, interpolateOrRd)],\n    [\"pubu\", scheme9(schemePuBu, interpolatePuBu)],\n    [\"pubugn\", scheme9(schemePuBuGn, interpolatePuBuGn)],\n    [\"purd\", scheme9(schemePuRd, interpolatePuRd)],\n    [\"rdpu\", scheme9(schemeRdPu, interpolateRdPu)],\n    [\"ylgn\", scheme9(schemeYlGn, interpolateYlGn)],\n    [\"ylgnbu\", scheme9(schemeYlGnBu, interpolateYlGnBu)],\n    [\"ylorbr\", scheme9(schemeYlOrBr, interpolateYlOrBr)],\n    [\"ylorrd\", scheme9(schemeYlOrRd, interpolateYlOrRd)],\n    // cyclical\n    [\"rainbow\", schemeicyclical(interpolateRainbow)],\n    [\"sinebow\", schemeicyclical(interpolateSinebow)]\n]);\nfunction scheme9(scheme, interpolate) {\n    return ({ length: n }) => {\n        if (n === 1)\n            return [scheme[3][1]]; // favor midpoint\n        if (n === 2)\n            return [scheme[3][1], scheme[3][2]]; // favor darker\n        n = Math.max(3, Math.floor(n));\n        return n > 9 ? quantize(interpolate, n) : scheme[n];\n    };\n}\nfunction scheme11(scheme, interpolate) {\n    return ({ length: n }) => {\n        if (n === 2)\n            return [scheme[3][0], scheme[3][2]]; // favor diverging extrema\n        n = Math.max(3, Math.floor(n));\n        return n > 11 ? quantize(interpolate, n) : scheme[n];\n    };\n}\nfunction scheme11r(scheme, interpolate) {\n    return ({ length: n }) => {\n        if (n === 2)\n            return [scheme[3][2], scheme[3][0]]; // favor diverging extrema\n        n = Math.max(3, Math.floor(n));\n        return n > 11 ? quantize((t) => interpolate(1 - t), n) : scheme[n].slice().reverse();\n    };\n}\nfunction schemei(interpolate) {\n    return ({ length: n }) => quantize(interpolate, Math.max(2, Math.floor(n)));\n}\nfunction schemeicyclical(interpolate) {\n    return ({ length: n }) => quantize(interpolate, Math.floor(n) + 1).slice(0, -1);\n}\nexport function ordinalScheme(scheme) {\n    const s = `${scheme}`.toLowerCase();\n    if (!ordinalSchemes.has(s))\n        throw new Error(`unknown scheme: ${s}`);\n    return ordinalSchemes.get(s);\n}\nexport function ordinalRange(scheme, length) {\n    const s = ordinalScheme(scheme);\n    const r = typeof s === \"function\" ? s({ length }) : s;\n    return r.length !== length ? r.slice(0, length) : r;\n}\n// If the specified domain contains only booleans (ignoring null and undefined),\n// returns a corresponding range where false is mapped to the low color and true\n// is mapped to the high color of the specified scheme.\nexport function maybeBooleanRange(domain, scheme = \"greys\") {\n    const range = new Set();\n    const [f, t] = ordinalRange(scheme, 2);\n    for (const value of domain) {\n        if (value == null)\n            continue;\n        if (value === true)\n            range.add(t);\n        else if (value === false)\n            range.add(f);\n        else\n            return;\n    }\n    return [...range];\n}\nconst quantitativeSchemes = new Map([\n    // diverging\n    [\"brbg\", interpolateBrBG],\n    [\"prgn\", interpolatePRGn],\n    [\"piyg\", interpolatePiYG],\n    [\"puor\", interpolatePuOr],\n    [\"rdbu\", interpolateRdBu],\n    [\"rdgy\", interpolateRdGy],\n    [\"rdylbu\", interpolateRdYlBu],\n    [\"rdylgn\", interpolateRdYlGn],\n    [\"spectral\", interpolateSpectral],\n    // reversed diverging (for temperature data)\n    [\"burd\", (t) => interpolateRdBu(1 - t)],\n    [\"buylrd\", (t) => interpolateRdYlBu(1 - t)],\n    // sequential (single-hue)\n    [\"blues\", interpolateBlues],\n    [\"greens\", interpolateGreens],\n    [\"greys\", interpolateGreys],\n    [\"purples\", interpolatePurples],\n    [\"reds\", interpolateReds],\n    [\"oranges\", interpolateOranges],\n    // sequential (multi-hue)\n    [\"turbo\", interpolateTurbo],\n    [\"viridis\", interpolateViridis],\n    [\"magma\", interpolateMagma],\n    [\"inferno\", interpolateInferno],\n    [\"plasma\", interpolatePlasma],\n    [\"cividis\", interpolateCividis],\n    [\"cubehelix\", interpolateCubehelixDefault],\n    [\"warm\", interpolateWarm],\n    [\"cool\", interpolateCool],\n    [\"bugn\", interpolateBuGn],\n    [\"bupu\", interpolateBuPu],\n    [\"gnbu\", interpolateGnBu],\n    [\"orrd\", interpolateOrRd],\n    [\"pubugn\", interpolatePuBuGn],\n    [\"pubu\", interpolatePuBu],\n    [\"purd\", interpolatePuRd],\n    [\"rdpu\", interpolateRdPu],\n    [\"ylgnbu\", interpolateYlGnBu],\n    [\"ylgn\", interpolateYlGn],\n    [\"ylorbr\", interpolateYlOrBr],\n    [\"ylorrd\", interpolateYlOrRd],\n    // cyclical\n    [\"rainbow\", interpolateRainbow],\n    [\"sinebow\", interpolateSinebow]\n]);\nexport function quantitativeScheme(scheme) {\n    const s = `${scheme}`.toLowerCase();\n    if (!quantitativeSchemes.has(s))\n        throw new Error(`unknown scheme: ${s}`);\n    return quantitativeSchemes.get(s);\n}\nconst divergingSchemes = new Set([\n    \"brbg\",\n    \"prgn\",\n    \"piyg\",\n    \"puor\",\n    \"rdbu\",\n    \"rdgy\",\n    \"rdylbu\",\n    \"rdylgn\",\n    \"spectral\",\n    \"burd\",\n    \"buylrd\"\n]);\nexport function isDivergingScheme(scheme) {\n    return scheme != null && divergingSchemes.has(`${scheme}`.toLowerCase());\n}\n", "import { offset } from \"../style.js\";\nexport function maybeInsetX({ inset, insetLeft, insetRight, ...options } = {}) {\n    [insetLeft, insetRight] = maybeInset(inset, insetLeft, insetRight);\n    return { inset, insetLeft, insetRight, ...options };\n}\nexport function maybeInsetY({ inset, insetTop, insetBottom, ...options } = {}) {\n    [insetTop, insetBottom] = maybeInset(inset, insetTop, insetBottom);\n    return { inset, insetTop, insetBottom, ...options };\n}\nfunction maybeInset(inset, inset1, inset2) {\n    return inset === undefined && inset1 === undefined && inset2 === undefined\n        ? offset\n            ? [1, 0]\n            : [0.5, 0.5]\n        : [inset1, inset2];\n}\n", "import { range } from \"d3\";\nimport { isTemporal, labelof, map, maybeValue, valueof } from \"../options.js\";\nimport { maybeInsetX, maybeInsetY } from \"./inset.js\";\n// TODO Allow the interval to be specified as a string, e.g. \u201Cday\u201D or \u201Chour\u201D?\n// This will require the interval knowing the type of the associated scale to\n// chose between UTC and local time (or better, an explicit timeZone option).\nexport function maybeInterval(interval) {\n    if (interval == null)\n        return;\n    if (typeof interval === \"number\") {\n        const n = interval;\n        // Note: this offset doesn\u2019t support the optional step argument for simplicity.\n        return {\n            floor: (d) => n * Math.floor(d / n),\n            offset: (d) => d + n,\n            range: (lo, hi) => range(Math.ceil(lo / n), hi / n).map((x) => n * x)\n        };\n    }\n    if (typeof interval.floor !== \"function\" || typeof interval.offset !== \"function\")\n        throw new Error(\"invalid interval; missing floor or offset function\");\n    return interval;\n}\n// The interval may be specified either as x: {value, interval} or as {x,\n// interval}. The former is used, for example, for Plot.rect.\nfunction maybeIntervalValue(value, { interval }) {\n    value = { ...maybeValue(value) };\n    value.interval = maybeInterval(value.interval === undefined ? interval : value.interval);\n    return value;\n}\nfunction maybeIntervalK(k, maybeInsetK, options, trivial) {\n    const { [k]: v, [`${k}1`]: v1, [`${k}2`]: v2 } = options;\n    const { value, interval } = maybeIntervalValue(v, options);\n    if (value == null || (interval == null && !trivial))\n        return options;\n    const label = labelof(v);\n    if (interval == null) {\n        let V;\n        const kv = { transform: (data) => V || (V = valueof(data, value)), label };\n        return {\n            ...options,\n            [k]: undefined,\n            [`${k}1`]: v1 === undefined ? kv : v1,\n            [`${k}2`]: v2 === undefined ? kv : v2\n        };\n    }\n    let D1, V1;\n    function transform(data) {\n        if (V1 !== undefined && data === D1)\n            return V1; // memoize\n        return (V1 = map(valueof((D1 = data), value), (v) => interval.floor(v)));\n    }\n    return maybeInsetK({\n        ...options,\n        [k]: undefined,\n        [`${k}1`]: v1 === undefined ? { transform, label } : v1,\n        [`${k}2`]: v2 === undefined ? { transform: (data) => transform(data).map((v) => interval.offset(v)), label } : v2\n    });\n}\nfunction maybeIntervalMidK(k, maybeInsetK, options) {\n    const { [k]: v } = options;\n    const { value, interval } = maybeIntervalValue(v, options);\n    if (value == null || interval == null)\n        return options;\n    return maybeInsetK({\n        ...options,\n        [k]: {\n            label: labelof(v),\n            transform: (data) => {\n                const V1 = map(valueof(data, value), (v) => interval.floor(v));\n                const V2 = V1.map((v) => interval.offset(v));\n                return V1.map(isTemporal(V1)\n                    ? (v1, v2) => v1 == null || isNaN((v1 = +v1)) || ((v2 = V2[v2]), v2 == null) || isNaN((v2 = +v2))\n                        ? undefined\n                        : new Date((v1 + v2) / 2)\n                    : (v1, v2) => (v1 == null || ((v2 = V2[v2]), v2 == null) ? NaN : (+v1 + +v2) / 2));\n            }\n        }\n    });\n}\nexport function maybeTrivialIntervalX(options = {}) {\n    return maybeIntervalK(\"x\", maybeInsetX, options, true);\n}\nexport function maybeTrivialIntervalY(options = {}) {\n    return maybeIntervalK(\"y\", maybeInsetY, options, true);\n}\nexport function maybeIntervalX(options = {}) {\n    return maybeIntervalK(\"x\", maybeInsetX, options);\n}\nexport function maybeIntervalY(options = {}) {\n    return maybeIntervalK(\"y\", maybeInsetY, options);\n}\nexport function maybeIntervalMidX(options = {}) {\n    return maybeIntervalMidK(\"x\", maybeInsetX, options);\n}\nexport function maybeIntervalMidY(options = {}) {\n    return maybeIntervalMidK(\"y\", maybeInsetY, options);\n}\n", "import { descending, extent, interpolateHcl, interpolateHsl, interpolateLab, interpolateNumber, interpolateRgb, interpolateRound, min, max, median, quantile, quantize, reverse as reverseof, pairs, scaleLinear, scaleLog, scalePow, scaleQuantile, scaleSymlog, scaleThreshold, scaleIdentity, ticks } from \"d3\";\nimport { positive, negative, finite } from \"../defined.js\";\nimport { arrayify, constant, order, slice } from \"../options.js\";\nimport { ordinalRange, quantitativeScheme } from \"./schemes.js\";\nimport { maybeInterval } from \"../transforms/interval.js\";\nimport { registry, radius, opacity, color, length } from \"./index.js\";\nexport const flip = (i) => (t) => i(1 - t);\nconst unit = [0, 1];\nconst interpolators = new Map([\n    // numbers\n    [\"number\", interpolateNumber],\n    // color spaces\n    [\"rgb\", interpolateRgb],\n    [\"hsl\", interpolateHsl],\n    [\"hcl\", interpolateHcl],\n    [\"lab\", interpolateLab]\n]);\nexport function Interpolator(interpolate) {\n    const i = `${interpolate}`.toLowerCase();\n    if (!interpolators.has(i))\n        throw new Error(`unknown interpolator: ${i}`);\n    return interpolators.get(i);\n}\nexport function ScaleQ(key, scale, channels, { type, nice, clamp, zero, domain = inferAutoDomain(key, channels), unknown, round, scheme, interval, range = registry.get(key) === radius\n    ? inferRadialRange(channels, domain)\n    : registry.get(key) === length\n        ? inferLengthRange(channels, domain)\n        : registry.get(key) === opacity\n            ? unit\n            : undefined, interpolate = registry.get(key) === color\n    ? scheme == null && range !== undefined\n        ? interpolateRgb\n        : quantitativeScheme(scheme !== undefined ? scheme : type === \"cyclical\" ? \"rainbow\" : \"turbo\")\n    : round\n        ? interpolateRound\n        : interpolateNumber, reverse }) {\n    interval = maybeInterval(interval);\n    if (type === \"cyclical\" || type === \"sequential\")\n        type = \"linear\"; // shorthand for color schemes\n    reverse = !!reverse;\n    // Sometimes interpolate is a named interpolator, such as \"lab\" for Lab color\n    // space. Other times interpolate is a function that takes two arguments and\n    // is used in conjunction with the range. And other times the interpolate\n    // function is a \u201Cfixed\u201D interpolator on the [0, 1] interval, as when a\n    // color scheme such as interpolateRdBu is used.\n    if (typeof interpolate !== \"function\") {\n        interpolate = Interpolator(interpolate);\n    }\n    if (interpolate.length === 1) {\n        if (reverse) {\n            interpolate = flip(interpolate);\n            reverse = false;\n        }\n        if (range === undefined) {\n            range = Float64Array.from(domain, (_, i) => i / (domain.length - 1));\n            if (range.length === 2)\n                range = unit; // optimize common case of [0, 1]\n        }\n        scale.interpolate((range === unit ? constant : interpolatePiecewise)(interpolate));\n    }\n    else {\n        scale.interpolate(interpolate);\n    }\n    // If a zero option is specified, we assume that the domain is numeric, and we\n    // want to ensure that the domain crosses zero. However, note that the domain\n    // may be reversed (descending) so we shouldn\u2019t assume that the first value is\n    // smaller than the last; and also it\u2019s possible that the domain has more than\n    // two values for a \u201Cpoly\u201D scale. And lastly be careful not to mutate input!\n    if (zero) {\n        const [min, max] = extent(domain);\n        if (min > 0 || max < 0) {\n            domain = slice(domain);\n            if (order(domain) !== Math.sign(min))\n                domain[domain.length - 1] = 0;\n            // [2, 1] or [-2, -1]\n            else\n                domain[0] = 0; // [1, 2] or [-1, -2]\n        }\n    }\n    if (reverse)\n        domain = reverseof(domain);\n    scale.domain(domain).unknown(unknown);\n    if (nice)\n        scale.nice(nice === true ? undefined : nice), (domain = scale.domain());\n    if (range !== undefined)\n        scale.range(range);\n    if (clamp)\n        scale.clamp(clamp);\n    return { type, domain, range, scale, interpolate, interval };\n}\nexport function ScaleLinear(key, channels, options) {\n    return ScaleQ(key, scaleLinear(), channels, options);\n}\nexport function ScaleSqrt(key, channels, options) {\n    return ScalePow(key, channels, { ...options, exponent: 0.5 });\n}\nexport function ScalePow(key, channels, { exponent = 1, ...options }) {\n    return ScaleQ(key, scalePow().exponent(exponent), channels, { ...options, type: \"pow\" });\n}\nexport function ScaleLog(key, channels, { base = 10, domain = inferLogDomain(channels), ...options }) {\n    return ScaleQ(key, scaleLog().base(base), channels, { ...options, domain });\n}\nexport function ScaleSymlog(key, channels, { constant = 1, ...options }) {\n    return ScaleQ(key, scaleSymlog().constant(constant), channels, options);\n}\nexport function ScaleQuantile(key, channels, { range, quantiles = range === undefined ? 5 : (range = [...range]).length, // deprecated; use n instead\nn = quantiles, scheme = \"rdylbu\", domain = inferQuantileDomain(channels), interpolate, reverse }) {\n    if (range === undefined)\n        range =\n            interpolate !== undefined\n                ? quantize(interpolate, n)\n                : registry.get(key) === color\n                    ? ordinalRange(scheme, n)\n                    : undefined;\n    return ScaleThreshold(key, channels, {\n        domain: scaleQuantile(domain, range === undefined ? { length: n } : range).quantiles(),\n        range,\n        reverse\n    });\n}\nexport function ScaleQuantize(key, channels, { range, n = range === undefined ? 5 : (range = [...range]).length, scheme = \"rdylbu\", domain = inferAutoDomain(key, channels), interpolate, reverse }) {\n    const [min, max] = extent(domain);\n    let thresholds;\n    if (range === undefined) {\n        thresholds = ticks(min, max, n); // approximate number of nice, round thresholds\n        if (thresholds[0] <= min)\n            thresholds.splice(0, 1); // drop exact lower bound\n        if (thresholds[thresholds.length - 1] >= max)\n            thresholds.pop(); // drop exact upper bound\n        n = thresholds.length + 1;\n        range =\n            interpolate !== undefined\n                ? quantize(interpolate, n)\n                : registry.get(key) === color\n                    ? ordinalRange(scheme, n)\n                    : undefined;\n    }\n    else {\n        thresholds = quantize(interpolateNumber(min, max), n + 1).slice(1, -1); // exactly n - 1 thresholds to match range\n        if (min instanceof Date)\n            thresholds = thresholds.map((x) => new Date(x)); // preserve date types\n    }\n    if (order(arrayify(domain)) < 0)\n        thresholds.reverse(); // preserve descending domain\n    return ScaleThreshold(key, channels, { domain: thresholds, range, reverse });\n}\nexport function ScaleThreshold(key, channels, { domain = [0], // explicit thresholds in ascending order\nunknown, scheme = \"rdylbu\", interpolate, range = interpolate !== undefined\n    ? quantize(interpolate, domain.length + 1)\n    : registry.get(key) === color\n        ? ordinalRange(scheme, domain.length + 1)\n        : undefined, reverse }) {\n    const sign = order(arrayify(domain)); // preserve descending domain\n    if (!pairs(domain).every(([a, b]) => isOrdered(a, b, sign)))\n        throw new Error(`the ${key} scale has a non-monotonic domain`);\n    if (reverse)\n        range = reverseof(range); // domain ascending, so reverse range\n    return {\n        type: \"threshold\",\n        scale: scaleThreshold(sign < 0 ? reverseof(domain) : domain, range === undefined ? [] : range).unknown(unknown),\n        domain,\n        range\n    };\n}\nfunction isOrdered(a, b, sign) {\n    const s = descending(a, b);\n    return s === 0 || s === sign;\n}\nexport function ScaleIdentity() {\n    return { type: \"identity\", scale: scaleIdentity() };\n}\nexport function inferDomain(channels, f = finite) {\n    return channels.length\n        ? [\n            min(channels, ({ value }) => (value === undefined ? value : min(value, f))),\n            max(channels, ({ value }) => (value === undefined ? value : max(value, f)))\n        ]\n        : [0, 1];\n}\nfunction inferAutoDomain(key, channels) {\n    const type = registry.get(key);\n    return (type === radius || type === opacity || type === length ? inferZeroDomain : inferDomain)(channels);\n}\nfunction inferZeroDomain(channels) {\n    return [0, channels.length ? max(channels, ({ value }) => (value === undefined ? value : max(value, finite))) : 1];\n}\n// We don\u2019t want the upper bound of the radial domain to be zero, as this would\n// be degenerate, so we ignore nonpositive values. We also don\u2019t want the\n// maximum default radius to exceed 30px.\nfunction inferRadialRange(channels, domain) {\n    const hint = channels.find(({ radius }) => radius !== undefined);\n    if (hint !== undefined)\n        return [0, hint.radius]; // a natural maximum radius, e.g. hexbins\n    const h25 = quantile(channels, 0.5, ({ value }) => (value === undefined ? NaN : quantile(value, 0.25, positive)));\n    const range = domain.map((d) => 3 * Math.sqrt(d / h25));\n    const k = 30 / max(range);\n    return k < 1 ? range.map((r) => r * k) : range;\n}\n// We want a length scale\u2019s domain to go from zero to a positive value, and to\n// treat negative lengths if any as inverted vectors of equivalent magnitude. We\n// also don\u2019t want the maximum default length to exceed 60px.\nfunction inferLengthRange(channels, domain) {\n    const h50 = median(channels, ({ value }) => (value === undefined ? NaN : median(value, Math.abs)));\n    const range = domain.map((d) => (12 * d) / h50);\n    const k = 60 / max(range);\n    return k < 1 ? range.map((r) => r * k) : range;\n}\nfunction inferLogDomain(channels) {\n    for (const { value } of channels) {\n        if (value !== undefined) {\n            for (let v of value) {\n                v = +v;\n                if (v > 0)\n                    return inferDomain(channels, positive);\n                if (v < 0)\n                    return inferDomain(channels, negative);\n            }\n        }\n    }\n    return [1, 10];\n}\nfunction inferQuantileDomain(channels) {\n    const domain = [];\n    for (const { value } of channels) {\n        if (value === undefined)\n            continue;\n        for (const v of value)\n            domain.push(v);\n    }\n    return domain;\n}\nexport function interpolatePiecewise(interpolate) {\n    return (i, j) => (t) => interpolate(i + t * (j - i));\n}\n", "import { interpolateNumber, interpolateRgb, piecewise, scaleDiverging, scaleDivergingLog, scaleDivergingPow, scaleDivergingSymlog } from \"d3\";\nimport { positive, negative } from \"../defined.js\";\nimport { quantitativeScheme } from \"./schemes.js\";\nimport { registry, color } from \"./index.js\";\nimport { inferDomain, Interpolator, flip, interpolatePiecewise } from \"./quantitative.js\";\nfunction ScaleD(key, scale, transform, channels, { type, nice, clamp, domain = inferDomain(channels), unknown, pivot = 0, scheme, range, symmetric = true, interpolate = registry.get(key) === color\n    ? scheme == null && range !== undefined\n        ? interpolateRgb\n        : quantitativeScheme(scheme !== undefined ? scheme : \"rdbu\")\n    : interpolateNumber, reverse }) {\n    pivot = +pivot;\n    let [min, max] = domain;\n    min = Math.min(min, pivot);\n    max = Math.max(max, pivot);\n    // Sometimes interpolate is a named interpolator, such as \"lab\" for Lab color\n    // space. Other times interpolate is a function that takes two arguments and\n    // is used in conjunction with the range. And other times the interpolate\n    // function is a \u201Cfixed\u201D interpolator on the [0, 1] interval, as when a\n    // color scheme such as interpolateRdBu is used.\n    if (typeof interpolate !== \"function\") {\n        interpolate = Interpolator(interpolate);\n    }\n    // If an explicit range is specified, promote it to a piecewise interpolator.\n    if (range !== undefined) {\n        interpolate =\n            interpolate.length === 1 ? interpolatePiecewise(interpolate)(...range) : piecewise(interpolate, range);\n    }\n    // Reverse before normalization.\n    if (reverse)\n        interpolate = flip(interpolate);\n    // Normalize the interpolator for symmetric difference around the pivot.\n    if (symmetric) {\n        const mid = transform.apply(pivot);\n        const mindelta = mid - transform.apply(min);\n        const maxdelta = transform.apply(max) - mid;\n        if (mindelta < maxdelta)\n            min = transform.invert(mid - maxdelta);\n        else if (mindelta > maxdelta)\n            max = transform.invert(mid + mindelta);\n    }\n    scale.domain([min, pivot, max]).unknown(unknown).interpolator(interpolate);\n    if (clamp)\n        scale.clamp(clamp);\n    if (nice)\n        scale.nice(nice);\n    return { type, domain: [min, max], pivot, interpolate, scale };\n}\nexport function ScaleDiverging(key, channels, options) {\n    return ScaleD(key, scaleDiverging(), transformIdentity, channels, options);\n}\nexport function ScaleDivergingSqrt(key, channels, options) {\n    return ScaleDivergingPow(key, channels, { ...options, exponent: 0.5 });\n}\nexport function ScaleDivergingPow(key, channels, { exponent = 1, ...options }) {\n    return ScaleD(key, scaleDivergingPow().exponent((exponent = +exponent)), transformPow(exponent), channels, {\n        ...options,\n        type: \"diverging-pow\"\n    });\n}\nexport function ScaleDivergingLog(key, channels, { base = 10, pivot = 1, domain = inferDomain(channels, pivot < 0 ? negative : positive), ...options }) {\n    return ScaleD(key, scaleDivergingLog().base((base = +base)), transformLog, channels, { domain, pivot, ...options });\n}\nexport function ScaleDivergingSymlog(key, channels, { constant = 1, ...options }) {\n    return ScaleD(key, scaleDivergingSymlog().constant((constant = +constant)), transformSymlog(constant), channels, options);\n}\nconst transformIdentity = {\n    apply(x) {\n        return x;\n    },\n    invert(x) {\n        return x;\n    }\n};\nconst transformLog = {\n    apply: Math.log,\n    invert: Math.exp\n};\nconst transformSqrt = {\n    apply(x) {\n        return Math.sign(x) * Math.sqrt(Math.abs(x));\n    },\n    invert(x) {\n        return Math.sign(x) * (x * x);\n    }\n};\nfunction transformPow(exponent) {\n    return exponent === 0.5\n        ? transformSqrt\n        : {\n            apply(x) {\n                return Math.sign(x) * Math.pow(Math.abs(x), exponent);\n            },\n            invert(x) {\n                return Math.sign(x) * Math.pow(Math.abs(x), 1 / exponent);\n            }\n        };\n}\nfunction transformSymlog(constant) {\n    return {\n        apply(x) {\n            return Math.sign(x) * Math.log1p(Math.abs(x / constant));\n        },\n        invert(x) {\n            return Math.sign(x) * Math.expm1(Math.abs(x)) * constant;\n        }\n    };\n}\n", "import { scaleTime, scaleUtc } from \"d3\";\nimport { ScaleQ } from \"./quantitative.js\";\nfunction ScaleT(key, scale, channels, options) {\n    return ScaleQ(key, scale, channels, options);\n}\nexport function ScaleTime(key, channels, options) {\n    return ScaleT(key, scaleTime(), channels, options);\n}\nexport function ScaleUtc(key, channels, options) {\n    return ScaleT(key, scaleUtc(), channels, options);\n}\n", "import { symbolAsterisk, symbolDiamond2, symbolPlus, symbolSquare2, symbolTriangle2, symbolX as symbolTimes } from \"d3\";\nimport { symbolCircle, symbolCross, symbolDiamond, symbolSquare, symbolStar, symbolTriangle, symbolWye } from \"d3\";\nexport const sqrt3 = Math.sqrt(3);\nexport const sqrt4_3 = 2 / sqrt3;\nconst symbolHexagon = {\n    draw(context, size) {\n        const rx = Math.sqrt(size / Math.PI), ry = rx * sqrt4_3, hy = ry / 2;\n        context.moveTo(0, ry);\n        context.lineTo(rx, hy);\n        context.lineTo(rx, -hy);\n        context.lineTo(0, -ry);\n        context.lineTo(-rx, -hy);\n        context.lineTo(-rx, hy);\n        context.closePath();\n    }\n};\nconst symbols = new Map([\n    [\"asterisk\", symbolAsterisk],\n    [\"circle\", symbolCircle],\n    [\"cross\", symbolCross],\n    [\"diamond\", symbolDiamond],\n    [\"diamond2\", symbolDiamond2],\n    [\"hexagon\", symbolHexagon],\n    [\"plus\", symbolPlus],\n    [\"square\", symbolSquare],\n    [\"square2\", symbolSquare2],\n    [\"star\", symbolStar],\n    [\"times\", symbolTimes],\n    [\"triangle\", symbolTriangle],\n    [\"triangle2\", symbolTriangle2],\n    [\"wye\", symbolWye]\n]);\nfunction isSymbolObject(value) {\n    return value && typeof value.draw === \"function\";\n}\nexport function isSymbol(value) {\n    if (isSymbolObject(value))\n        return true;\n    if (typeof value !== \"string\")\n        return false;\n    return symbols.has(value.toLowerCase());\n}\nexport function maybeSymbol(symbol) {\n    if (symbol == null || isSymbolObject(symbol))\n        return symbol;\n    const value = symbols.get(`${symbol}`.toLowerCase());\n    if (value)\n        return value;\n    throw new Error(`invalid symbol: ${symbol}`);\n}\nexport function maybeSymbolChannel(symbol) {\n    if (symbol == null || isSymbolObject(symbol))\n        return [undefined, symbol];\n    if (typeof symbol === \"string\") {\n        const value = symbols.get(`${symbol}`.toLowerCase());\n        if (value)\n            return [undefined, value];\n    }\n    return [symbol, undefined];\n}\n", "import { InternSet, extent, quantize, reverse as reverseof, sort, symbolsFill, symbolsStroke } from \"d3\";\nimport { scaleBand, scaleOrdinal, scalePoint, scaleImplicit } from \"d3\";\nimport { ascendingDefined } from \"../defined.js\";\nimport { isNoneish, map } from \"../options.js\";\nimport { maybeInterval } from \"../transforms/interval.js\";\nimport { maybeSymbol } from \"../symbols.js\";\nimport { registry, color, position, symbol } from \"./index.js\";\nimport { maybeBooleanRange, ordinalScheme, quantitativeScheme } from \"./schemes.js\";\n// This denotes an implicitly ordinal color scale: the scale type was not set,\n// but the associated values are strings or booleans. If the associated defined\n// values are entirely boolean, the range will default to greys. You can opt out\n// of this by setting the type explicitly.\nexport const ordinalImplicit = Symbol(\"ordinal\");\nfunction ScaleO(key, scale, channels, { type, interval, domain, range, reverse, hint }) {\n    interval = maybeInterval(interval);\n    if (domain === undefined)\n        domain = inferDomain(channels, interval, key);\n    if (type === \"categorical\" || type === ordinalImplicit)\n        type = \"ordinal\"; // shorthand for color schemes\n    if (reverse)\n        domain = reverseof(domain);\n    scale.domain(domain);\n    if (range !== undefined) {\n        // If the range is specified as a function, pass it the domain.\n        if (typeof range === \"function\")\n            range = range(domain);\n        scale.range(range);\n    }\n    return { type, domain, range, scale, hint, interval };\n}\nexport function ScaleOrdinal(key, channels, { type, interval, domain, range, scheme, unknown, ...options }) {\n    interval = maybeInterval(interval);\n    if (domain === undefined)\n        domain = inferDomain(channels, interval, key);\n    let hint;\n    if (registry.get(key) === symbol) {\n        hint = inferSymbolHint(channels);\n        range = range === undefined ? inferSymbolRange(hint) : map(range, maybeSymbol);\n    }\n    else if (registry.get(key) === color) {\n        if (range === undefined && (type === \"ordinal\" || type === ordinalImplicit)) {\n            range = maybeBooleanRange(domain, scheme);\n            if (range !== undefined)\n                scheme = undefined; // Don\u2019t re-apply scheme.\n        }\n        if (scheme === undefined && range === undefined) {\n            scheme = type === \"ordinal\" ? \"turbo\" : \"tableau10\";\n        }\n        if (scheme !== undefined) {\n            if (range !== undefined) {\n                const interpolate = quantitativeScheme(scheme);\n                const t0 = range[0], d = range[1] - range[0];\n                range = ({ length: n }) => quantize((t) => interpolate(t0 + d * t), n);\n            }\n            else {\n                range = ordinalScheme(scheme);\n            }\n        }\n    }\n    if (unknown === scaleImplicit)\n        throw new Error(\"implicit unknown is not supported\");\n    return ScaleO(key, scaleOrdinal().unknown(unknown), channels, { ...options, type, domain, range, hint });\n}\nexport function ScalePoint(key, channels, { align = 0.5, padding = 0.5, ...options }) {\n    return maybeRound(scalePoint().align(align).padding(padding), channels, options, key);\n}\nexport function ScaleBand(key, channels, { align = 0.5, padding = 0.1, paddingInner = padding, paddingOuter = key === \"fx\" || key === \"fy\" ? 0 : padding, ...options }) {\n    return maybeRound(scaleBand().align(align).paddingInner(paddingInner).paddingOuter(paddingOuter), channels, options, key);\n}\nfunction maybeRound(scale, channels, options, key) {\n    let { round } = options;\n    if (round !== undefined)\n        scale.round((round = !!round));\n    scale = ScaleO(key, scale, channels, options);\n    scale.round = round; // preserve for autoScaleRound\n    return scale;\n}\nfunction inferDomain(channels, interval, key) {\n    const values = new InternSet();\n    for (const { value, domain } of channels) {\n        if (domain !== undefined)\n            return domain(); // see channelDomain\n        if (value === undefined)\n            continue;\n        for (const v of value)\n            values.add(v);\n    }\n    if (interval !== undefined) {\n        const [min, max] = extent(values).map(interval.floor, interval);\n        return interval.range(min, interval.offset(max));\n    }\n    if (values.size > 10e3 && registry.get(key) === position)\n        throw new Error(\"implicit ordinal position domain has more than 10,000 values\");\n    return sort(values, ascendingDefined);\n}\n// If all channels provide a consistent hint, propagate it to the scale.\nfunction inferHint(channels, key) {\n    let value;\n    for (const { hint } of channels) {\n        const candidate = hint?.[key];\n        if (candidate === undefined)\n            continue; // no hint here\n        if (value === undefined)\n            value = candidate;\n        // first hint\n        else if (value !== candidate)\n            return; // inconsistent hint\n    }\n    return value;\n}\nfunction inferSymbolHint(channels) {\n    return {\n        fill: inferHint(channels, \"fill\"),\n        stroke: inferHint(channels, \"stroke\")\n    };\n}\nfunction inferSymbolRange(hint) {\n    return isNoneish(hint.fill) ? symbolsStroke : symbolsFill;\n}\n", "import { parse as isoParse } from \"isoformat\";\nimport { isColor, isEvery, isOrdinal, isFirst, isTemporal, isTemporalString, isNumericString, isScaleOptions, isTypedArray, map, order, slice } from \"./options.js\";\nimport { registry, color, position, radius, opacity, symbol, length } from \"./scales/index.js\";\nimport { ScaleLinear, ScaleSqrt, ScalePow, ScaleLog, ScaleSymlog, ScaleQuantile, ScaleQuantize, ScaleThreshold, ScaleIdentity } from \"./scales/quantitative.js\";\nimport { ScaleDiverging, ScaleDivergingSqrt, ScaleDivergingPow, ScaleDivergingLog, ScaleDivergingSymlog } from \"./scales/diverging.js\";\nimport { isDivergingScheme } from \"./scales/schemes.js\";\nimport { ScaleTime, ScaleUtc } from \"./scales/temporal.js\";\nimport { ScaleOrdinal, ScalePoint, ScaleBand, ordinalImplicit } from \"./scales/ordinal.js\";\nimport { isSymbol, maybeSymbol } from \"./symbols.js\";\nimport { warn } from \"./warnings.js\";\nexport function Scales(channelsByScale, { inset: globalInset = 0, insetTop: globalInsetTop = globalInset, insetRight: globalInsetRight = globalInset, insetBottom: globalInsetBottom = globalInset, insetLeft: globalInsetLeft = globalInset, round, nice, clamp, zero, align, padding, ...options } = {}) {\n    const scales = {};\n    for (const [key, channels] of channelsByScale) {\n        const scaleOptions = options[key];\n        const scale = Scale(key, channels, {\n            round: registry.get(key) === position ? round : undefined,\n            nice,\n            clamp,\n            zero,\n            align,\n            padding,\n            ...scaleOptions\n        });\n        if (scale) {\n            // populate generic scale options (percent, transform, insets)\n            let { percent, transform, inset, insetTop = inset !== undefined ? inset : key === \"y\" ? globalInsetTop : 0, // not fy\n            insetRight = inset !== undefined ? inset : key === \"x\" ? globalInsetRight : 0, // not fx\n            insetBottom = inset !== undefined ? inset : key === \"y\" ? globalInsetBottom : 0, // not fy\n            insetLeft = inset !== undefined ? inset : key === \"x\" ? globalInsetLeft : 0 // not fx\n             } = scaleOptions || {};\n            if (transform == null)\n                transform = undefined;\n            else if (typeof transform !== \"function\")\n                throw new Error(\"invalid scale transform; not a function\");\n            scale.percent = !!percent;\n            scale.transform = transform;\n            if (key === \"x\" || key === \"fx\") {\n                scale.insetLeft = +insetLeft;\n                scale.insetRight = +insetRight;\n            }\n            else if (key === \"y\" || key === \"fy\") {\n                scale.insetTop = +insetTop;\n                scale.insetBottom = +insetBottom;\n            }\n            scales[key] = scale;\n        }\n    }\n    return scales;\n}\nexport function ScaleFunctions(scales) {\n    return Object.fromEntries(Object.entries(scales).map(([name, { scale }]) => [name, scale]));\n}\n// Mutates scale.range!\nexport function autoScaleRange({ x, y, fx, fy }, dimensions) {\n    if (fx)\n        autoScaleRangeX(fx, dimensions);\n    if (fy)\n        autoScaleRangeY(fy, dimensions);\n    if (x)\n        autoScaleRangeX(x, fx ? { width: fx.scale.bandwidth() } : dimensions);\n    if (y)\n        autoScaleRangeY(y, fy ? { height: fy.scale.bandwidth() } : dimensions);\n}\nfunction autoScaleRangeX(scale, dimensions) {\n    if (scale.range === undefined) {\n        const { insetLeft, insetRight } = scale;\n        const { width, marginLeft = 0, marginRight = 0 } = dimensions;\n        const left = marginLeft + insetLeft;\n        const right = width - marginRight - insetRight;\n        scale.range = [left, Math.max(left, right)];\n        if (!isOrdinalScale(scale))\n            scale.range = piecewiseRange(scale);\n        scale.scale.range(scale.range);\n    }\n    autoScaleRound(scale);\n}\nfunction autoScaleRangeY(scale, dimensions) {\n    if (scale.range === undefined) {\n        const { insetTop, insetBottom } = scale;\n        const { height, marginTop = 0, marginBottom = 0 } = dimensions;\n        const top = marginTop + insetTop;\n        const bottom = height - marginBottom - insetBottom;\n        scale.range = [Math.max(top, bottom), top];\n        if (!isOrdinalScale(scale))\n            scale.range = piecewiseRange(scale);\n        else\n            scale.range.reverse();\n        scale.scale.range(scale.range);\n    }\n    autoScaleRound(scale);\n}\nfunction autoScaleRound(scale) {\n    if (scale.round === undefined && isBandScale(scale) && roundError(scale) <= 30) {\n        scale.scale.round(true);\n    }\n}\n// If we were to turn on rounding for this band or point scale, how much wasted\n// space would it introduce (on both ends of the range)? This must match\n// d3.scaleBand\u2019s rounding behavior:\n// https://github.com/d3/d3-scale/blob/83555bd759c7314420bd4240642beda5e258db9e/src/band.js#L20-L32\nfunction roundError({ scale }) {\n    const n = scale.domain().length;\n    const [start, stop] = scale.range();\n    const paddingInner = scale.paddingInner ? scale.paddingInner() : 1;\n    const paddingOuter = scale.paddingOuter ? scale.paddingOuter() : scale.padding();\n    const m = n - paddingInner;\n    const step = Math.abs(stop - start) / Math.max(1, m + paddingOuter * 2);\n    return (step - Math.floor(step)) * m;\n}\nfunction piecewiseRange(scale) {\n    const length = scale.scale.domain().length + isThresholdScale(scale);\n    if (!(length > 2))\n        return scale.range;\n    const [start, end] = scale.range;\n    return Array.from({ length }, (_, i) => start + (i / (length - 1)) * (end - start));\n}\nexport function normalizeScale(key, scale, hint) {\n    return Scale(key, hint === undefined ? undefined : [{ hint }], { ...scale });\n}\nfunction Scale(key, channels = [], options = {}) {\n    const type = inferScaleType(key, channels, options);\n    // Warn for common misuses of implicit ordinal scales. We disable this test if\n    // you specify a scale interval or if you set the domain or range explicitly,\n    // since setting the domain or range (typically with a cardinality of more than\n    // two) is another indication that you intended for the scale to be ordinal; we\n    // also disable it for facet scales since these are always band scales.\n    if (options.type === undefined &&\n        options.domain === undefined &&\n        options.range === undefined &&\n        options.interval == null &&\n        key !== \"fx\" &&\n        key !== \"fy\" &&\n        isOrdinalScale({ type })) {\n        const values = channels.map(({ value }) => value).filter((value) => value !== undefined);\n        if (values.some(isTemporal))\n            warn(`Warning: some data associated with the ${key} scale are dates. Dates are typically associated with a \"utc\" or \"time\" scale rather than a \"${formatScaleType(type)}\" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can specify the interval of the ${key} scale (e.g., d3.utcDay), or you can suppress this warning by setting the type of the ${key} scale to \"${formatScaleType(type)}\".`);\n        else if (values.some(isTemporalString))\n            warn(`Warning: some data associated with the ${key} scale are strings that appear to be dates (e.g., YYYY-MM-DD). If these strings represent dates, you should parse them to Date objects. Dates are typically associated with a \"utc\" or \"time\" scale rather than a \"${formatScaleType(type)}\" scale. If you are using a bar mark, you probably want a rect mark with the interval option instead; if you are using a group transform, you probably want a bin transform instead. If you want to treat this data as ordinal, you can suppress this warning by setting the type of the ${key} scale to \"${formatScaleType(type)}\".`);\n        else if (values.some(isNumericString))\n            warn(`Warning: some data associated with the ${key} scale are strings that appear to be numbers. If these strings represent numbers, you should parse or coerce them to numbers. Numbers are typically associated with a \"linear\" scale rather than a \"${formatScaleType(type)}\" scale. If you want to treat this data as ordinal, you can specify the interval of the ${key} scale (e.g., 1 for integers), or you can suppress this warning by setting the type of the ${key} scale to \"${formatScaleType(type)}\".`);\n    }\n    options.type = type; // Mutates input!\n    // Once the scale type is known, coerce the associated channel values and any\n    // explicitly-specified domain to the expected type.\n    switch (type) {\n        case \"diverging\":\n        case \"diverging-sqrt\":\n        case \"diverging-pow\":\n        case \"diverging-log\":\n        case \"diverging-symlog\":\n        case \"cyclical\":\n        case \"sequential\":\n        case \"linear\":\n        case \"sqrt\":\n        case \"threshold\":\n        case \"quantile\":\n        case \"pow\":\n        case \"log\":\n        case \"symlog\":\n            options = coerceType(channels, options, coerceNumbers);\n            break;\n        case \"identity\":\n            switch (registry.get(key)) {\n                case position:\n                    options = coerceType(channels, options, coerceNumbers);\n                    break;\n                case symbol:\n                    options = coerceType(channels, options, coerceSymbols);\n                    break;\n            }\n            break;\n        case \"utc\":\n        case \"time\":\n            options = coerceType(channels, options, coerceDates);\n            break;\n    }\n    switch (type) {\n        case \"diverging\":\n            return ScaleDiverging(key, channels, options);\n        case \"diverging-sqrt\":\n            return ScaleDivergingSqrt(key, channels, options);\n        case \"diverging-pow\":\n            return ScaleDivergingPow(key, channels, options);\n        case \"diverging-log\":\n            return ScaleDivergingLog(key, channels, options);\n        case \"diverging-symlog\":\n            return ScaleDivergingSymlog(key, channels, options);\n        case \"categorical\":\n        case \"ordinal\":\n        case ordinalImplicit:\n            return ScaleOrdinal(key, channels, options);\n        case \"cyclical\":\n        case \"sequential\":\n        case \"linear\":\n            return ScaleLinear(key, channels, options);\n        case \"sqrt\":\n            return ScaleSqrt(key, channels, options);\n        case \"threshold\":\n            return ScaleThreshold(key, channels, options);\n        case \"quantile\":\n            return ScaleQuantile(key, channels, options);\n        case \"quantize\":\n            return ScaleQuantize(key, channels, options);\n        case \"pow\":\n            return ScalePow(key, channels, options);\n        case \"log\":\n            return ScaleLog(key, channels, options);\n        case \"symlog\":\n            return ScaleSymlog(key, channels, options);\n        case \"utc\":\n            return ScaleUtc(key, channels, options);\n        case \"time\":\n            return ScaleTime(key, channels, options);\n        case \"point\":\n            return ScalePoint(key, channels, options);\n        case \"band\":\n            return ScaleBand(key, channels, options);\n        case \"identity\":\n            return registry.get(key) === position ? ScaleIdentity() : { type: \"identity\" };\n        case undefined:\n            return;\n        default:\n            throw new Error(`unknown scale type: ${type}`);\n    }\n}\nfunction formatScaleType(type) {\n    return typeof type === \"symbol\" ? type.description : type;\n}\nfunction inferScaleType(key, channels, { type, domain, range, scheme, pivot }) {\n    // The facet scales are always band scales; this cannot be changed.\n    if (key === \"fx\" || key === \"fy\")\n        return \"band\";\n    // If a channel dictates a scale type, make sure that it is consistent with\n    // the user-specified scale type (if any) and all other channels. For example,\n    // barY requires x to be a band scale and disallows any other scale type.\n    for (const { type: t } of channels) {\n        if (t === undefined)\n            continue;\n        else if (type === undefined)\n            type = t;\n        else if (type !== t)\n            throw new Error(`scale incompatible with channel: ${type} !== ${t}`);\n    }\n    // If the scale, a channel, or user specified a (consistent) type, return it.\n    if (type !== undefined)\n        return type;\n    // If there\u2019s no data (and no type) associated with this scale, don\u2019t create a scale.\n    if (domain === undefined && !channels.some(({ value }) => value !== undefined))\n        return;\n    const kind = registry.get(key);\n    // For color scales, if no range or scheme is specified and all associated\n    // defined values (from the domain if present, and otherwise from channels)\n    // are valid colors, then default to the identity scale. This allows, for\n    // example, a fill channel to return literal colors; without this, the colors\n    // would be remapped to a categorical scheme!\n    if (kind === color && range === undefined && scheme === undefined && isAll(domain, channels, isColor))\n        return \"identity\";\n    // Similarly for symbols\u2026\n    if (kind === symbol && range === undefined && isAll(domain, channels, isSymbol))\n        return \"identity\";\n    // Some scales have default types.\n    if (kind === radius)\n        return \"sqrt\";\n    if (kind === opacity || kind === length)\n        return \"linear\";\n    if (kind === symbol)\n        return \"ordinal\";\n    // If the domain or range has more than two values, assume it\u2019s ordinal. You\n    // can still use a \u201Cpiecewise\u201D (or \u201Cpolylinear\u201D) scale, but you must set the\n    // type explicitly.\n    if ((domain || range || []).length > 2)\n        return asOrdinalType(kind);\n    // Otherwise, infer the scale type from the data! Prefer the domain, if\n    // present, over channels. (The domain and channels should be consistently\n    // typed, and the domain is more explicit and typically much smaller.) We only\n    // check the first defined value for expedience and simplicity; we expect\n    // that the types are consistent.\n    if (domain !== undefined) {\n        if (isOrdinal(domain))\n            return asOrdinalType(kind);\n        if (isTemporal(domain))\n            return \"utc\";\n        if (kind === color && (pivot != null || isDivergingScheme(scheme)))\n            return \"diverging\";\n        return \"linear\";\n    }\n    // If any channel is ordinal or temporal, it takes priority.\n    const values = channels.map(({ value }) => value).filter((value) => value !== undefined);\n    if (values.some(isOrdinal))\n        return asOrdinalType(kind);\n    if (values.some(isTemporal))\n        return \"utc\";\n    if (kind === color && (pivot != null || isDivergingScheme(scheme)))\n        return \"diverging\";\n    return \"linear\";\n}\n// Positional scales default to a point scale instead of an ordinal scale.\nfunction asOrdinalType(kind) {\n    switch (kind) {\n        case position:\n            return \"point\";\n        case color:\n            return ordinalImplicit;\n        default:\n            return \"ordinal\";\n    }\n}\nfunction isAll(domain, channels, is) {\n    return domain !== undefined\n        ? isFirst(domain, is) && isEvery(domain, is)\n        : channels.some(({ value }) => value !== undefined && isFirst(value, is)) &&\n            channels.every(({ value }) => value === undefined || isEvery(value, is));\n}\nexport function isTemporalScale({ type }) {\n    return type === \"time\" || type === \"utc\";\n}\nexport function isOrdinalScale({ type }) {\n    return type === \"ordinal\" || type === \"point\" || type === \"band\" || type === ordinalImplicit;\n}\nexport function isThresholdScale({ type }) {\n    return type === \"threshold\";\n}\nfunction isBandScale({ type }) {\n    return type === \"point\" || type === \"band\";\n}\nexport function isDivergingScale({ type }) {\n    return /^diverging($|-)/.test(type);\n}\n// If the domain is undefined, we assume an identity scale.\nexport function scaleOrder({ range, domain = range }) {\n    return Math.sign(order(domain)) * Math.sign(order(range));\n}\n// Certain marks have special behavior if a scale is collapsed, i.e. if the\n// domain is degenerate and represents only a single value such as [3, 3]; for\n// example, a rect will span the full extent of the chart along a collapsed\n// dimension (whereas a dot will simply be drawn in the center).\nexport function isCollapsed(scale) {\n    if (scale === undefined)\n        return true; // treat missing scale as collapsed\n    const domain = scale.domain();\n    const value = scale(domain[0]);\n    for (let i = 1, n = domain.length; i < n; ++i) {\n        if (scale(domain[i]) - value) {\n            return false;\n        }\n    }\n    return true;\n}\n// Mutates channel.value!\nfunction coerceType(channels, { domain, ...options }, coerceValues) {\n    for (const c of channels) {\n        if (c.value !== undefined) {\n            c.value = coerceValues(c.value);\n        }\n    }\n    return {\n        domain: domain === undefined ? domain : coerceValues(domain),\n        ...options\n    };\n}\nfunction coerceSymbols(values) {\n    return map(values, maybeSymbol);\n}\nfunction coerceDates(values) {\n    return map(values, coerceDate);\n}\n// If the values are specified as a typed array, no coercion is required.\nexport function coerceNumbers(values) {\n    return isTypedArray(values) ? values : map(values, coerceNumber, Float64Array);\n}\n// Unlike Mark\u2019s number, here we want to convert null and undefined to NaN,\n// since the result will be stored in a Float64Array and we don\u2019t want null to\n// be coerced to zero.\nexport function coerceNumber(x) {\n    return x == null ? NaN : +x;\n}\n// When coercing strings to dates, we only want to allow the ISO 8601 format\n// since the built-in string parsing of the Date constructor varies across\n// browsers. (In the future, this could be made more liberal if desired, though\n// it is still generally preferable to do date parsing yourself explicitly,\n// rather than rely on Plot.) Any non-string values are coerced to number first\n// and treated as milliseconds since UNIX epoch.\nexport function coerceDate(x) {\n    return x instanceof Date && !isNaN(x)\n        ? x\n        : typeof x === \"string\"\n            ? isoParse(x)\n            : x == null || isNaN((x = +x))\n                ? undefined\n                : new Date(x);\n}\n/**\n * You can also create a standalone scale with Plot.**scale**(*options*). The\n * *options* object must define at least one scale; see [Scale\n * options](https://github.com/observablehq/plot/blob/main/README.md#scale-options)\n * for how to define a scale. For example, here is a linear color scale with the\n * default domain of [0, 1] and default scheme *turbo*:\n *\n * ```js\n * const color = Plot.scale({color: {type: \"linear\"}});\n * ```\n *\n * #### Scale objects\n *\n * Both\n * [*plot*.scale](https://github.com/observablehq/plot/blob/main/README.md#plotscalescalename)\n * and\n * [Plot.scale](https://github.com/observablehq/plot/blob/main/README.md#plotscaleoptions)\n * return scale objects. These objects represent the actual (or \u201Cmaterialized\u201D)\n * scale options used by Plot, including the domain, range, interpolate\n * function, *etc.* The scale\u2019s label, if any, is also returned; however, note\n * that other axis properties are not currently exposed. Point and band scales\n * also expose their materialized bandwidth and step.\n *\n * To reuse a scale across plots, pass the corresponding scale object into\n * another plot specification:\n *\n * ```js\n * const plot1 = Plot.plot(\u2026);\n * const plot2 = Plot.plot({\u2026, color: plot1.scale(\"color\")});\n * ```\n *\n * For convenience, scale objects expose a *scale*.**apply**(*input*) method\n * which returns the scale\u2019s output for the given *input* value. When\n * applicable, scale objects also expose a *scale*.**invert**(*output*) method\n * which returns the corresponding input value from the scale\u2019s domain for the\n * given *output* value.\n */\nexport function scale(options = {}) {\n    let scale;\n    for (const key in options) {\n        if (!registry.has(key))\n            continue; // ignore unknown properties\n        if (!isScaleOptions(options[key]))\n            continue; // e.g., ignore {color: \"red\"}\n        if (scale !== undefined)\n            throw new Error(\"ambiguous scale definition; multiple scales found\");\n        scale = exposeScale(normalizeScale(key, options[key]));\n    }\n    if (scale === undefined)\n        throw new Error(\"invalid scale definition; no scale found\");\n    return scale;\n}\nexport function exposeScales(scaleDescriptors) {\n    return (key) => {\n        if (!registry.has((key = `${key}`)))\n            throw new Error(`unknown scale: ${key}`);\n        return key in scaleDescriptors ? exposeScale(scaleDescriptors[key]) : undefined;\n    };\n}\nfunction exposeScale({ scale, type, domain, range, label, interpolate, interval, transform, percent, pivot }) {\n    if (type === \"identity\")\n        return { type: \"identity\", apply: (d) => d, invert: (d) => d };\n    const unknown = scale.unknown ? scale.unknown() : undefined;\n    return {\n        type,\n        domain: slice(domain),\n        ...(range !== undefined && { range: slice(range) }),\n        ...(transform !== undefined && { transform }),\n        ...(percent && { percent }),\n        ...(label !== undefined && { label }),\n        ...(unknown !== undefined && { unknown }),\n        ...(interval !== undefined && { interval }),\n        // quantitative\n        ...(interpolate !== undefined && { interpolate }),\n        ...(scale.clamp && { clamp: scale.clamp() }),\n        // diverging (always asymmetric; we never want to apply the symmetric transform twice)\n        ...(pivot !== undefined && { pivot, symmetric: false }),\n        // log, diverging-log\n        ...(scale.base && { base: scale.base() }),\n        // pow, diverging-pow\n        ...(scale.exponent && { exponent: scale.exponent() }),\n        // symlog, diverging-symlog\n        ...(scale.constant && { constant: scale.constant() }),\n        // band, point\n        ...(scale.align && { align: scale.align(), round: scale.round() }),\n        ...(scale.padding &&\n            (scale.paddingInner\n                ? { paddingInner: scale.paddingInner(), paddingOuter: scale.paddingOuter() }\n                : { padding: scale.padding() })),\n        ...(scale.bandwidth && { bandwidth: scale.bandwidth(), step: scale.step() }),\n        // utilities\n        apply: (t) => scale(t),\n        ...(scale.invert && { invert: (t) => scale.invert(t) })\n    };\n}\n", "import { extent } from \"d3\";\nimport { AxisX, AxisY } from \"./axis.js\";\nimport { formatDefault } from \"./format.js\";\nimport { isOrdinalScale, isTemporalScale, scaleOrder } from \"./scales.js\";\nimport { position, registry } from \"./scales/index.js\";\nexport function Axes({ x: xScale, y: yScale, fx: fxScale, fy: fyScale }, { x = {}, y = {}, fx = {}, fy = {}, axis = true, grid, line, label, facet: { axis: facetAxis = axis, grid: facetGrid, label: facetLabel = label } = {} } = {}) {\n    let { axis: xAxis = axis } = x;\n    let { axis: yAxis = axis } = y;\n    let { axis: fxAxis = facetAxis } = fx;\n    let { axis: fyAxis = facetAxis } = fy;\n    if (!xScale)\n        xAxis = null;\n    else if (xAxis === true)\n        xAxis = \"bottom\";\n    if (!yScale)\n        yAxis = null;\n    else if (yAxis === true)\n        yAxis = \"left\";\n    if (!fxScale)\n        fxAxis = null;\n    else if (fxAxis === true)\n        fxAxis = xAxis === \"bottom\" ? \"top\" : \"bottom\";\n    if (!fyScale)\n        fyAxis = null;\n    else if (fyAxis === true)\n        fyAxis = yAxis === \"left\" ? \"right\" : \"left\";\n    return {\n        ...(xAxis && { x: new AxisX({ grid, line, label, fontVariant: inferFontVariant(xScale), ...x, axis: xAxis }) }),\n        ...(yAxis && { y: new AxisY({ grid, line, label, fontVariant: inferFontVariant(yScale), ...y, axis: yAxis }) }),\n        ...(fxAxis && {\n            fx: new AxisX({\n                name: \"fx\",\n                grid: facetGrid,\n                label: facetLabel,\n                fontVariant: inferFontVariant(fxScale),\n                ...fx,\n                axis: fxAxis\n            })\n        }),\n        ...(fyAxis && {\n            fy: new AxisY({\n                name: \"fy\",\n                grid: facetGrid,\n                label: facetLabel,\n                fontVariant: inferFontVariant(fyScale),\n                ...fy,\n                axis: fyAxis\n            })\n        })\n    };\n}\n// Mutates axis.ticks!\n// TODO Populate tickFormat if undefined, too?\nexport function autoAxisTicks({ x, y, fx, fy }, { x: xAxis, y: yAxis, fx: fxAxis, fy: fyAxis }) {\n    if (fxAxis)\n        autoAxisTicksK(fx, fxAxis, 80);\n    if (fyAxis)\n        autoAxisTicksK(fy, fyAxis, 35);\n    if (xAxis)\n        autoAxisTicksK(x, xAxis, 80);\n    if (yAxis)\n        autoAxisTicksK(y, yAxis, 35);\n}\nfunction autoAxisTicksK(scale, axis, k) {\n    if (axis.ticks === undefined) {\n        const interval = scale.interval;\n        if (interval !== undefined) {\n            const [min, max] = extent(scale.scale.domain());\n            axis.ticks = interval.range(interval.floor(min), interval.offset(interval.floor(max)));\n        }\n        else {\n            const [min, max] = extent(scale.scale.range());\n            axis.ticks = (max - min) / k;\n        }\n    }\n    // D3\u2019s ordinal scales simply use toString by default, but if the ordinal\n    // scale domain (or ticks) are numbers or dates (say because we\u2019re applying a\n    // time interval to the ordinal scale), we want Plot\u2019s default formatter.\n    if (axis.tickFormat === undefined && isOrdinalScale(scale)) {\n        axis.tickFormat = formatDefault;\n    }\n}\n// Mutates axis.{label,labelAnchor,labelOffset} and scale.label!\nexport function autoScaleLabels(channels, scales, { x, y, fx, fy }, dimensions, options) {\n    if (fx) {\n        autoAxisLabelsX(fx, scales.fx, channels.get(\"fx\"));\n        if (fx.labelOffset === undefined) {\n            const { facetMarginTop, facetMarginBottom } = dimensions;\n            fx.labelOffset = fx.axis === \"top\" ? facetMarginTop : facetMarginBottom;\n        }\n    }\n    if (fy) {\n        autoAxisLabelsY(fy, fx, scales.fy, channels.get(\"fy\"));\n        if (fy.labelOffset === undefined) {\n            const { facetMarginLeft, facetMarginRight } = dimensions;\n            fy.labelOffset = fy.axis === \"left\" ? facetMarginLeft : facetMarginRight;\n        }\n    }\n    if (x) {\n        autoAxisLabelsX(x, scales.x, channels.get(\"x\"));\n        if (x.labelOffset === undefined) {\n            const { marginTop, marginBottom, facetMarginTop, facetMarginBottom } = dimensions;\n            x.labelOffset = x.axis === \"top\" ? marginTop - facetMarginTop : marginBottom - facetMarginBottom;\n        }\n    }\n    if (y) {\n        autoAxisLabelsY(y, x, scales.y, channels.get(\"y\"));\n        if (y.labelOffset === undefined) {\n            const { marginRight, marginLeft, facetMarginLeft, facetMarginRight } = dimensions;\n            y.labelOffset = y.axis === \"left\" ? marginLeft - facetMarginLeft : marginRight - facetMarginRight;\n        }\n    }\n    for (const [key, type] of registry) {\n        if (type !== position && scales[key]) {\n            // not already handled above\n            autoScaleLabel(key, scales[key], channels.get(key), options[key]);\n        }\n    }\n}\n// Mutates axis.labelAnchor, axis.label, scale.label!\nfunction autoAxisLabelsX(axis, scale, channels) {\n    if (axis.labelAnchor === undefined) {\n        axis.labelAnchor = isOrdinalScale(scale) ? \"center\" : scaleOrder(scale) < 0 ? \"left\" : \"right\";\n    }\n    if (axis.label === undefined) {\n        axis.label = inferLabel(channels, scale, axis, \"x\");\n    }\n    scale.label = axis.label;\n}\n// Mutates axis.labelAnchor, axis.label, scale.label!\nfunction autoAxisLabelsY(axis, opposite, scale, channels) {\n    if (axis.labelAnchor === undefined) {\n        axis.labelAnchor = isOrdinalScale(scale)\n            ? \"center\"\n            : opposite && opposite.axis === \"top\"\n                ? \"bottom\" // TODO scaleOrder?\n                : \"top\";\n    }\n    if (axis.label === undefined) {\n        axis.label = inferLabel(channels, scale, axis, \"y\");\n    }\n    scale.label = axis.label;\n}\n// Mutates scale.label!\nfunction autoScaleLabel(key, scale, channels, options) {\n    if (options) {\n        scale.label = options.label;\n    }\n    if (scale.label === undefined) {\n        scale.label = inferLabel(channels, scale, null, key);\n    }\n}\n// Channels can have labels; if all the channels for a given scale are\n// consistently labeled (i.e., have the same value if not undefined), and the\n// corresponding axis doesn\u2019t already have an explicit label, then the channels\u2019\n// label is promoted to the corresponding axis.\nfunction inferLabel(channels = [], scale, axis, key) {\n    let candidate;\n    for (const { label } of channels) {\n        if (label === undefined)\n            continue;\n        if (candidate === undefined)\n            candidate = label;\n        else if (candidate !== label)\n            return;\n    }\n    if (candidate !== undefined) {\n        // Ignore the implicit label for temporal scales if it\u2019s simply \u201Cdate\u201D.\n        if (isTemporalScale(scale) && /^(date|time|year)$/i.test(candidate))\n            return;\n        if (!isOrdinalScale(scale)) {\n            if (scale.percent)\n                candidate = `${candidate} (%)`;\n            if (key === \"x\" || key === \"y\") {\n                const order = scaleOrder(scale);\n                if (order) {\n                    if (key === \"x\" || (axis && axis.labelAnchor === \"center\")) {\n                        candidate = (key === \"x\") === order < 0 ? `\u2190 ${candidate}` : `${candidate} \u2192`;\n                    }\n                    else {\n                        candidate = `${order < 0 ? \"\u2191 \" : \"\u2193 \"}${candidate}`;\n                    }\n                }\n            }\n        }\n    }\n    return candidate;\n}\nexport function inferFontVariant(scale) {\n    return isOrdinalScale(scale) && scale.interval === undefined ? undefined : \"tabular-nums\";\n}\n", "import { randomLcg } from \"d3\";\nimport { ascendingDefined, descendingDefined } from \"../defined.js\";\nimport { arrayify, isDomainSort, isOptions, maybeValue, valueof } from \"../options.js\";\n/**\n * Given an *options* object that may specify some basic transforms (*filter*,\n * *sort*, or *reverse*) or a custom *transform* function, composes those\n * transforms if any with the given *transform* function, returning a new\n * *options* object. If a custom *transform* function is present on the given\n * *options*, any basic transforms are ignored. Any additional input *options*\n * are passed through in the returned *options* object. This method facilitates\n * applying the basic transforms prior to applying the given custom *transform*\n * and is used internally by Plot\u2019s built-in transforms.\n */\nexport function basic(options = {}, transform) {\n    let { filter: f1, sort: s1, reverse: r1, transform: t1, initializer: i1, ...remainingOptions } = options;\n    // If both t1 and t2 are defined, returns a composite transform that first\n    // applies t1 and then applies t2.\n    if (t1 === undefined) {\n        // explicit transform overrides filter, sort, and reverse\n        if (f1 != null)\n            t1 = filterTransform(f1);\n        if (s1 != null && !isDomainSort(s1))\n            t1 = composeTransform(t1, sortTransform(s1));\n        if (r1)\n            t1 = composeTransform(t1, reverseTransform);\n    }\n    if (transform != null && i1 != null)\n        throw new Error(\"transforms cannot be applied after initializers\");\n    return {\n        ...remainingOptions,\n        ...((s1 === null || isDomainSort(s1)) && { sort: s1 }),\n        transform: composeTransform(t1, transform)\n    };\n}\n/**\n * This helper composes the *initializer* function with any other transforms\n * present in the *options*, and returns a new *options* object.\n */\nexport function initializer(options = {}, initializer) {\n    let { filter: f1, sort: s1, reverse: r1, initializer: i1, ...remainingOptions } = options;\n    // If both i1 and i2 are defined, returns a composite initializer that first\n    // applies i1 and then applies i2.\n    if (i1 === undefined) {\n        // explicit initializer overrides filter, sort, and reverse\n        if (f1 != null)\n            i1 = filterTransform(f1);\n        if (s1 != null && !isDomainSort(s1))\n            i1 = composeInitializer(i1, sortTransform(s1));\n        if (r1)\n            i1 = composeInitializer(i1, reverseTransform);\n    }\n    return {\n        ...remainingOptions,\n        initializer: composeInitializer(i1, initializer)\n    };\n}\nfunction composeTransform(t1, t2) {\n    if (t1 == null)\n        return t2 === null ? undefined : t2;\n    if (t2 == null)\n        return t1 === null ? undefined : t1;\n    return function (data, facets) {\n        ({ data, facets } = t1.call(this, data, facets));\n        return t2.call(this, arrayify(data), facets);\n    };\n}\nfunction composeInitializer(i1, i2) {\n    if (i1 == null)\n        return i2 === null ? undefined : i2;\n    if (i2 == null)\n        return i1 === null ? undefined : i1;\n    return function (data, facets, channels, scales, dimensions) {\n        let c1, d1, f1, c2, d2, f2;\n        ({ data: d1 = data, facets: f1 = facets, channels: c1 } = i1.call(this, data, facets, channels, scales, dimensions));\n        ({ data: d2 = d1, facets: f2 = f1, channels: c2 } = i2.call(this, d1, f1, { ...channels, ...c1 }, scales, dimensions));\n        return { data: d2, facets: f2, channels: { ...c1, ...c2 } };\n    };\n}\nfunction apply(options, t) {\n    return (options.initializer != null ? initializer : basic)(options, t);\n}\n/**\n * ```js\n * Plot.filter(d => d.body_mass_g > 3000, options) // show data whose body mass is greater than 3kg\n * ```\n *\n * Filters the data given the specified *test*. The test can be given as an\n * accessor function (which receives the datum and index), or as a channel value\n * definition such as a field name; truthy values are retained.\n */\nexport function filter(test, options) {\n    return apply(options, filterTransform(test));\n}\nfunction filterTransform(value) {\n    return (data, facets) => {\n        const V = valueof(data, value);\n        return { data, facets: facets.map((I) => I.filter((i) => V[i])) };\n    };\n}\n/**\n * ```js\n * Plot.reverse(options) // reverse the input order\n * ```\n *\n * Reverses the order of the data.\n */\nexport function reverse(options) {\n    return { ...apply(options, reverseTransform), sort: null };\n}\nfunction reverseTransform(data, facets) {\n    return { data, facets: facets.map((I) => I.slice().reverse()) };\n}\n/**\n * ```js\n * Plot.shuffle(options) // show data in random order\n * ```\n *\n * Shuffles the data randomly. If a *seed* option is specified, a linear\n * congruential generator with the given seed is used to generate random numbers\n * deterministically; otherwise, Math.random is used.\n */\nexport function shuffle(options = {}) {\n    const { seed, ...remainingOptions } = options;\n    return { ...apply(remainingOptions, sortValue(seed == null ? Math.random : randomLcg(seed))), sort: null };\n}\n/**\n * ```js\n * Plot.sort(\"body_mass_g\", options) // show data in ascending body mass order\n * ```\n *\n * Sorts the data by the specified *order*, which can be an accessor function, a\n * comparator function, or a channel value definition such as a field name. See\n * also [index\n * sorting](https://github.com/observablehq/plot/blob/main/README.md#index-sorting),\n * which allows marks to be sorted by a named channel, such as *r* for radius.\n */\nexport function sort(order, options) {\n    return {\n        ...(isOptions(order) && order.channel !== undefined ? initializer : apply)(options, sortTransform(order)),\n        sort: null\n    };\n}\nfunction sortTransform(value) {\n    return (typeof value === \"function\" && value.length !== 1 ? sortData : sortValue)(value);\n}\nfunction sortData(compare) {\n    return (data, facets) => {\n        const compareData = (i, j) => compare(data[i], data[j]);\n        return { data, facets: facets.map((I) => I.slice().sort(compareData)) };\n    };\n}\nfunction sortValue(value) {\n    let channel, order;\n    ({ channel, value, order = ascendingDefined } = { ...maybeValue(value) });\n    if (typeof order !== \"function\") {\n        switch (`${order}`.toLowerCase()) {\n            case \"ascending\":\n                order = ascendingDefined;\n                break;\n            case \"descending\":\n                order = descendingDefined;\n                break;\n            default:\n                throw new Error(`invalid order: ${order}`);\n        }\n    }\n    return (data, facets, channels) => {\n        let V;\n        if (channel === undefined) {\n            V = valueof(data, value);\n        }\n        else {\n            if (channels === undefined)\n                throw new Error(\"channel sort requires an initializer\");\n            V = channels[channel];\n            if (!V)\n                return {}; // ignore missing channel\n            V = V.value;\n        }\n        const compareValue = (i, j) => order(V[i], V[j]);\n        return { data, facets: facets.map((I) => I.slice().sort(compareValue)) };\n    };\n}\n", "import { group as grouper, sort, sum, deviation, min, max, mean, median, mode, variance, InternSet, minIndex, maxIndex, rollup } from \"d3\";\nimport { ascendingDefined } from \"../defined.js\";\nimport { valueof, maybeColorChannel, maybeInput, maybeTuple, maybeColumn, column, first, identity, take, labelof, range, second, percentile } from \"../options.js\";\nimport { basic } from \"./basic.js\";\n/**\n * ```js\n * Plot.groupZ({x: \"proportion\"}, {fill: \"species\"})\n * ```\n *\n * Groups on the first channel of *z*, *fill*, or *stroke*, if any. If none of\n * *z*, *fill*, or *stroke* are channels, then all data (within each facet) is\n * placed into a single group.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#group\n */\nexport function groupZ(outputs, options) {\n    // Group on {z, fill, stroke}.\n    return groupn(null, null, outputs, options);\n}\n/**\n * ```js\n * Plot.groupX({y: \"sum\"}, {x: \"species\", y: \"body_mass_g\"})\n * ```\n *\n * Groups on *x* and the first channel of *z*, *fill*, or *stroke*, if any.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#group\n */\nexport function groupX(outputs = { y: \"count\" }, options = {}) {\n    // Group on {z, fill, stroke}, then on x.\n    const { x = identity } = options;\n    if (x == null)\n        throw new Error(\"missing channel: x\");\n    return groupn(x, null, outputs, options);\n}\n/**\n * ```js\n * Plot.groupY({x: \"sum\"}, {y: \"species\", x: \"body_mass_g\"})\n * ```\n *\n * Groups on *y* and the first channel of *z*, *fill*, or *stroke*, if any.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#group\n */\nexport function groupY(outputs = { x: \"count\" }, options = {}) {\n    // Group on {z, fill, stroke}, then on y.\n    const { y = identity } = options;\n    if (y == null)\n        throw new Error(\"missing channel: y\");\n    return groupn(null, y, outputs, options);\n}\n/**\n * ```js\n * Plot.group({fill: \"count\"}, {x: \"island\", y: \"species\"})\n * ```\n *\n * Groups on *x*, *y*, and the first channel of *z*, *fill*, or *stroke*, if\n * any.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#group\n */\nexport function group(outputs = { fill: \"count\" }, options = {}) {\n    // Group on {z, fill, stroke}, then on x and y.\n    let { x, y } = options;\n    [x, y] = maybeTuple(x, y);\n    if (x == null)\n        throw new Error(\"missing channel: x\");\n    if (y == null)\n        throw new Error(\"missing channel: y\");\n    return groupn(x, y, outputs, options);\n}\nfunction groupn(x, // optionally group on x\ny, // optionally group on y\n{ data: reduceData = reduceIdentity, filter, sort, reverse, ...outputs // output channel definitions\n } = {}, inputs = {} // input channels and options\n) {\n    // Compute the outputs.\n    outputs = maybeOutputs(outputs, inputs);\n    reduceData = maybeReduce(reduceData, identity);\n    sort = sort == null ? undefined : maybeOutput(\"sort\", sort, inputs);\n    filter = filter == null ? undefined : maybeEvaluator(\"filter\", filter, inputs);\n    // Produce x and y output channels as appropriate.\n    const [GX, setGX] = maybeColumn(x);\n    const [GY, setGY] = maybeColumn(y);\n    // Greedily materialize the z, fill, and stroke channels (if channels and not\n    // constants) so that we can reference them for subdividing groups without\n    // computing them more than once.\n    const { z, fill, stroke, x1, x2, // consumed if x is an output\n    y1, y2, // consumed if y is an output\n    ...options } = inputs;\n    const [GZ, setGZ] = maybeColumn(z);\n    const [vfill] = maybeColorChannel(fill);\n    const [vstroke] = maybeColorChannel(stroke);\n    const [GF, setGF] = maybeColumn(vfill);\n    const [GS, setGS] = maybeColumn(vstroke);\n    return {\n        ...(\"z\" in inputs && { z: GZ || z }),\n        ...(\"fill\" in inputs && { fill: GF || fill }),\n        ...(\"stroke\" in inputs && { stroke: GS || stroke }),\n        ...basic(options, (data, facets) => {\n            const X = valueof(data, x);\n            const Y = valueof(data, y);\n            const Z = valueof(data, z);\n            const F = valueof(data, vfill);\n            const S = valueof(data, vstroke);\n            const G = maybeSubgroup(outputs, { z: Z, fill: F, stroke: S });\n            const groupFacets = [];\n            const groupData = [];\n            const GX = X && setGX([]);\n            const GY = Y && setGY([]);\n            const GZ = Z && setGZ([]);\n            const GF = F && setGF([]);\n            const GS = S && setGS([]);\n            let i = 0;\n            for (const o of outputs)\n                o.initialize(data);\n            if (sort)\n                sort.initialize(data);\n            if (filter)\n                filter.initialize(data);\n            for (const facet of facets) {\n                const groupFacet = [];\n                for (const o of outputs)\n                    o.scope(\"facet\", facet);\n                if (sort)\n                    sort.scope(\"facet\", facet);\n                if (filter)\n                    filter.scope(\"facet\", facet);\n                for (const [f, I] of maybeGroup(facet, G)) {\n                    for (const [y, gg] of maybeGroup(I, Y)) {\n                        for (const [x, g] of maybeGroup(gg, X)) {\n                            if (filter && !filter.reduce(g))\n                                continue;\n                            groupFacet.push(i++);\n                            groupData.push(reduceData.reduce(g, data));\n                            if (X)\n                                GX.push(x);\n                            if (Y)\n                                GY.push(y);\n                            if (Z)\n                                GZ.push(G === Z ? f : Z[g[0]]);\n                            if (F)\n                                GF.push(G === F ? f : F[g[0]]);\n                            if (S)\n                                GS.push(G === S ? f : S[g[0]]);\n                            for (const o of outputs)\n                                o.reduce(g);\n                            if (sort)\n                                sort.reduce(g);\n                        }\n                    }\n                }\n                groupFacets.push(groupFacet);\n            }\n            maybeSort(groupFacets, sort, reverse);\n            return { data: groupData, facets: groupFacets };\n        }),\n        ...(!hasOutput(outputs, \"x\") && (GX ? { x: GX } : { x1, x2 })),\n        ...(!hasOutput(outputs, \"y\") && (GY ? { y: GY } : { y1, y2 })),\n        ...Object.fromEntries(outputs.map(({ name, output }) => [name, output]))\n    };\n}\nexport function hasOutput(outputs, ...names) {\n    for (const { name } of outputs) {\n        if (names.includes(name)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function maybeOutputs(outputs, inputs) {\n    const entries = Object.entries(outputs);\n    // Propagate standard mark channels by default.\n    if (inputs.title != null && outputs.title === undefined)\n        entries.push([\"title\", reduceTitle]);\n    if (inputs.href != null && outputs.href === undefined)\n        entries.push([\"href\", reduceFirst]);\n    return entries.map(([name, reduce]) => {\n        return reduce == null ? { name, initialize() { }, scope() { }, reduce() { } } : maybeOutput(name, reduce, inputs);\n    });\n}\nexport function maybeOutput(name, reduce, inputs) {\n    const evaluator = maybeEvaluator(name, reduce, inputs);\n    const [output, setOutput] = column(evaluator.label);\n    let O;\n    return {\n        name,\n        output,\n        initialize(data) {\n            evaluator.initialize(data);\n            O = setOutput([]);\n        },\n        scope(scope, I) {\n            evaluator.scope(scope, I);\n        },\n        reduce(I, extent) {\n            O.push(evaluator.reduce(I, extent));\n        }\n    };\n}\nexport function maybeEvaluator(name, reduce, inputs) {\n    const input = maybeInput(name, inputs);\n    const reducer = maybeReduce(reduce, input);\n    let V, context;\n    return {\n        label: labelof(reducer === reduceCount ? null : input, reducer.label),\n        initialize(data) {\n            V = input === undefined ? data : valueof(data, input);\n            if (reducer.scope === \"data\") {\n                context = reducer.reduce(range(data), V);\n            }\n        },\n        scope(scope, I) {\n            if (reducer.scope === scope) {\n                context = reducer.reduce(I, V);\n            }\n        },\n        reduce(I, extent) {\n            return reducer.scope == null ? reducer.reduce(I, V, extent) : reducer.reduce(I, V, context, extent);\n        }\n    };\n}\nexport function maybeGroup(I, X) {\n    return X\n        ? sort(grouper(I, (i) => X[i]), first)\n        : [[, I]];\n}\nexport function maybeReduce(reduce, value) {\n    if (reduce && typeof reduce.reduce === \"function\")\n        return reduce;\n    if (typeof reduce === \"function\")\n        return reduceFunction(reduce);\n    if (/^p\\d{2}$/i.test(reduce))\n        return reduceAccessor(percentile(reduce));\n    switch (`${reduce}`.toLowerCase()) {\n        case \"first\":\n            return reduceFirst;\n        case \"last\":\n            return reduceLast;\n        case \"count\":\n            return reduceCount;\n        case \"distinct\":\n            return reduceDistinct;\n        case \"sum\":\n            return value == null ? reduceCount : reduceSum;\n        case \"proportion\":\n            return reduceProportion(value, \"data\");\n        case \"proportion-facet\":\n            return reduceProportion(value, \"facet\");\n        case \"deviation\":\n            return reduceAccessor(deviation);\n        case \"min\":\n            return reduceAccessor(min);\n        case \"min-index\":\n            return reduceAccessor(minIndex);\n        case \"max\":\n            return reduceAccessor(max);\n        case \"max-index\":\n            return reduceAccessor(maxIndex);\n        case \"mean\":\n            return reduceAccessor(mean);\n        case \"median\":\n            return reduceAccessor(median);\n        case \"variance\":\n            return reduceAccessor(variance);\n        case \"mode\":\n            return reduceAccessor(mode);\n        case \"x\":\n            return reduceX;\n        case \"x1\":\n            return reduceX1;\n        case \"x2\":\n            return reduceX2;\n        case \"y\":\n            return reduceY;\n        case \"y1\":\n            return reduceY1;\n        case \"y2\":\n            return reduceY2;\n    }\n    throw new Error(`invalid reduce: ${reduce}`);\n}\nexport function maybeSubgroup(outputs, inputs) {\n    for (const name in inputs) {\n        const value = inputs[name];\n        if (value !== undefined && !outputs.some((o) => o.name === name)) {\n            return value;\n        }\n    }\n}\nexport function maybeSort(facets, sort, reverse) {\n    if (sort) {\n        const S = sort.output.transform();\n        const compare = (i, j) => ascendingDefined(S[i], S[j]);\n        facets.forEach((f) => f.sort(compare));\n    }\n    if (reverse) {\n        facets.forEach((f) => f.reverse());\n    }\n}\nfunction reduceFunction(f) {\n    return {\n        reduce(I, X, extent) {\n            return f(take(X, I), extent);\n        }\n    };\n}\nfunction reduceAccessor(f) {\n    return {\n        reduce(I, X) {\n            return f(I, (i) => X[i]);\n        }\n    };\n}\nexport const reduceIdentity = {\n    reduce(I, X) {\n        return take(X, I);\n    }\n};\nexport const reduceFirst = {\n    reduce(I, X) {\n        return X[I[0]];\n    }\n};\nconst reduceTitle = {\n    reduce(I, X) {\n        const n = 5;\n        const groups = sort(rollup(I, (V) => V.length, (i) => X[i]), second);\n        const top = groups.slice(-n).reverse();\n        if (top.length < groups.length) {\n            const bottom = groups.slice(0, 1 - n);\n            top[n - 1] = [`\u2026 ${bottom.length.toLocaleString(\"en-US\")} more`, sum(bottom, second)];\n        }\n        return top.map(([key, value]) => `${key} (${value.toLocaleString(\"en-US\")})`).join(\"\\n\");\n    }\n};\nconst reduceLast = {\n    reduce(I, X) {\n        return X[I[I.length - 1]];\n    }\n};\nexport const reduceCount = {\n    label: \"Frequency\",\n    reduce(I) {\n        return I.length;\n    }\n};\nconst reduceDistinct = {\n    label: \"Distinct\",\n    reduce: (I, X) => {\n        const s = new InternSet();\n        for (const i of I)\n            s.add(X[i]);\n        return s.size;\n    }\n};\nconst reduceSum = reduceAccessor(sum);\nfunction reduceProportion(value, scope) {\n    return value == null\n        ? { scope, label: \"Frequency\", reduce: (I, V, basis = 1) => I.length / basis }\n        : { scope, reduce: (I, V, basis = 1) => sum(I, (i) => V[i]) / basis };\n}\nfunction mid(x1, x2) {\n    const m = (+x1 + +x2) / 2;\n    return x1 instanceof Date ? new Date(m) : m;\n}\nconst reduceX = {\n    reduce(I, X, { x1, x2 }) {\n        return mid(x1, x2);\n    }\n};\nconst reduceY = {\n    reduce(I, X, { y1, y2 }) {\n        return mid(y1, y2);\n    }\n};\nconst reduceX1 = {\n    reduce(I, X, { x1 }) {\n        return x1;\n    }\n};\nconst reduceX2 = {\n    reduce(I, X, { x2 }) {\n        return x2;\n    }\n};\nconst reduceY1 = {\n    reduce(I, X, { y1 }) {\n        return y1;\n    }\n};\nconst reduceY2 = {\n    reduce(I, X, { y2 }) {\n        return y2;\n    }\n};\n", "import { ascending, descending, rollup, sort } from \"d3\";\nimport { first, isIterable, labelof, map, maybeValue, range, valueof } from \"./options.js\";\nimport { registry } from \"./scales/index.js\";\nimport { maybeReduce } from \"./transforms/group.js\";\n// TODO Type coercion?\nexport function Channel(data, { scale, type, value, filter, hint }) {\n    return {\n        scale,\n        type,\n        value: valueof(data, value),\n        label: labelof(value),\n        filter,\n        hint\n    };\n}\nexport function Channels(descriptors, data) {\n    return Object.fromEntries(Object.entries(descriptors).map(([name, channel]) => {\n        return [name, Channel(data, channel)];\n    }));\n}\n// TODO Use Float64Array for scales with numeric ranges, e.g. position?\nexport function valueObject(channels, scales) {\n    return Object.fromEntries(Object.entries(channels).map(([name, { scale: scaleName, value }]) => {\n        const scale = scales[scaleName];\n        return [name, scale === undefined ? value : map(value, scale)];\n    }));\n}\n// Note: mutates channel.domain! This is set to a function so that it is lazily\n// computed; i.e., if the scale\u2019s domain is set explicitly, that takes priority\n// over the sort option, and we don\u2019t need to do additional work.\nexport function channelDomain(channels, facetChannels, data, options) {\n    const { reverse: defaultReverse, reduce: defaultReduce = true, limit: defaultLimit } = options;\n    for (const x in options) {\n        if (!registry.has(x))\n            continue; // ignore unknown scale keys (including generic options)\n        let { value: y, reverse = defaultReverse, reduce = defaultReduce, limit = defaultLimit } = maybeValue(options[x]);\n        if (reverse === undefined)\n            reverse = y === \"width\" || y === \"height\"; // default to descending for lengths\n        if (reduce == null || reduce === false)\n            continue; // disabled reducer\n        const X = findScaleChannel(channels, x) || (facetChannels && findScaleChannel(facetChannels, x));\n        if (!X)\n            throw new Error(`missing channel for scale: ${x}`);\n        const XV = X.value;\n        const [lo = 0, hi = Infinity] = isIterable(limit) ? limit : limit < 0 ? [limit] : [0, limit];\n        if (y == null) {\n            X.domain = () => {\n                let domain = XV;\n                if (reverse)\n                    domain = domain.slice().reverse();\n                if (lo !== 0 || hi !== Infinity)\n                    domain = domain.slice(lo, hi);\n                return domain;\n            };\n        }\n        else {\n            const YV = y === \"data\"\n                ? data\n                : y === \"height\"\n                    ? difference(channels, \"y1\", \"y2\")\n                    : y === \"width\"\n                        ? difference(channels, \"x1\", \"x2\")\n                        : values(channels, y, y === \"y\" ? \"y2\" : y === \"x\" ? \"x2\" : undefined);\n            const reducer = maybeReduce(reduce === true ? \"max\" : reduce, YV);\n            X.domain = () => {\n                let domain = rollup(range(XV), (I) => reducer.reduce(I, YV), (i) => XV[i]);\n                domain = sort(domain, reverse ? descendingGroup : ascendingGroup);\n                if (lo !== 0 || hi !== Infinity)\n                    domain = domain.slice(lo, hi);\n                return domain.map(first);\n            };\n        }\n    }\n}\nfunction findScaleChannel(channels, scale) {\n    for (const name in channels) {\n        const channel = channels[name];\n        if (channel.scale === scale)\n            return channel;\n    }\n}\nfunction difference(channels, k1, k2) {\n    const X1 = values(channels, k1);\n    const X2 = values(channels, k2);\n    return map(X2, (x2, i) => Math.abs(x2 - X1[i]), Float64Array);\n}\nfunction values(channels, name, alias) {\n    let channel = channels[name];\n    if (!channel && alias !== undefined)\n        channel = channels[alias];\n    if (channel)\n        return channel.value;\n    throw new Error(`missing channel: ${name}`);\n}\nfunction ascendingGroup([ak, av], [bk, bv]) {\n    return ascending(av, bv) || ascending(ak, bk);\n}\nfunction descendingGroup([ak, av], [bk, bv]) {\n    return descending(av, bv) || ascending(ak, bk);\n}\n", "import { isOrdinalScale } from \"./scales.js\";\nimport { offset } from \"./style.js\";\nexport function Dimensions(scales, { x: { axis: xAxis } = {}, y: { axis: yAxis } = {}, fx: { axis: fxAxis } = {}, fy: { axis: fyAxis } = {} }, { width = 640, height = autoHeight(scales), facet: { margin: facetMargin, marginTop: facetMarginTop = facetMargin !== undefined ? facetMargin : fxAxis === \"top\" ? 30 : 0, marginRight: facetMarginRight = facetMargin !== undefined ? facetMargin : fyAxis === \"right\" ? 40 : 0, marginBottom: facetMarginBottom = facetMargin !== undefined ? facetMargin : fxAxis === \"bottom\" ? 30 : 0, marginLeft: facetMarginLeft = facetMargin !== undefined ? facetMargin : fyAxis === \"left\" ? 40 : 0 } = {}, margin, marginTop = margin !== undefined\n    ? margin\n    : Math.max((xAxis === \"top\" ? 30 : 0) + facetMarginTop, yAxis || fyAxis ? 20 : 0.5 - offset), marginRight = margin !== undefined\n    ? margin\n    : Math.max((yAxis === \"right\" ? 40 : 0) + facetMarginRight, xAxis || fxAxis ? 20 : 0.5 + offset), marginBottom = margin !== undefined\n    ? margin\n    : Math.max((xAxis === \"bottom\" ? 30 : 0) + facetMarginBottom, yAxis || fyAxis ? 20 : 0.5 + offset), marginLeft = margin !== undefined\n    ? margin\n    : Math.max((yAxis === \"left\" ? 40 : 0) + facetMarginLeft, xAxis || fxAxis ? 20 : 0.5 - offset) } = {}) {\n    return {\n        width,\n        height,\n        marginTop,\n        marginRight,\n        marginBottom,\n        marginLeft,\n        facetMarginTop,\n        facetMarginRight,\n        facetMarginBottom,\n        facetMarginLeft\n    };\n}\nfunction autoHeight({ y, fy, fx }) {\n    const nfy = fy ? fy.scale.domain().length : 1;\n    const ny = y ? (isOrdinalScale(y) ? y.scale.domain().length : Math.max(7, 17 / nfy)) : 1;\n    return !!(y || fy) * Math.max(1, Math.min(60, ny * nfy)) * 20 + !!fx * 30 + 60;\n}\n", "import { quantize, interpolateNumber, piecewise, format, scaleBand, scaleLinear, axisBottom } from \"d3\";\nimport { inferFontVariant } from \"../axes.js\";\nimport { Context, create } from \"../context.js\";\nimport { map } from \"../options.js\";\nimport { interpolatePiecewise } from \"../scales/quantitative.js\";\nimport { applyInlineStyles, impliedString, maybeClassName } from \"../style.js\";\nexport function legendRamp(color, options) {\n    let { label = color.label, tickSize = 6, width = 240, height = 44 + tickSize, marginTop = 18, marginRight = 0, marginBottom = 16 + tickSize, marginLeft = 0, style, ticks = (width - marginLeft - marginRight) / 64, tickFormat, fontVariant = inferFontVariant(color), round = true, className } = options;\n    const context = Context(options);\n    className = maybeClassName(className);\n    if (tickFormat === null)\n        tickFormat = () => null;\n    const svg = create(\"svg\", context)\n        .attr(\"class\", className)\n        .attr(\"font-family\", \"system-ui, sans-serif\")\n        .attr(\"font-size\", 10)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"viewBox\", `0 0 ${width} ${height}`)\n        .call((svg) => svg.append(\"style\").text(`\n        .${className} {\n          display: block;\n          background: white;\n          height: auto;\n          height: intrinsic;\n          max-width: 100%;\n          overflow: visible;\n        }\n        .${className} text {\n          white-space: pre;\n        }\n      `))\n        .call(applyInlineStyles, style);\n    let tickAdjust = (g) => g.selectAll(\".tick line\").attr(\"y1\", marginTop + marginBottom - height);\n    let x;\n    // Some D3 scales use scale.interpolate, some scale.interpolator, and some\n    // scale.round; this normalizes the API so it works with all scale types.\n    const applyRange = round ? (x, range) => x.rangeRound(range) : (x, range) => x.range(range);\n    const { type, domain, range, interpolate, scale, pivot } = color;\n    // Continuous\n    if (interpolate) {\n        // Often interpolate is a \u201Cfixed\u201D interpolator on the [0, 1] interval, as\n        // with a built-in color scheme, but sometimes it is a function that takes\n        // two arguments and is used in conjunction with the range.\n        const interpolator = range === undefined\n            ? interpolate\n            : piecewise(interpolate.length === 1 ? interpolatePiecewise(interpolate) : interpolate, range);\n        // Construct a D3 scale of the same type, but with a range that evenly\n        // divides the horizontal extent of the legend. (In the common case, the\n        // domain.length is two, and so the range is simply the extent.) For a\n        // diverging scale, we need an extra point in the range for the pivot such\n        // that the pivot is always drawn in the middle.\n        x = applyRange(scale.copy(), quantize(interpolateNumber(marginLeft, width - marginRight), Math.min(domain.length + (pivot !== undefined), range === undefined ? Infinity : range.length)));\n        // Construct a 256\u00D71 canvas, filling each pixel using the interpolator.\n        const n = 256;\n        const canvas = context.document.createElement(\"canvas\");\n        canvas.width = n;\n        canvas.height = 1;\n        const context2 = canvas.getContext(\"2d\");\n        for (let i = 0, j = n - 1; i < n; ++i) {\n            context2.fillStyle = interpolator(i / j);\n            context2.fillRect(i, 0, 1, 1);\n        }\n        svg\n            .append(\"image\")\n            .attr(\"x\", marginLeft)\n            .attr(\"y\", marginTop)\n            .attr(\"width\", width - marginLeft - marginRight)\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xlink:href\", canvas.toDataURL());\n    }\n    // Threshold\n    else if (type === \"threshold\") {\n        const thresholds = domain;\n        const thresholdFormat = tickFormat === undefined ? (d) => d : typeof tickFormat === \"string\" ? format(tickFormat) : tickFormat;\n        // Construct a linear scale with evenly-spaced ticks for each of the\n        // thresholds; the domain extends one beyond the threshold extent.\n        x = applyRange(scaleLinear().domain([-1, range.length - 1]), [marginLeft, width - marginRight]);\n        svg\n            .append(\"g\")\n            .selectAll()\n            .data(range)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", (d, i) => x(i - 1))\n            .attr(\"y\", marginTop)\n            .attr(\"width\", (d, i) => x(i) - x(i - 1))\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"fill\", (d) => d);\n        ticks = map(thresholds, (_, i) => i);\n        tickFormat = (i) => thresholdFormat(thresholds[i], i);\n    }\n    // Ordinal (hopefully!)\n    else {\n        x = applyRange(scaleBand().domain(domain), [marginLeft, width - marginRight]);\n        svg\n            .append(\"g\")\n            .selectAll()\n            .data(domain)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", x)\n            .attr(\"y\", marginTop)\n            .attr(\"width\", Math.max(0, x.bandwidth() - 1))\n            .attr(\"height\", height - marginTop - marginBottom)\n            .attr(\"fill\", scale);\n        tickAdjust = () => { };\n    }\n    svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0,${height - marginBottom})`)\n        .call(axisBottom(x)\n        .ticks(Array.isArray(ticks) ? null : ticks, typeof tickFormat === \"string\" ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === \"function\" ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(Array.isArray(ticks) ? ticks : null))\n        .attr(\"font-size\", null)\n        .attr(\"font-family\", null)\n        .attr(\"font-variant\", impliedString(fontVariant, \"normal\"))\n        .call(tickAdjust)\n        .call((g) => g.select(\".domain\").remove());\n    if (label !== undefined) {\n        svg\n            .append(\"text\")\n            .attr(\"x\", marginLeft)\n            .attr(\"y\", marginTop - 6)\n            .attr(\"fill\", \"currentColor\") // TODO move to stylesheet?\n            .attr(\"font-weight\", \"bold\")\n            .text(label);\n    }\n    return svg.node();\n}\n", "import { path } from \"d3\";\nimport { inferFontVariant } from \"../axes.js\";\nimport { maybeAutoTickFormat } from \"../axis.js\";\nimport { Context, create } from \"../context.js\";\nimport { isNoneish, maybeColorChannel, maybeNumberChannel } from \"../options.js\";\nimport { isOrdinalScale, isThresholdScale } from \"../scales.js\";\nimport { applyInlineStyles, impliedString, maybeClassName } from \"../style.js\";\nfunction maybeScale(scale, key) {\n    if (key == null)\n        return key;\n    const s = scale(key);\n    if (!s)\n        throw new Error(`scale not found: ${key}`);\n    return s;\n}\nexport function legendSwatches(color, options) {\n    if (!isOrdinalScale(color) && !isThresholdScale(color))\n        throw new Error(`swatches legend requires ordinal or threshold color scale (not ${color.type})`);\n    return legendItems(color, options, (selection, scale) => selection.append(\"svg\").attr(\"fill\", scale.scale).append(\"rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\"), (className) => `.${className}-swatch svg {\n        width: var(--swatchWidth);\n        height: var(--swatchHeight);\n        margin-right: 0.5em;\n      }`);\n}\nexport function legendSymbols(symbol, { fill = symbol.hint?.fill !== undefined ? symbol.hint.fill : \"none\", fillOpacity = 1, stroke = symbol.hint?.stroke !== undefined ? symbol.hint.stroke : isNoneish(fill) ? \"currentColor\" : \"none\", strokeOpacity = 1, strokeWidth = 1.5, r = 4.5, ...options } = {}, scale) {\n    const [vf, cf] = maybeColorChannel(fill);\n    const [vs, cs] = maybeColorChannel(stroke);\n    const sf = maybeScale(scale, vf);\n    const ss = maybeScale(scale, vs);\n    const size = r * r * Math.PI;\n    fillOpacity = maybeNumberChannel(fillOpacity)[1];\n    strokeOpacity = maybeNumberChannel(strokeOpacity)[1];\n    strokeWidth = maybeNumberChannel(strokeWidth)[1];\n    return legendItems(symbol, options, (selection) => selection\n        .append(\"svg\")\n        .attr(\"viewBox\", \"-8 -8 16 16\")\n        .attr(\"fill\", vf === \"color\" ? (d) => sf.scale(d) : null)\n        .attr(\"stroke\", vs === \"color\" ? (d) => ss.scale(d) : null)\n        .append(\"path\")\n        .attr(\"d\", (d) => {\n        const p = path();\n        symbol.scale(d).draw(p, size);\n        return p;\n    }), (className) => `.${className}-swatch > svg {\n        width: var(--swatchWidth);\n        height: var(--swatchHeight);\n        margin-right: 0.5em;\n        overflow: visible;\n        fill: ${cf};\n        fill-opacity: ${fillOpacity};\n        stroke: ${cs};\n        stroke-width: ${strokeWidth}px;\n        stroke-opacity: ${strokeOpacity};\n      }`);\n}\nfunction legendItems(scale, options = {}, swatch, swatchStyle) {\n    let { columns, tickFormat, fontVariant = inferFontVariant(scale), \n    // TODO label,\n    swatchSize = 15, swatchWidth = swatchSize, swatchHeight = swatchSize, marginLeft = 0, className, style, width } = options;\n    const context = Context(options);\n    className = maybeClassName(className);\n    tickFormat = maybeAutoTickFormat(tickFormat, scale.domain);\n    const swatches = create(\"div\", context)\n        .attr(\"class\", className)\n        .attr(\"style\", `\n        --swatchWidth: ${+swatchWidth}px;\n        --swatchHeight: ${+swatchHeight}px;\n      `);\n    let extraStyle;\n    if (columns != null) {\n        extraStyle = `\n      .${className}-swatch {\n        display: flex;\n        align-items: center;\n        break-inside: avoid;\n        padding-bottom: 1px;\n      }\n      .${className}-swatch::before {\n        flex-shrink: 0;\n      }\n      .${className}-label {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    `;\n        swatches\n            .style(\"columns\", columns)\n            .selectAll()\n            .data(scale.domain)\n            .enter()\n            .append(\"div\")\n            .attr(\"class\", `${className}-swatch`)\n            .call(swatch, scale)\n            .call((item) => item.append(\"div\").attr(\"class\", `${className}-label`).attr(\"title\", tickFormat).text(tickFormat));\n    }\n    else {\n        extraStyle = `\n      .${className} {\n        display: flex;\n        align-items: center;\n        min-height: 33px;\n        flex-wrap: wrap;\n      }\n      .${className}-swatch {\n        display: inline-flex;\n        align-items: center;\n        margin-right: 1em;\n      }\n    `;\n        swatches\n            .selectAll()\n            .data(scale.domain)\n            .enter()\n            .append(\"span\")\n            .attr(\"class\", `${className}-swatch`)\n            .call(swatch, scale)\n            .append(function () {\n            return this.ownerDocument.createTextNode(tickFormat.apply(this, arguments));\n        });\n    }\n    return swatches\n        .call((div) => div.insert(\"style\", \"*\").text(`\n        .${className} {\n          font-family: system-ui, sans-serif;\n          font-size: 10px;\n          margin-bottom: 0.5em;${marginLeft === undefined\n        ? \"\"\n        : `\n          margin-left: ${+marginLeft}px;`}${width === undefined\n        ? \"\"\n        : `\n          width: ${width}px;`}\n        }\n        ${swatchStyle(className)}\n        ${extraStyle}\n      `))\n        .style(\"font-variant\", impliedString(fontVariant, \"normal\"))\n        .call(applyInlineStyles, style)\n        .node();\n}\n", "import { rgb } from \"d3\";\nimport { Context } from \"./context.js\";\nimport { legendRamp } from \"./legends/ramp.js\";\nimport { legendSwatches, legendSymbols } from \"./legends/swatches.js\";\nimport { inherit, isScaleOptions } from \"./options.js\";\nimport { normalizeScale } from \"./scales.js\";\nconst legendRegistry = new Map([\n    [\"symbol\", legendSymbols],\n    [\"color\", legendColor],\n    [\"opacity\", legendOpacity]\n]);\n/**\n * Returns a standalone legend for the scale defined by the given *options*\n * object. The *options* object must define at least one scale; see [Scale\n * options](https://github.com/observablehq/plot/blob/main/README.md#scale-options)\n * for how to define a scale. For example, here is a ramp legend of a linear\n * color scale with the default domain of [0, 1] and default scheme *turbo*:\n *\n * ```js\n * Plot.legend({color: {type: \"linear\"}})\n * ```\n *\n * The *options* object may also include any additional legend options described\n * in the previous section. For example, to make the above legend slightly\n * wider:\n *\n * ```js\n * Plot.legend({\n *   width: 320,\n *   color: {\n *     type: \"linear\"\n *   }\n * })\n * ```\n */\nexport function legend(options = {}) {\n    for (const [key, value] of legendRegistry) {\n        const scale = options[key];\n        if (isScaleOptions(scale)) {\n            // e.g., ignore {color: \"red\"}\n            const context = Context(options);\n            let hint;\n            // For symbol legends, pass a hint to the symbol scale.\n            if (key === \"symbol\") {\n                const { fill, stroke = fill === undefined && isScaleOptions(options.color) ? \"color\" : undefined } = options;\n                hint = { fill, stroke };\n            }\n            return value(normalizeScale(key, scale, hint), legendOptions(context, scale, options), (key) => isScaleOptions(options[key]) ? normalizeScale(key, options[key]) : null);\n        }\n    }\n    throw new Error(\"unknown legend type; no scale found\");\n}\nexport function exposeLegends(scales, context, defaults = {}) {\n    return (key, options) => {\n        if (!legendRegistry.has(key))\n            throw new Error(`unknown legend type: ${key}`);\n        if (!(key in scales))\n            return;\n        return legendRegistry.get(key)(scales[key], legendOptions(context, defaults[key], options), (key) => scales[key]);\n    };\n}\nfunction legendOptions(context, { label, ticks, tickFormat } = {}, options) {\n    return inherit(options, context, { label, ticks, tickFormat });\n}\nfunction legendColor(color, { legend = true, ...options }) {\n    if (legend === true)\n        legend = color.type === \"ordinal\" ? \"swatches\" : \"ramp\";\n    if (color.domain === undefined)\n        return;\n    switch (`${legend}`.toLowerCase()) {\n        case \"swatches\":\n            return legendSwatches(color, options);\n        case \"ramp\":\n            return legendRamp(color, options);\n        default:\n            throw new Error(`unknown legend type: ${legend}`);\n    }\n}\nfunction legendOpacity({ type, interpolate, ...scale }, { legend = true, color = rgb(0, 0, 0), ...options }) {\n    if (!interpolate)\n        throw new Error(`${type} opacity scales are not supported`);\n    if (legend === true)\n        legend = \"ramp\";\n    if (`${legend}`.toLowerCase() !== \"ramp\")\n        throw new Error(`${legend} opacity legends are not supported`);\n    return legendColor({ type, ...scale, interpolate: interpolateOpacity(color) }, { legend, ...options });\n}\nfunction interpolateOpacity(color) {\n    const { r, g, b } = rgb(color) || rgb(0, 0, 0); // treat invalid color as black\n    return (t) => `rgba(${r},${g},${b},${t})`;\n}\nexport function Legends(scales, context, options) {\n    const legends = [];\n    for (const [key, value] of legendRegistry) {\n        const o = options[key];\n        if (o?.legend && key in scales) {\n            const legend = value(scales[key], legendOptions(context, scales[key], o), (key) => scales[key]);\n            if (legend != null)\n                legends.push(legend);\n        }\n    }\n    return legends;\n}\n", "import { cross, difference, groups, InternMap, select } from \"d3\";\nimport { Axes, autoAxisTicks, autoScaleLabels } from \"./axes.js\";\nimport { Channel, Channels, channelDomain, valueObject } from \"./channel.js\";\nimport { Context, create } from \"./context.js\";\nimport { defined } from \"./defined.js\";\nimport { Dimensions } from \"./dimensions.js\";\nimport { Legends, exposeLegends } from \"./legends.js\";\nimport { arrayify, isDomainSort, isScaleOptions, keyword, map, maybeNamed, range, second, where, yes } from \"./options.js\";\nimport { Scales, ScaleFunctions, autoScaleRange, exposeScales } from \"./scales.js\";\nimport { position, registry as scaleRegistry } from \"./scales/index.js\";\nimport { applyInlineStyles, maybeClassName, maybeClip, styles } from \"./style.js\";\nimport { basic, initializer } from \"./transforms/basic.js\";\nimport { maybeInterval } from \"./transforms/interval.js\";\nimport { consumeWarnings, warn } from \"./warnings.js\";\n/**\n * Renders a new plot given the specified *options* and returns the\n * corresponding SVG or HTML figure element. All *options* are optional.\n *\n * ### Mark options\n *\n * The **marks** option specifies an array of\n * [marks](https://github.com/observablehq/plot/blob/main/README.md#marks) to\n * render. Each mark has its own data and options; see the respective mark type\n * (*e.g.*, [bar](https://github.com/observablehq/plot/blob/main/README.md#bar)\n * or [dot](https://github.com/observablehq/plot/blob/main/README.md#dot)) for\n * which mark options are supported. Each mark may be a nested array of marks,\n * allowing composition. Marks may also be a function which returns an SVG\n * element, if you wish to insert some arbitrary content into your plot. And\n * marks may be null or undefined, which produce no output; this is useful for\n * showing marks conditionally (*e.g.*, when a box is checked). Marks are drawn\n * in *z* order, last on top. For example, here a single rule at *y* = 0 is\n * drawn on top of blue bars for the [*alphabet*\n * dataset](https://github.com/observablehq/plot/blob/main/test/data/alphabet.csv).\n *\n * ```js\n * Plot.plot({\n *   marks: [\n *     Plot.barY(alphabet, {x: \"letter\", y: \"frequency\", fill: \"steelblue\"}),\n *     Plot.ruleY([0])\n *   ]\n * })\n * ```\n *\n * ### Layout options\n *\n * These options determine the overall layout of the plot; all are specified as\n * numbers in pixels:\n *\n * * **marginTop** - the top margin\n * * **marginRight** - the right margin\n * * **marginBottom** - the bottom margin\n * * **marginLeft** - the left margin\n * * **margin** - shorthand for the four margins\n * * **width** - the outer width of the plot (including margins)\n * * **height** - the outer height of the plot (including margins)\n *\n * The default **width** is 640. On Observable, the width can be set to the\n * [standard\n * width](https://github.com/observablehq/stdlib/blob/main/README.md#width) to\n * make responsive plots. The default **height** is chosen automatically based\n * on the plot\u2019s associated scales; for example, if *y* is linear and there is\n * no *fy* scale, it might be 396.\n *\n * The default margins depend on the plot\u2019s axes: for example, **marginTop** and\n * **marginBottom** are at least 30 if there is a corresponding top or bottom\n * *x* axis, and **marginLeft** and **marginRight** are at least 40 if there is\n * a corresponding left or right *y* axis. For simplicity\u2019s sake and for\n * consistent layout across plots, margins are not automatically sized to make\n * room for tick labels; instead, shorten your tick labels or increase the\n * margins as needed. (In the future, margins may be specified indirectly via a\n * scale property to make it easier to reorient axes without adjusting margins;\n * see [#210](https://github.com/observablehq/plot/issues/210).)\n *\n * The **style** option allows custom styles to override Plot\u2019s defaults. It may\n * be specified either as a string of inline styles (*e.g.*, `\"color: red;\"`, in\n * the same fashion as assigning\n * [*element*.style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style))\n * or an object of properties (*e.g.*, `{color: \"red\"}`, in the same fashion as\n * assigning [*element*.style\n * properties](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration)).\n * Note that unitless numbers ([quirky\n * lengths](https://www.w3.org/TR/css-values-4/#deprecated-quirky-length)) such\n * as `{padding: 20}` may not supported by some browsers; you should instead\n * specify a string with units such as `{padding: \"20px\"}`. By default, the\n * returned plot has a white background, a max-width of 100%, and the system-ui\n * font. Plot\u2019s marks and axes default to\n * [currentColor](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword),\n * meaning that they will inherit the surrounding content\u2019s color. For example,\n * a dark theme:\n *\n * ```js\n * Plot.plot({\n *   marks: \u2026,\n *   style: {\n *     background: \"black\",\n *     color: \"white\"\n *   }\n * })\n * ```\n *\n * If a **caption** is specified, Plot.plot wraps the generated SVG element in\n * an HTML figure element with a figcaption, returning the figure. To specify an\n * HTML caption, consider using the [`html` tagged template\n * literal](http://github.com/observablehq/htl); otherwise, the specified string\n * represents text that will be escaped as needed.\n *\n * ```js\n * Plot.plot({\n *   marks: \u2026,\n *   caption: html`Figure 1. This chart has a <i>fancy</i> caption.`\n * })\n * ```\n *\n * The generated SVG element has a random class name which applies a default\n * stylesheet. Use the top-level **className** option to specify that class\n * name.\n *\n * The **document** option specifies the\n * [document](https://developer.mozilla.org/en-US/docs/Web/API/Document) used to\n * create plot elements. It defaults to window.document, but can be changed to\n * another document, say when using a virtual DOM library for server-side\n * rendering in Node.\n *\n * ### Scale options\n *\n * Plot passes data through\n * [scales](https://observablehq.com/@observablehq/plot-scales) as needed before\n * rendering marks. A scale maps abstract values such as time or temperature to\n * visual values such as position or color. Within a given plot, marks share\n * scales. For example, if a plot has two Plot.line marks, both share the same\n * *x* and *y* scales for a consistent representation of data. (Plot does not\n * currently support dual-axis charts, which are [not\n * advised](https://blog.datawrapper.de/dualaxis/).)\n *\n * ```js\n * Plot.plot({\n *   marks: [\n *     Plot.line(aapl, {x: \"Date\", y: \"Close\"}),\n *     Plot.line(goog, {x: \"Date\", y: \"Close\"})\n *   ]\n * })\n * ```\n *\n * Each scale\u2019s options are specified as a nested options object with the\n * corresponding scale name within the top-level plot *options*:\n *\n * * **x** - horizontal position\n * * **y** - vertical position\n * * **r** - radius (size)\n * * **color** - fill or stroke\n * * **opacity** - fill or stroke opacity\n * * **length** - linear length (for\n *   [vectors](https://github.com/observablehq/plot/blob/main/README.md#vector))\n * * **symbol** - categorical symbol (for\n *   [dots](https://github.com/observablehq/plot/blob/main/README.md#dot))\n *\n * For example, to set the domain for the *x* and *y* scales:\n *\n * ```js\n * Plot.plot({\n *   x: {\n *     domain: [new Date(\"1880-01-01\"), new Date(\"2016-11-01\")]\n *   },\n *   y: {\n *     domain: [-0.78, 1.35]\n *   }\n * })\n * ```\n *\n * Plot supports many scale types. Some scale types are for quantitative data:\n * values that can be added or subtracted, such as temperature or time. Other\n * scale types are for ordinal or categorical data: unquantifiable values that\n * can only be ordered, such as t-shirt sizes, or values with no inherent order\n * that can only be tested for equality, such as types of fruit. Some scale\n * types are further intended for specific visual encodings: for example, as\n * [position](https://github.com/observablehq/plot/blob/main/README.md#position-options)\n * or\n * [color](https://github.com/observablehq/plot/blob/main/README.md#color-options).\n *\n * You can set the scale type explicitly via the *scale*.**type** option, though\n * typically the scale type is inferred automatically. Some marks mandate a\n * particular scale type: for example,\n * [Plot.barY](https://github.com/observablehq/plot/blob/main/README.md#plotbarydata-options)\n * requires that the *x* scale is a *band* scale. Some scales have a default\n * type: for example, the *radius* scale defaults to *sqrt* and the *opacity*\n * scale defaults to *linear*. Most often, the scale type is inferred from\n * associated data, pulled either from the domain (if specified) or from\n * associated channels. A *color* scale defaults to *identity* if no range or\n * scheme is specified and all associated defined values are valid CSS color\n * strings. Otherwise, strings and booleans imply an ordinal scale; dates imply\n * a UTC scale; and anything else is linear. Unless they represent text, we\n * recommend explicitly converting strings to more specific types when loading\n * data (*e.g.*, with d3.autoType or Observable\u2019s FileAttachment). For\n * simplicity\u2019s sake, Plot assumes that data is consistently typed; type\n * inference is based solely on the first non-null, non-undefined value.\n *\n * For quantitative data (*i.e.* numbers), a mathematical transform may be\n * applied to the data by changing the scale type:\n *\n * * *linear* (default) - linear transform (translate and scale)\n * * *pow* - power (exponential) transform\n * * *sqrt* - square-root transform (*pow* transform with exponent = 0.5)\n * * *log* - logarithmic transform\n * * *symlog* - bi-symmetric logarithmic transform per [Webber *et\n *   al.*](https://www.researchgate.net/publication/233967063_A_bi-symmetric_log_transformation_for_wide-range_data)\n *\n * The appropriate transform depends on the data\u2019s distribution and what you\n * wish to know. A *sqrt* transform exaggerates differences between small values\n * at the expense of large values; it is a special case of the *pow* transform\n * which has a configurable *scale*.**exponent** (0.5 for *sqrt*). A *log*\n * transform is suitable for comparing orders of magnitude and can only be used\n * when the domain does not include zero. The base defaults to 10 and can be\n * specified with the *scale*.**base** option; note that this only affects the\n * axis ticks and not the scale\u2019s behavior. A *symlog* transform is more\n * elaborate, but works well with wide-range values that include zero; it can be\n * configured with the *scale*.**constant** option (default 1).\n *\n * For temporal data (*i.e.* dates), two variants of a *linear* scale are also\n * supported:\n *\n * * *utc* (default, recommended) - UTC time\n * * *time* - local time\n *\n * UTC is recommended over local time as charts in UTC time are guaranteed to\n * appear consistently to all viewers whereas charts in local time will depend\n * on the viewer\u2019s time zone. Due to limitations in JavaScript\u2019s Date class,\n * Plot does not yet support an explicit time zone other than UTC.\n *\n * For ordinal data (*e.g.*, strings), use the *ordinal* scale type or the\n * *point* or *band* [position scale\n * types](https://github.com/observablehq/plot/blob/main/README.md#position-options).\n * The *categorical* scale type is also supported; it is equivalent to *ordinal*\n * except as a [color\n * scale](https://github.com/observablehq/plot/blob/main/README.md#color-options),\n * where it provides a different default color scheme. (Since position is\n * inherently ordinal or even quantitative, categorical data must be assigned an\n * effective order when represented as position, and hence *categorical* and\n * *ordinal* may be considered synonymous in context.)\n *\n * You can opt-out of a scale using the *identity* scale type. This is useful if\n * you wish to specify literal colors or pixel positions within a mark channel\n * rather than relying on the scale to convert abstract values into visual\n * values. For position scales (*x* and *y*), an *identity* scale is still\n * quantitative and may produce an axis, yet unlike a *linear* scale the domain\n * and range are fixed based on the plot layout.\n *\n * Quantitative scales, as well as identity position scales, coerce channel\n * values to numbers; both null and undefined are coerced to NaN. Similarly,\n * time scales coerce channel values to dates; numbers are assumed to be\n * milliseconds since UNIX epoch, while strings are assumed to be in [ISO 8601\n * format](https://github.com/mbostock/isoformat/blob/main/README.md#parsedate-fallback).\n *\n * A scale\u2019s domain (the extent of its inputs, abstract values) and range (the\n * extent of its outputs, visual values) are typically inferred automatically.\n * You can set them explicitly using these options:\n *\n * * *scale*.**domain** - typically [*min*, *max*], or an array of ordinal or\n *   categorical values\n * * *scale*.**range** - typically [*min*, *max*], or an array of ordinal or\n *   categorical values\n * * *scale*.**unknown** - the desired output value (defaults to undefined) for\n *   invalid input values\n * * *scale*.**reverse** - reverses the domain (or in somes cases, the range),\n *   say to flip the chart along *x* or *y*\n * * *scale*.**interval** - an interval or time interval (for interval data; see\n *   below)\n *\n * For most quantitative scales, the default domain is the [*min*, *max*] of all\n * values associated with the scale. For the *radius* and *opacity* scales, the\n * default domain is [0, *max*] to ensure a meaningful value encoding. For\n * ordinal scales, the default domain is the set of all distinct values\n * associated with the scale in natural ascending order; for a different order,\n * set the domain explicitly or add a [sort\n * option](https://github.com/observablehq/plot/blob/main/README.md#sort-options)\n * to an associated mark. For threshold scales, the default domain is [0] to\n * separate negative and non-negative values. For quantile scales, the default\n * domain is the set of all defined values associated with the scale. If a scale\n * is reversed, it is equivalent to setting the domain as [*max*, *min*] instead\n * of [*min*, *max*].\n *\n * The default range depends on the scale: for [position\n * scales](https://github.com/observablehq/plot/blob/main/README.md#position-options)\n * (*x*, *y*, *fx*, and *fy*), the default range depends on the plot\u2019s [size and\n * margins](https://github.com/observablehq/plot/blob/main/README.md#layout-options).\n * For [color\n * scales](https://github.com/observablehq/plot/blob/main/README.md#color-options),\n * there are default color schemes for quantitative, ordinal, and categorical\n * data. For opacity, the default range is [0, 1]. And for radius, the default\n * range is designed to produce dots of \u201Creasonable\u201D size assuming a *sqrt*\n * scale type for accurate area representation: zero maps to zero, the first\n * quartile maps to a radius of three pixels, and other values are extrapolated.\n * This convention for radius ensures that if the scale\u2019s data values are all\n * equal, dots have the default constant radius of three pixels, while if the\n * data varies, dots will tend to be larger.\n *\n * The behavior of the *scale*.**unknown** option depends on the scale type. For\n * quantitative and temporal scales, the unknown value is used whenever the\n * input value is undefined, null, or NaN. For ordinal or categorical scales,\n * the unknown value is returned for any input value outside the domain. For\n * band or point scales, the unknown option has no effect; it is effectively\n * always equal to undefined. If the unknown option is set to undefined (the\n * default), or null or NaN, then the affected input values will be considered\n * undefined and filtered from the output.\n *\n * For data at regular intervals, such as integer values or daily samples, the\n * *scale*.**interval** option can be used to enforce uniformity. The specified\n * *interval*\u2014such as d3.utcMonth\u2014must expose an *interval*.floor(*value*),\n * *interval*.offset(*value*), and *interval*.range(*start*, *stop*) functions.\n * The option can also be specified as a number, in which case it will be\n * promoted to a numeric interval with the given step. This option sets the\n * default *scale*.transform to the given interval\u2019s *interval*.floor function.\n * In addition, the default *scale*.domain is an array of uniformly-spaced\n * values spanning the extent of the values associated with the scale.\n *\n * Quantitative scales can be further customized with additional options:\n *\n * * *scale*.**clamp** - if true, clamp input values to the scale\u2019s domain\n * * *scale*.**nice** - if true (or a tick count), extend the domain to nice\n *   round values\n * * *scale*.**zero** - if true, extend the domain to include zero if needed\n * * *scale*.**percent** - if true, transform proportions in [0, 1] to\n *   percentages in [0, 100]\n *\n * Clamping is typically used in conjunction with setting an explicit domain\n * since if the domain is inferred, no values will be outside the domain.\n * Clamping is useful for focusing on a subset of the data while ensuring that\n * extreme values remain visible, but use caution: clamped values may need an\n * annotation to avoid misinterpretation. Top-level **clamp**, **nice**, and\n * **zero** options are supported as shorthand for setting the respective option\n * on all scales.\n *\n * The *scale*.**transform** option allows you to apply a function to all values\n * before they are passed through the scale. This is convenient for transforming\n * a scale\u2019s data, say to convert to thousands or between temperature units.\n *\n * ```js\n * Plot.plot({\n *   y: {\n *     label: \"\u2191 Temperature (\u00B0F)\",\n *     transform: f => f * 9 / 5 + 32 // convert Celsius to Fahrenheit\n *   },\n *   marks: \u2026\n * })\n * ```\n *\n * #### *plot*.scale(*scaleName*)\n *\n * Scale definitions can be exposed through the *plot*.**scale**(*scaleName*)\n * function of a returned plot. The *scaleName* must be one of the known scale\n * names: `\"x\"`, `\"y\"`, `\"fx\"`, `\"fy\"`, `\"r\"`, `\"color\"`, `\"opacity\"`,\n * `\"symbol\"`, or `\"length\"`. If the associated *plot* has no scale with the\n * given *scaleName*, returns undefined.\n *\n * ```js\n * const plot = Plot.plot(\u2026); // render a plot\n * const color = plot.scale(\"color\"); // retrieve the color scale object\n * console.log(color.range); // inspect the color scale\u2019s range, [\"red\", \"blue\"]\n * ```\n */\nexport function plot(options = {}) {\n    const { facet, style, caption, ariaLabel, ariaDescription } = options;\n    // className for inline styles\n    const className = maybeClassName(options.className);\n    // Flatten any nested marks.\n    const marks = options.marks === undefined ? [] : options.marks.flat(Infinity).map(markify);\n    // A Map from Mark instance to its render state, including:\n    // index - the data index e.g. [0, 1, 2, 3, \u2026]\n    // channels - an array of materialized channels e.g. [[\"x\", {value}], \u2026]\n    // faceted - a boolean indicating whether this mark is faceted\n    // values - an object of scaled values e.g. {x: [40, 32, \u2026], \u2026}\n    const stateByMark = new Map();\n    // A Map from scale name to an array of associated channels.\n    const channelsByScale = new Map();\n    // If a scale is explicitly declared in options, initialize its associated\n    // channels to the empty array; this will guarantee that a corresponding scale\n    // will be created later (even if there are no other channels). But ignore\n    // facet scale declarations if faceting is not enabled.\n    for (const key of scaleRegistry.keys()) {\n        if (isScaleOptions(options[key]) && key !== \"fx\" && key !== \"fy\") {\n            channelsByScale.set(key, []);\n        }\n    }\n    // Faceting!\n    let facets; // array of facet definitions (e.g. [[\"foo\", [0, 1, 3, \u2026]], \u2026])\n    let facetIndex; // index over the facet data, e.g. [0, 1, 2, 3, \u2026]\n    let facetChannels; // e.g. {fx: {value}, fy: {value}}\n    let facetsIndex; // nested array of facet indexes [[0, 1, 3, \u2026], [2, 5, \u2026], \u2026]\n    let facetsExclude; // lazily-constructed opposite of facetsIndex\n    let facetData;\n    if (facet !== undefined) {\n        const { x, y } = facet;\n        if (x != null || y != null) {\n            facetData = arrayify(facet.data);\n            if (facetData == null)\n                throw new Error(\"missing facet data\");\n            facetChannels = {};\n            if (x != null) {\n                const fx = Channel(facetData, { value: x, scale: \"fx\" });\n                facetChannels.fx = fx;\n                channelsByScale.set(\"fx\", [fx]);\n            }\n            if (y != null) {\n                const fy = Channel(facetData, { value: y, scale: \"fy\" });\n                facetChannels.fy = fy;\n                channelsByScale.set(\"fy\", [fy]);\n            }\n            facetIndex = range(facetData);\n            facets = facetGroups(facetIndex, facetChannels);\n            facetsIndex = facets.map(second);\n        }\n    }\n    // Initialize the marks\u2019 state.\n    for (const mark of marks) {\n        if (stateByMark.has(mark))\n            throw new Error(\"duplicate mark; each mark must be unique\");\n        const markFacets = facetsIndex === undefined\n            ? undefined\n            : mark.facet === \"auto\"\n                ? mark.data === facet.data\n                    ? facetsIndex\n                    : undefined\n                : mark.facet === \"include\"\n                    ? facetsIndex\n                    : mark.facet === \"exclude\"\n                        ? facetsExclude || (facetsExclude = facetsIndex.map((f) => Uint32Array.from(difference(facetIndex, f))))\n                        : undefined;\n        const { data, facets, channels } = mark.initialize(markFacets, facetChannels);\n        applyScaleTransforms(channels, options);\n        stateByMark.set(mark, { data, facets, channels });\n        // Warn for the common pitfall of wanting to facet mapped data.\n        if (facetIndex?.length > 1 && // non-trivial faceting\n            mark.facet === \"auto\" && // no explicit mark facet option\n            mark.data !== facet.data && // mark not implicitly faceted (different data)\n            arrayify(mark.data)?.length === facetData.length // mark data seems parallel to facet data\n        ) {\n            warn(`Warning: the ${mark.ariaLabel} mark appears to use faceted data, but isn\u2019t faceted. The mark data has the same length as the facet data and the mark facet option is \"auto\", but the mark data and facet data are distinct. If this mark should be faceted, set the mark facet option to true; otherwise, suppress this warning by setting the mark facet option to false.`);\n        }\n    }\n    // Initalize the scales and axes.\n    const scaleDescriptors = Scales(addScaleChannels(channelsByScale, stateByMark), options);\n    const scales = ScaleFunctions(scaleDescriptors);\n    const axes = Axes(scaleDescriptors, options);\n    const dimensions = Dimensions(scaleDescriptors, axes, options);\n    const context = Context(options);\n    autoScaleRange(scaleDescriptors, dimensions);\n    autoAxisTicks(scaleDescriptors, axes);\n    const { fx, fy } = scales;\n    const fyMargins = fy && { marginTop: 0, marginBottom: 0, height: fy.bandwidth() };\n    const fxMargins = fx && { marginRight: 0, marginLeft: 0, width: fx.bandwidth() };\n    const subdimensions = { ...dimensions, ...fxMargins, ...fyMargins };\n    // Reinitialize; for deriving channels dependent on other channels.\n    const newByScale = new Set();\n    for (const [mark, state] of stateByMark) {\n        if (mark.initializer != null) {\n            const { facets, channels } = mark.initializer(state.data, state.facets, state.channels, scales, subdimensions);\n            if (facets !== undefined)\n                state.facets = facets;\n            if (channels !== undefined) {\n                inferChannelScale(channels, mark);\n                applyScaleTransforms(channels, options);\n                Object.assign(state.channels, channels);\n                for (const { scale } of Object.values(channels))\n                    if (scale != null)\n                        newByScale.add(scale);\n            }\n        }\n    }\n    // Reconstruct scales if new scaled channels were created during reinitialization.\n    if (newByScale.size) {\n        for (const key of newByScale)\n            if (scaleRegistry.get(key) === position)\n                throw new Error(`initializers cannot declare position scales: ${key}`);\n        const newScaleDescriptors = Scales(addScaleChannels(new Map(), stateByMark, (key) => newByScale.has(key)), options);\n        const newScales = ScaleFunctions(newScaleDescriptors);\n        Object.assign(scaleDescriptors, newScaleDescriptors);\n        Object.assign(scales, newScales);\n    }\n    autoScaleLabels(channelsByScale, scaleDescriptors, axes, dimensions, options);\n    // Compute value objects, applying scales as needed.\n    for (const state of stateByMark.values()) {\n        state.values = valueObject(state.channels, scales);\n    }\n    const { width, height } = dimensions;\n    const svg = create(\"svg\", context)\n        .attr(\"class\", className)\n        .attr(\"fill\", \"currentColor\")\n        .attr(\"font-family\", \"system-ui, sans-serif\")\n        .attr(\"font-size\", 10)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"viewBox\", `0 0 ${width} ${height}`)\n        .attr(\"aria-label\", ariaLabel)\n        .attr(\"aria-description\", ariaDescription)\n        .call((svg) => svg.append(\"style\").text(`\n        .${className} {\n          display: block;\n          background: white;\n          height: auto;\n          height: intrinsic;\n          max-width: 100%;\n        }\n        .${className} text,\n        .${className} tspan {\n          white-space: pre;\n        }\n      `))\n        .call(applyInlineStyles, style)\n        .node();\n    // When faceting, render axes for fx and fy instead of x and y.\n    const axisY = axes[facets !== undefined && fy ? \"fy\" : \"y\"];\n    const axisX = axes[facets !== undefined && fx ? \"fx\" : \"x\"];\n    if (axisY)\n        svg.appendChild(axisY.render(null, scales, dimensions, context));\n    if (axisX)\n        svg.appendChild(axisX.render(null, scales, dimensions, context));\n    // Render (possibly faceted) marks.\n    if (facets !== undefined) {\n        const fyDomain = fy && fy.domain();\n        const fxDomain = fx && fx.domain();\n        const indexByFacet = facetMap(facetChannels);\n        facets.forEach(([key], i) => indexByFacet.set(key, i));\n        const selection = select(svg);\n        if (fy && axes.y) {\n            const axis1 = axes.y, axis2 = nolabel(axis1);\n            const j = axis1.labelAnchor === \"bottom\"\n                ? fyDomain.length - 1\n                : axis1.labelAnchor === \"center\"\n                    ? fyDomain.length >> 1\n                    : 0;\n            selection\n                .selectAll()\n                .data(fyDomain)\n                .enter()\n                .append((ky, i) => (i === j ? axis1 : axis2).render(fx && where(fxDomain, (kx) => indexByFacet.has([kx, ky])), scales, { ...dimensions, ...fyMargins, offsetTop: fy(ky) }, context));\n        }\n        if (fx && axes.x) {\n            const axis1 = axes.x, axis2 = nolabel(axis1);\n            const j = axis1.labelAnchor === \"right\" ? fxDomain.length - 1 : axis1.labelAnchor === \"center\" ? fxDomain.length >> 1 : 0;\n            const { marginLeft, marginRight } = dimensions;\n            selection\n                .selectAll()\n                .data(fxDomain)\n                .enter()\n                .append((kx, i) => (i === j ? axis1 : axis2).render(fy && where(fyDomain, (ky) => indexByFacet.has([kx, ky])), scales, {\n                ...dimensions,\n                ...fxMargins,\n                labelMarginLeft: marginLeft,\n                labelMarginRight: marginRight,\n                offsetLeft: fx(kx)\n            }, context));\n        }\n        selection\n            .selectAll()\n            .data(facetKeys(scales).filter(indexByFacet.has, indexByFacet))\n            .enter()\n            .append(\"g\")\n            .attr(\"aria-label\", \"facet\")\n            .attr(\"transform\", facetTranslate(fx, fy))\n            .each(function (key) {\n            const j = indexByFacet.get(key);\n            for (const [mark, { channels, values, facets }] of stateByMark) {\n                const facet = facets ? mark.filter(facets[j] ?? facets[0], channels, values) : null;\n                const node = mark.render(facet, scales, values, subdimensions, context);\n                if (node != null)\n                    this.appendChild(node);\n            }\n        });\n    }\n    else {\n        for (const [mark, { channels, values, facets }] of stateByMark) {\n            const facet = facets ? mark.filter(facets[0], channels, values) : null;\n            const node = mark.render(facet, scales, values, dimensions, context);\n            if (node != null)\n                svg.appendChild(node);\n        }\n    }\n    // Wrap the plot in a figure with a caption, if desired.\n    let figure = svg;\n    const legends = Legends(scaleDescriptors, context, options);\n    if (caption != null || legends.length > 0) {\n        const { document } = context;\n        figure = document.createElement(\"figure\");\n        figure.style.maxWidth = \"initial\";\n        for (const legend of legends)\n            figure.appendChild(legend);\n        figure.appendChild(svg);\n        if (caption != null) {\n            const figcaption = document.createElement(\"figcaption\");\n            figcaption.appendChild(caption instanceof Node ? caption : document.createTextNode(caption));\n            figure.appendChild(figcaption);\n        }\n    }\n    figure.scale = exposeScales(scaleDescriptors);\n    figure.legend = exposeLegends(scaleDescriptors, context, options);\n    const w = consumeWarnings();\n    if (w > 0) {\n        select(svg)\n            .append(\"text\")\n            .attr(\"x\", width)\n            .attr(\"y\", 20)\n            .attr(\"dy\", \"-1em\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"font-family\", \"initial\") // fix emoji rendering in Chrome\n            .text(\"\\u26a0\\ufe0f\") // emoji variation selector\n            .append(\"title\")\n            .text(`${w.toLocaleString(\"en-US\")} warning${w === 1 ? \"\" : \"s\"}. Please check the console.`);\n    }\n    return figure;\n}\nexport class Mark {\n    constructor(data, channels = {}, options = {}, defaults) {\n        const { facet = \"auto\", sort, dx, dy, clip, channels: extraChannels } = options;\n        this.data = data;\n        this.sort = isDomainSort(sort) ? sort : null;\n        this.initializer = initializer(options).initializer;\n        this.transform = this.initializer ? options.transform : basic(options).transform;\n        this.facet =\n            facet == null || facet === false\n                ? null\n                : keyword(facet === true ? \"include\" : facet, \"facet\", [\"auto\", \"include\", \"exclude\"]);\n        channels = maybeNamed(channels);\n        if (extraChannels !== undefined)\n            channels = { ...maybeNamed(extraChannels), ...channels };\n        if (defaults !== undefined)\n            channels = { ...styles(this, options, defaults), ...channels };\n        this.channels = Object.fromEntries(Object.entries(channels).filter(([name, { value, optional }]) => {\n            if (value != null)\n                return true;\n            if (optional)\n                return false;\n            throw new Error(`missing channel value: ${name}`);\n        }));\n        this.dx = +dx || 0;\n        this.dy = +dy || 0;\n        this.clip = maybeClip(clip);\n    }\n    initialize(facets, facetChannels) {\n        let data = arrayify(this.data);\n        if (facets === undefined && data != null)\n            facets = [range(data)];\n        if (this.transform != null)\n            ({ facets, data } = this.transform(data, facets)), (data = arrayify(data));\n        const channels = Channels(this.channels, data);\n        if (this.sort != null)\n            channelDomain(channels, facetChannels, data, this.sort);\n        return { data, facets, channels };\n    }\n    filter(index, channels, values) {\n        for (const name in channels) {\n            const { filter = defined } = channels[name];\n            if (filter !== null) {\n                const value = values[name];\n                index = index.filter((i) => filter(value[i]));\n            }\n        }\n        return index;\n    }\n    plot({ marks = [], ...options } = {}) {\n        return plot({ ...options, marks: [...marks, this] });\n    }\n}\n/**\n * A convenience method for composing a mark from a series of other marks.\n * Returns an array of marks that implements the *mark*.plot function. See the\n * [box mark\n * implementation](https://github.com/observablehq/plot/blob/main/src/marks/box.js)\n * for an example.\n */\nexport function marks(...marks) {\n    marks.plot = Mark.prototype.plot;\n    return marks;\n}\nfunction markify(mark) {\n    return typeof mark?.render === \"function\" ? mark : new Render(mark);\n}\nclass Render extends Mark {\n    constructor(render) {\n        super();\n        if (render == null)\n            return;\n        if (typeof render !== \"function\")\n            throw new TypeError(\"invalid mark; missing render function\");\n        this.render = render;\n    }\n    render() { }\n}\n// Note: mutates channel.value to apply the scale transform, if any.\nfunction applyScaleTransforms(channels, options) {\n    for (const name in channels) {\n        const channel = channels[name];\n        const { scale } = channel;\n        if (scale != null) {\n            const { percent, interval, transform = percent ? (x) => x * 100 : maybeInterval(interval)?.floor } = options[scale] || {};\n            if (transform != null)\n                channel.value = map(channel.value, transform);\n        }\n    }\n    return channels;\n}\n// An initializer may generate channels without knowing how the downstream mark\n// will use them. Marks are typically responsible associated scales with\n// channels, but here we assume common behavior across marks.\nfunction inferChannelScale(channels) {\n    for (const name in channels) {\n        const channel = channels[name];\n        let { scale } = channel;\n        if (scale === true) {\n            switch (name) {\n                case \"fill\":\n                case \"stroke\":\n                    scale = \"color\";\n                    break;\n                case \"fillOpacity\":\n                case \"strokeOpacity\":\n                case \"opacity\":\n                    scale = \"opacity\";\n                    break;\n                default:\n                    scale = scaleRegistry.has(name) ? name : null;\n                    break;\n            }\n            channel.scale = scale;\n        }\n    }\n}\nfunction addScaleChannels(channelsByScale, stateByMark, filter = yes) {\n    for (const { channels } of stateByMark.values()) {\n        for (const name in channels) {\n            const channel = channels[name];\n            const { scale } = channel;\n            if (scale != null && filter(scale)) {\n                const channels = channelsByScale.get(scale);\n                if (channels !== undefined)\n                    channels.push(channel);\n                else\n                    channelsByScale.set(scale, [channel]);\n            }\n        }\n    }\n    return channelsByScale;\n}\n// Derives a copy of the specified axis with the label disabled.\nfunction nolabel(axis) {\n    return axis === undefined || axis.label === undefined\n        ? axis // use the existing axis if unlabeled\n        : Object.assign(Object.create(axis), { label: undefined });\n}\n// Unlike facetGroups, which returns groups in order of input data, this returns\n// keys in order of the associated scale\u2019s domains.\nfunction facetKeys({ fx, fy }) {\n    return fx && fy ? cross(fx.domain(), fy.domain()) : fx ? fx.domain() : fy.domain();\n}\n// Returns an array of [[key1, index1], [key2, index2], \u2026] representing the data\n// indexes associated with each facet. For two-dimensional faceting, each key\n// is a two-element array; see also facetMap.\nfunction facetGroups(index, { fx, fy }) {\n    return fx && fy ? facetGroup2(index, fx, fy) : fx ? facetGroup1(index, fx) : facetGroup1(index, fy);\n}\nfunction facetGroup1(index, { value: F }) {\n    return groups(index, (i) => F[i]);\n}\nfunction facetGroup2(index, { value: FX }, { value: FY }) {\n    return groups(index, (i) => FX[i], (i) => FY[i]).flatMap(([x, xgroup]) => xgroup.map(([y, ygroup]) => [[x, y], ygroup]));\n}\n// This must match the key structure returned by facetGroups.\nfunction facetTranslate(fx, fy) {\n    return fx && fy\n        ? ([kx, ky]) => `translate(${fx(kx)},${fy(ky)})`\n        : fx\n            ? (kx) => `translate(${fx(kx)},0)`\n            : (ky) => `translate(0,${fy(ky)})`;\n}\nfunction facetMap({ fx, fy }) {\n    return new (fx && fy ? FacetMap2 : FacetMap)();\n}\nclass FacetMap {\n    constructor() {\n        this._ = new InternMap();\n    }\n    has(key) {\n        return this._.has(key);\n    }\n    get(key) {\n        return this._.get(key);\n    }\n    set(key, value) {\n        return this._.set(key, value), this;\n    }\n}\n// A Map-like interface that supports paired keys.\nclass FacetMap2 extends FacetMap {\n    has([key1, key2]) {\n        const map = super.get(key1);\n        return map ? map.has(key2) : false;\n    }\n    get([key1, key2]) {\n        const map = super.get(key1);\n        return map && map.get(key2);\n    }\n    set([key1, key2], value) {\n        const map = super.get(key1);\n        if (map)\n            map.set(key2, value);\n        else\n            super.set(key1, new InternMap([[key2, value]]));\n        return this;\n    }\n}\n", "import { curveBasis, curveBasisClosed, curveBasisOpen, curveBundle, curveBumpX, curveBumpY, curveCardinal, curveCardinalClosed, curveCardinalOpen, curveCatmullRom, curveCatmullRomClosed, curveCatmullRomOpen, curveLinear, curveLinearClosed, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore } from \"d3\";\nconst curves = new Map([\n    [\"basis\", curveBasis],\n    [\"basis-closed\", curveBasisClosed],\n    [\"basis-open\", curveBasisOpen],\n    [\"bundle\", curveBundle],\n    [\"bump-x\", curveBumpX],\n    [\"bump-y\", curveBumpY],\n    [\"cardinal\", curveCardinal],\n    [\"cardinal-closed\", curveCardinalClosed],\n    [\"cardinal-open\", curveCardinalOpen],\n    [\"catmull-rom\", curveCatmullRom],\n    [\"catmull-rom-closed\", curveCatmullRomClosed],\n    [\"catmull-rom-open\", curveCatmullRomOpen],\n    [\"linear\", curveLinear],\n    [\"linear-closed\", curveLinearClosed],\n    [\"monotone-x\", curveMonotoneX],\n    [\"monotone-y\", curveMonotoneY],\n    [\"natural\", curveNatural],\n    [\"step\", curveStep],\n    [\"step-after\", curveStepAfter],\n    [\"step-before\", curveStepBefore]\n]);\nexport function Curve(curve = curveLinear, tension) {\n    if (typeof curve === \"function\")\n        return curve; // custom curve\n    const c = curves.get(`${curve}`.toLowerCase());\n    if (!c)\n        throw new Error(`unknown curve: ${curve}`);\n    if (tension !== undefined) {\n        if (\"beta\" in c) {\n            return c.beta(tension);\n        }\n        else if (\"tension\" in c) {\n            return c.tension(tension);\n        }\n        else if (\"alpha\" in c) {\n            return c.alpha(tension);\n        }\n    }\n    return c;\n}\n", "import { bin as binner, extent, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, utcTickInterval } from \"d3\";\nimport { valueof, range, identity, maybeColumn, maybeTuple, maybeColorChannel, maybeValue, mid, labelof, isTemporal, isIterable } from \"../options.js\";\nimport { coerceDate, coerceNumber } from \"../scales.js\";\nimport { basic } from \"./basic.js\";\nimport { hasOutput, maybeEvaluator, maybeGroup, maybeOutput, maybeOutputs, maybeReduce, maybeSort, maybeSubgroup, reduceCount, reduceFirst, reduceIdentity } from \"./group.js\";\nimport { maybeInsetX, maybeInsetY } from \"./inset.js\";\nimport { maybeInterval } from \"./interval.js\";\n/**\n * ```js\n * Plot.rectY(athletes, Plot.binX({y: \"count\"}, {x: \"weight\"}))\n * ```\n *\n * Bins on *x*. Also groups on *y* and the first channel of *z*, *fill*, or\n * *stroke*, if any.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#bin\n */\nexport function binX(outputs = { y: \"count\" }, options = {}) {\n    // Group on {z, fill, stroke}, then optionally on y, then bin x.\n    [outputs, options] = mergeOptions(outputs, options);\n    const { x, y } = options;\n    return binn(maybeBinValue(x, options, identity), null, null, y, outputs, maybeInsetX(options));\n}\n/**\n * ```js\n * Plot.rectX(athletes, Plot.binY({x: \"count\"}, {y: \"weight\"}))\n * ```\n *\n * Bins on *y*. Also groups on *x* and first channel of *z*, *fill*, or\n * *stroke*, if any.\n */\nexport function binY(outputs = { x: \"count\" }, options = {}) {\n    // Group on {z, fill, stroke}, then optionally on x, then bin y.\n    [outputs, options] = mergeOptions(outputs, options);\n    const { x, y } = options;\n    return binn(null, maybeBinValue(y, options, identity), x, null, outputs, maybeInsetY(options));\n}\n/**\n * ```js\n * Plot.rect(athletes, Plot.bin({fillOpacity: \"count\"}, {x: \"weight\", y: \"height\"}))\n * ```\n *\n * Bins on *x* and *y*. Also groups on the first channel of *z*, *fill*, or\n * *stroke*, if any.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#bin\n */\nexport function bin(outputs = { fill: \"count\" }, options = {}) {\n    // Group on {z, fill, stroke}, then bin on x and y.\n    [outputs, options] = mergeOptions(outputs, options);\n    const { x, y } = maybeBinValueTuple(options);\n    return binn(x, y, null, null, outputs, maybeInsetX(maybeInsetY(options)));\n}\nfunction maybeDenseInterval(bin, k, options = {}) {\n    return options?.interval == null\n        ? options\n        : bin({ [k]: options?.reduce === undefined ? reduceFirst : options.reduce, filter: null }, options);\n}\nexport function maybeDenseIntervalX(options) {\n    return maybeDenseInterval(binX, \"y\", options);\n}\nexport function maybeDenseIntervalY(options) {\n    return maybeDenseInterval(binY, \"x\", options);\n}\nfunction binn(bx, // optionally bin on x (exclusive with gx)\nby, // optionally bin on y (exclusive with gy)\ngx, // optionally group on x (exclusive with bx and gy)\ngy, // optionally group on y (exclusive with by and gx)\n{ data: reduceData = reduceIdentity, filter = reduceCount, // return only non-empty bins by default\nsort, reverse, ...outputs // output channel definitions\n } = {}, inputs = {} // input channels and options\n) {\n    bx = maybeBin(bx);\n    by = maybeBin(by);\n    // Compute the outputs.\n    outputs = maybeOutputs(outputs, inputs);\n    reduceData = maybeReduce(reduceData, identity);\n    sort = sort == null ? undefined : maybeOutput(\"sort\", sort, inputs);\n    filter = filter == null ? undefined : maybeEvaluator(\"filter\", filter, inputs);\n    // Don\u2019t group on a channel if an output requires it as an input!\n    if (gx != null && hasOutput(outputs, \"x\", \"x1\", \"x2\"))\n        gx = null;\n    if (gy != null && hasOutput(outputs, \"y\", \"y1\", \"y2\"))\n        gy = null;\n    // Produce x1, x2, y1, and y2 output channels as appropriate (when binning).\n    const [BX1, setBX1] = maybeColumn(bx);\n    const [BX2, setBX2] = maybeColumn(bx);\n    const [BY1, setBY1] = maybeColumn(by);\n    const [BY2, setBY2] = maybeColumn(by);\n    // Produce x or y output channels as appropriate (when grouping).\n    const [k, gk] = gx != null ? [gx, \"x\"] : gy != null ? [gy, \"y\"] : [];\n    const [GK, setGK] = maybeColumn(k);\n    // Greedily materialize the z, fill, and stroke channels (if channels and not\n    // constants) so that we can reference them for subdividing groups without\n    // computing them more than once. We also want to consume options that should\n    // only apply to this transform rather than passing them through to the next.\n    const { x, y, z, fill, stroke, x1, x2, // consumed if x is an output\n    y1, y2, // consumed if y is an output\n    domain, cumulative, thresholds, interval, ...options } = inputs;\n    const [GZ, setGZ] = maybeColumn(z);\n    const [vfill] = maybeColorChannel(fill);\n    const [vstroke] = maybeColorChannel(stroke);\n    const [GF, setGF] = maybeColumn(vfill);\n    const [GS, setGS] = maybeColumn(vstroke);\n    return {\n        ...(\"z\" in inputs && { z: GZ || z }),\n        ...(\"fill\" in inputs && { fill: GF || fill }),\n        ...(\"stroke\" in inputs && { stroke: GS || stroke }),\n        ...basic(options, (data, facets) => {\n            const K = valueof(data, k);\n            const Z = valueof(data, z);\n            const F = valueof(data, vfill);\n            const S = valueof(data, vstroke);\n            const G = maybeSubgroup(outputs, { z: Z, fill: F, stroke: S });\n            const groupFacets = [];\n            const groupData = [];\n            const GK = K && setGK([]);\n            const GZ = Z && setGZ([]);\n            const GF = F && setGF([]);\n            const GS = S && setGS([]);\n            const BX = bx ? bx(data) : [[, , (I) => I]];\n            const BY = by ? by(data) : [[, , (I) => I]];\n            const BX1 = bx && setBX1([]);\n            const BX2 = bx && setBX2([]);\n            const BY1 = by && setBY1([]);\n            const BY2 = by && setBY2([]);\n            let i = 0;\n            for (const o of outputs)\n                o.initialize(data);\n            if (sort)\n                sort.initialize(data);\n            if (filter)\n                filter.initialize(data);\n            for (const facet of facets) {\n                const groupFacet = [];\n                for (const o of outputs)\n                    o.scope(\"facet\", facet);\n                if (sort)\n                    sort.scope(\"facet\", facet);\n                if (filter)\n                    filter.scope(\"facet\", facet);\n                for (const [f, I] of maybeGroup(facet, G)) {\n                    for (const [k, g] of maybeGroup(I, K)) {\n                        for (const [x1, x2, fx] of BX) {\n                            const bb = fx(g);\n                            for (const [y1, y2, fy] of BY) {\n                                const extent = { x1, x2, y1, y2 };\n                                const b = fy(bb);\n                                if (filter && !filter.reduce(b, extent))\n                                    continue;\n                                groupFacet.push(i++);\n                                groupData.push(reduceData.reduce(b, data, extent));\n                                if (K)\n                                    GK.push(k);\n                                if (Z)\n                                    GZ.push(G === Z ? f : Z[b[0]]);\n                                if (F)\n                                    GF.push(G === F ? f : F[b[0]]);\n                                if (S)\n                                    GS.push(G === S ? f : S[b[0]]);\n                                if (BX1)\n                                    BX1.push(x1), BX2.push(x2);\n                                if (BY1)\n                                    BY1.push(y1), BY2.push(y2);\n                                for (const o of outputs)\n                                    o.reduce(b, extent);\n                                if (sort)\n                                    sort.reduce(b);\n                            }\n                        }\n                    }\n                }\n                groupFacets.push(groupFacet);\n            }\n            maybeSort(groupFacets, sort, reverse);\n            return { data: groupData, facets: groupFacets };\n        }),\n        ...(!hasOutput(outputs, \"x\") && (BX1 ? { x1: BX1, x2: BX2, x: mid(BX1, BX2) } : { x, x1, x2 })),\n        ...(!hasOutput(outputs, \"y\") && (BY1 ? { y1: BY1, y2: BY2, y: mid(BY1, BY2) } : { y, y1, y2 })),\n        ...(GK && { [gk]: GK }),\n        ...Object.fromEntries(outputs.map(({ name, output }) => [name, output]))\n    };\n}\n// Allow bin options to be specified as part of outputs; merge them into options.\nfunction mergeOptions({ cumulative, domain, thresholds, interval, ...outputs }, options) {\n    return [outputs, { cumulative, domain, thresholds, interval, ...options }];\n}\nfunction maybeBinValue(value, { cumulative, domain, thresholds, interval }, defaultValue) {\n    value = { ...maybeValue(value) };\n    if (value.domain === undefined)\n        value.domain = domain;\n    if (value.cumulative === undefined)\n        value.cumulative = cumulative;\n    if (value.thresholds === undefined)\n        value.thresholds = thresholds;\n    if (value.interval === undefined)\n        value.interval = interval;\n    if (value.value === undefined)\n        value.value = defaultValue;\n    value.thresholds = maybeThresholds(value.thresholds, value.interval);\n    return value;\n}\nfunction maybeBinValueTuple(options) {\n    let { x, y } = options;\n    x = maybeBinValue(x, options);\n    y = maybeBinValue(y, options);\n    [x.value, y.value] = maybeTuple(x.value, y.value);\n    return { x, y };\n}\nfunction maybeBin(options) {\n    if (options == null)\n        return;\n    const { value, cumulative, domain = extent, thresholds } = options;\n    const bin = (data) => {\n        let V = valueof(data, value, Array); // d3.bin prefers Array input\n        const bin = binner().value((i) => V[i]);\n        if (isTemporal(V) || isTimeThresholds(thresholds)) {\n            V = V.map(coerceDate);\n            let [min, max] = typeof domain === \"function\" ? domain(V) : domain;\n            let t = typeof thresholds === \"function\" && !isInterval(thresholds) ? thresholds(V, min, max) : thresholds;\n            if (typeof t === \"number\")\n                t = utcTickInterval(min, max, t);\n            if (isInterval(t)) {\n                if (domain === extent) {\n                    min = t.floor(min);\n                    max = t.ceil(new Date(+max + 1));\n                }\n                t = t.range(min, max);\n            }\n            bin.thresholds(t).domain([min, max]);\n        }\n        else {\n            V = V.map(coerceNumber);\n            let d = domain;\n            let t = thresholds;\n            if (isInterval(t)) {\n                let [min, max] = typeof d === \"function\" ? d(V) : d;\n                if (d === extent) {\n                    min = t.floor(min);\n                    max = t.offset(t.floor(max));\n                    d = [min, max];\n                }\n                t = t.range(min, max);\n            }\n            bin.thresholds(t).domain(d);\n        }\n        let bins = bin(range(data)).map(binset);\n        if (cumulative)\n            bins = (cumulative < 0 ? bins.reverse() : bins).map(bincumset);\n        return bins.map(binfilter);\n    };\n    bin.label = labelof(value);\n    return bin;\n}\nfunction maybeThresholds(thresholds, interval) {\n    if (thresholds === undefined) {\n        return interval === undefined ? thresholdAuto : maybeRangeInterval(interval);\n    }\n    if (typeof thresholds === \"string\") {\n        switch (thresholds.toLowerCase()) {\n            case \"freedman-diaconis\":\n                return thresholdFreedmanDiaconis;\n            case \"scott\":\n                return thresholdScott;\n            case \"sturges\":\n                return thresholdSturges;\n            case \"auto\":\n                return thresholdAuto;\n        }\n        throw new Error(`invalid thresholds: ${thresholds}`);\n    }\n    return thresholds; // pass array, count, or function to bin.thresholds\n}\n// Unlike the interval transform, we require a range method, too.\nfunction maybeRangeInterval(interval) {\n    interval = maybeInterval(interval);\n    if (!isInterval(interval))\n        throw new Error(`invalid interval: ${interval}`);\n    return interval;\n}\nfunction thresholdAuto(values, min, max) {\n    return Math.min(200, thresholdScott(values, min, max));\n}\nfunction isTimeThresholds(t) {\n    return isTimeInterval(t) || (isIterable(t) && isTemporal(t));\n}\nfunction isTimeInterval(t) {\n    return isInterval(t) && typeof t === \"function\" && t() instanceof Date;\n}\nfunction isInterval(t) {\n    return t ? typeof t.range === \"function\" : false;\n}\nfunction binset(bin) {\n    return [bin, new Set(bin)];\n}\nfunction bincumset([bin], j, bins) {\n    return [\n        bin,\n        {\n            get size() {\n                for (let k = 0; k <= j; ++k) {\n                    if (bins[k][1].size) {\n                        return 1; // a non-empty value\n                    }\n                }\n                return 0;\n            },\n            has(i) {\n                for (let k = 0; k <= j; ++k) {\n                    if (bins[k][1].has(i)) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        }\n    ];\n}\nfunction binfilter([{ x0, x1 }, set]) {\n    return [x0, x1, set.size ? (I) => I.filter(set.has, set) : binempty];\n}\nfunction binempty() {\n    return new Uint32Array(0);\n}\n", "import { identity } from \"../options.js\";\nexport function maybeIdentityX(options = {}) {\n    const { x, x1, x2 } = options;\n    return x1 === undefined && x2 === undefined && x === undefined ? { ...options, x: identity } : options;\n}\nexport function maybeIdentityY(options = {}) {\n    const { y, y1, y2 } = options;\n    return y1 === undefined && y2 === undefined && y === undefined ? { ...options, y: identity } : options;\n}\n", "import { InternMap, cumsum, group, groupSort, greatest, max, min, rollup, sum } from \"d3\";\nimport { ascendingDefined } from \"../defined.js\";\nimport { field, column, maybeColumn, maybeZ, mid, range, valueof, maybeZero, one } from \"../options.js\";\nimport { basic } from \"./basic.js\";\n/**\n * ```js\n * Plot.stackX({y: \"year\", x: \"revenue\", z: \"format\", fill: \"group\"})\n * ```\n *\n * See Plot.stackY, but with *x* as the input value channel, *y* as the stack\n * index, *x1*, *x2* and *x* as the output channels.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#stack\n */\nexport function stackX(stack = {}, options = {}) {\n    if (arguments.length === 1)\n        [stack, options] = mergeOptions(stack);\n    const { y1, y = y1, x, ...rest } = options; // note: consumes x!\n    const [transform, Y, x1, x2] = stackAlias(y, x, \"x\", stack, rest);\n    return { ...transform, y1, y: Y, x1, x2, x: mid(x1, x2) };\n}\n/**\n * ```js\n * Plot.stackX1({y: \"year\", x: \"revenue\", z: \"format\", fill: \"group\"})\n * ```\n *\n * Equivalent to\n * [Plot.stackX](https://github.com/observablehq/plot/blob/main/README.md#plotstackxstack-options),\n * except that the **x1** channel is returned as the **x** channel. This can be\n * used, for example, to draw a line at the left edge of each stacked area.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#stack\n */\nexport function stackX1(stack = {}, options = {}) {\n    if (arguments.length === 1)\n        [stack, options] = mergeOptions(stack);\n    const { y1, y = y1, x } = options;\n    const [transform, Y, X] = stackAlias(y, x, \"x\", stack, options);\n    return { ...transform, y1, y: Y, x: X };\n}\n/**\n * ```js\n * Plot.stackX2({y: \"year\", x: \"revenue\", z: \"format\", fill: \"group\"})\n * ```\n *\n * Equivalent to\n * [Plot.stackX](https://github.com/observablehq/plot/blob/main/README.md#plotstackxstack-options),\n * except that the **x2** channel is returned as the **x** channel. This can be\n * used, for example, to draw a line at the right edge of each stacked area.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#stack\n */\nexport function stackX2(stack = {}, options = {}) {\n    if (arguments.length === 1)\n        [stack, options] = mergeOptions(stack);\n    const { y1, y = y1, x } = options;\n    const [transform, Y, , X] = stackAlias(y, x, \"x\", stack, options);\n    return { ...transform, y1, y: Y, x: X };\n}\n/**\n * ```js\n * Plot.stackY({x: \"year\", y: \"revenue\", z: \"format\", fill: \"group\"})\n * ```\n *\n * Creates new channels **y1** and **y2**, obtained by stacking the original\n * **y** channel for data points that share a common **x** (and possibly **z**)\n * value. A new **y** channel is also returned, which lazily computes the middle\n * value of **y1** and **y2**. The input **y** channel defaults to a constant 1,\n * resulting in a count of the data points. The stack options (*offset*,\n * *order*, and *reverse*) may be specified as part of the *options* object, if\n * the only argument, or as a separate *stack* options argument.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#stack\n */\nexport function stackY(stack = {}, options = {}) {\n    if (arguments.length === 1)\n        [stack, options] = mergeOptions(stack);\n    const { x1, x = x1, y, ...rest } = options; // note: consumes y!\n    const [transform, X, y1, y2] = stackAlias(x, y, \"y\", stack, rest);\n    return { ...transform, x1, x: X, y1, y2, y: mid(y1, y2) };\n}\n/**\n * ```js\n * Plot.stackY1({x: \"year\", y: \"revenue\", z: \"format\", fill: \"group\"})\n * ```\n *\n * Equivalent to\n * [Plot.stackY](https://github.com/observablehq/plot/blob/main/README.md#plotstackystack-options),\n * except that the **y1** channel is returned as the **y** channel. This can be\n * used, for example, to draw a line at the bottom of each stacked area.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#stack\n */\nexport function stackY1(stack = {}, options = {}) {\n    if (arguments.length === 1)\n        [stack, options] = mergeOptions(stack);\n    const { x1, x = x1, y } = options;\n    const [transform, X, Y] = stackAlias(x, y, \"y\", stack, options);\n    return { ...transform, x1, x: X, y: Y };\n}\n/**\n * ```js\n * Plot.stackY2({x: \"year\", y: \"revenue\", z: \"format\", fill: \"group\"})\n * ```\n *\n * Equivalent to\n * [Plot.stackY](https://github.com/observablehq/plot/blob/main/README.md#plotstackystack-options),\n * except that the **y2** channel is returned as the **y** channel. This can be\n * used, for example, to draw a line at the top of each stacked area.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#stack\n */\nexport function stackY2(stack = {}, options = {}) {\n    if (arguments.length === 1)\n        [stack, options] = mergeOptions(stack);\n    const { x1, x = x1, y } = options;\n    const [transform, X, , Y] = stackAlias(x, y, \"y\", stack, options);\n    return { ...transform, x1, x: X, y: Y };\n}\nexport function maybeStackX({ x, x1, x2, ...options } = {}) {\n    if (x1 === undefined && x2 === undefined)\n        return stackX({ x, ...options });\n    [x1, x2] = maybeZero(x, x1, x2);\n    return { ...options, x1, x2 };\n}\nexport function maybeStackY({ y, y1, y2, ...options } = {}) {\n    if (y1 === undefined && y2 === undefined)\n        return stackY({ y, ...options });\n    [y1, y2] = maybeZero(y, y1, y2);\n    return { ...options, y1, y2 };\n}\n// The reverse option is ambiguous: it is both a stack option and a basic\n// transform. If only one options object is specified, we interpret it as a\n// stack option, and therefore must remove it from the propagated options.\nfunction mergeOptions(options) {\n    const { offset, order, reverse, ...rest } = options;\n    return [{ offset, order, reverse }, rest];\n}\nfunction stack(x, y = one, ky, { offset, order, reverse }, options) {\n    const z = maybeZ(options);\n    const [X, setX] = maybeColumn(x);\n    const [Y1, setY1] = column(y);\n    const [Y2, setY2] = column(y);\n    offset = maybeOffset(offset);\n    order = maybeOrder(order, offset, ky);\n    return [\n        basic(options, (data, facets) => {\n            const X = x == null ? undefined : setX(valueof(data, x));\n            const Y = valueof(data, y, Float64Array);\n            const Z = valueof(data, z);\n            const O = order && order(data, X, Y, Z);\n            const n = data.length;\n            const Y1 = setY1(new Float64Array(n));\n            const Y2 = setY2(new Float64Array(n));\n            const facetstacks = [];\n            for (const facet of facets) {\n                const stacks = X ? Array.from(group(facet, (i) => X[i]).values()) : [facet];\n                if (O)\n                    applyOrder(stacks, O);\n                for (const stack of stacks) {\n                    let yn = 0, yp = 0;\n                    if (reverse)\n                        stack.reverse();\n                    for (const i of stack) {\n                        const y = Y[i];\n                        if (y < 0)\n                            yn = Y2[i] = (Y1[i] = yn) + y;\n                        else if (y > 0)\n                            yp = Y2[i] = (Y1[i] = yp) + y;\n                        else\n                            Y2[i] = Y1[i] = yp; // NaN or zero\n                    }\n                }\n                facetstacks.push(stacks);\n            }\n            if (offset)\n                offset(facetstacks, Y1, Y2, Z);\n            return { data, facets };\n        }),\n        X,\n        Y1,\n        Y2\n    ];\n}\n// This is used internally so we can use `stack` as an argument name.\nconst stackAlias = stack;\nfunction maybeOffset(offset) {\n    if (offset == null)\n        return;\n    if (typeof offset === \"function\")\n        return offset;\n    switch (`${offset}`.toLowerCase()) {\n        case \"expand\":\n        case \"normalize\":\n            return offsetExpand;\n        case \"center\":\n        case \"silhouette\":\n            return offsetCenter;\n        case \"wiggle\":\n            return offsetWiggle;\n    }\n    throw new Error(`unknown offset: ${offset}`);\n}\n// Given a single stack, returns the minimum and maximum values from the given\n// Y2 column. Note that this relies on Y2 always being the outer column for\n// diverging values.\nfunction extent(stack, Y2) {\n    let min = 0, max = 0;\n    for (const i of stack) {\n        const y = Y2[i];\n        if (y < min)\n            min = y;\n        if (y > max)\n            max = y;\n    }\n    return [min, max];\n}\nfunction offsetExpand(facetstacks, Y1, Y2) {\n    for (const stacks of facetstacks) {\n        for (const stack of stacks) {\n            const [yn, yp] = extent(stack, Y2);\n            for (const i of stack) {\n                const m = 1 / (yp - yn || 1);\n                Y1[i] = m * (Y1[i] - yn);\n                Y2[i] = m * (Y2[i] - yn);\n            }\n        }\n    }\n}\nfunction offsetCenter(facetstacks, Y1, Y2) {\n    for (const stacks of facetstacks) {\n        for (const stack of stacks) {\n            const [yn, yp] = extent(stack, Y2);\n            for (const i of stack) {\n                const m = (yp + yn) / 2;\n                Y1[i] -= m;\n                Y2[i] -= m;\n            }\n        }\n        offsetZero(stacks, Y1, Y2);\n    }\n    offsetCenterFacets(facetstacks, Y1, Y2);\n}\nfunction offsetWiggle(facetstacks, Y1, Y2, Z) {\n    for (const stacks of facetstacks) {\n        const prev = new InternMap();\n        let y = 0;\n        for (const stack of stacks) {\n            let j = -1;\n            const Fi = stack.map((i) => Math.abs(Y2[i] - Y1[i]));\n            const Df = stack.map((i) => {\n                j = Z ? Z[i] : ++j;\n                const value = Y2[i] - Y1[i];\n                const diff = prev.has(j) ? value - prev.get(j) : 0;\n                prev.set(j, value);\n                return diff;\n            });\n            const Cf1 = [0, ...cumsum(Df)];\n            for (const i of stack) {\n                Y1[i] += y;\n                Y2[i] += y;\n            }\n            const s1 = sum(Fi);\n            if (s1)\n                y -= sum(Fi, (d, i) => (Df[i] / 2 + Cf1[i]) * d) / s1;\n        }\n        offsetZero(stacks, Y1, Y2);\n    }\n    offsetCenterFacets(facetstacks, Y1, Y2);\n}\nfunction offsetZero(stacks, Y1, Y2) {\n    const m = min(stacks, (stack) => min(stack, (i) => Y1[i]));\n    for (const stack of stacks) {\n        for (const i of stack) {\n            Y1[i] -= m;\n            Y2[i] -= m;\n        }\n    }\n}\nfunction offsetCenterFacets(facetstacks, Y1, Y2) {\n    const n = facetstacks.length;\n    if (n === 1)\n        return;\n    const facets = facetstacks.map((stacks) => stacks.flat());\n    const m = facets.map((I) => (min(I, (i) => Y1[i]) + max(I, (i) => Y2[i])) / 2);\n    const m0 = min(m);\n    for (let j = 0; j < n; j++) {\n        const p = m0 - m[j];\n        for (const i of facets[j]) {\n            Y1[i] += p;\n            Y2[i] += p;\n        }\n    }\n}\nfunction maybeOrder(order, offset, ky) {\n    if (order === undefined && offset === offsetWiggle)\n        return orderInsideOut;\n    if (order == null)\n        return;\n    if (typeof order === \"string\") {\n        switch (order.toLowerCase()) {\n            case \"value\":\n            case ky:\n                return orderY;\n            case \"z\":\n                return orderZ;\n            case \"sum\":\n                return orderSum;\n            case \"appearance\":\n                return orderAppearance;\n            case \"inside-out\":\n                return orderInsideOut;\n        }\n        return orderFunction(field(order));\n    }\n    if (typeof order === \"function\")\n        return orderFunction(order);\n    if (Array.isArray(order))\n        return orderGiven(order);\n    throw new Error(`invalid order: ${order}`);\n}\n// by value\nfunction orderY(data, X, Y) {\n    return Y;\n}\n// by location\nfunction orderZ(order, X, Y, Z) {\n    return Z;\n}\n// by sum of value (a.k.a. \u201Cascending\u201D)\nfunction orderSum(data, X, Y, Z) {\n    return orderZDomain(Z, groupSort(range(data), (I) => sum(I, (i) => Y[i]), (i) => Z[i]));\n}\n// by x = argmax of value\nfunction orderAppearance(data, X, Y, Z) {\n    return orderZDomain(Z, groupSort(range(data), (I) => X[greatest(I, (i) => Y[i])], (i) => Z[i]));\n}\n// by x = argmax of value, but rearranged inside-out by alternating series\n// according to the sign of a running divergence of sums\nfunction orderInsideOut(data, X, Y, Z) {\n    const I = range(data);\n    const K = groupSort(I, (I) => X[greatest(I, (i) => Y[i])], (i) => Z[i]);\n    const sums = rollup(I, (I) => sum(I, (i) => Y[i]), (i) => Z[i]);\n    const Kp = [], Kn = [];\n    let s = 0;\n    for (const k of K) {\n        if (s < 0) {\n            s += sums.get(k);\n            Kp.push(k);\n        }\n        else {\n            s -= sums.get(k);\n            Kn.push(k);\n        }\n    }\n    return orderZDomain(Z, Kn.reverse().concat(Kp));\n}\nfunction orderFunction(f) {\n    return (data) => valueof(data, f);\n}\nfunction orderGiven(domain) {\n    return (data, X, Y, Z) => orderZDomain(Z, domain);\n}\n// Given an explicit ordering of distinct values in z, returns a parallel column\n// O that can be used with applyOrder to sort stacks. Note that this is a series\n// order: it will be consistent across stacks.\nfunction orderZDomain(Z, domain) {\n    domain = new InternMap(domain.map((d, i) => [d, i]));\n    return Z.map((z) => domain.get(z));\n}\nfunction applyOrder(stacks, O) {\n    for (const stack of stacks) {\n        stack.sort((i, j) => ascendingDefined(O[i], O[j]));\n    }\n}\n", "import { area as shapeArea } from \"d3\";\nimport { create } from \"../context.js\";\nimport { Curve } from \"../curve.js\";\nimport { first, indexOf, maybeZ, second } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyDirectStyles, applyIndirectStyles, applyTransform, applyGroupedChannelStyles, groupIndex } from \"../style.js\";\nimport { maybeDenseIntervalX, maybeDenseIntervalY } from \"../transforms/bin.js\";\nimport { maybeIdentityX, maybeIdentityY } from \"../transforms/identity.js\";\nimport { maybeStackX, maybeStackY } from \"../transforms/stack.js\";\nconst defaults = {\n    ariaLabel: \"area\",\n    strokeWidth: 1,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: 1\n};\nexport class Area extends Mark {\n    constructor(data, options = {}) {\n        const { x1, y1, x2, y2, z, curve, tension } = options;\n        super(data, {\n            x1: { value: x1, scale: \"x\" },\n            y1: { value: y1, scale: \"y\" },\n            x2: { value: x2, scale: \"x\", optional: true },\n            y2: { value: y2, scale: \"y\", optional: true },\n            z: { value: maybeZ(options), optional: true }\n        }, options, defaults);\n        this.z = z;\n        this.curve = Curve(curve, tension);\n    }\n    filter(index) {\n        return index;\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x1: X1, y1: Y1, x2: X2 = X1, y2: Y2 = Y1 } = channels;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales, 0, 0)\n            .call((g) => g\n            .selectAll()\n            .data(groupIndex(index, [X1, Y1, X2, Y2], this, channels))\n            .enter()\n            .append(\"path\")\n            .call(applyDirectStyles, this)\n            .call(applyGroupedChannelStyles, this, channels)\n            .attr(\"d\", shapeArea()\n            .curve(this.curve)\n            .defined((i) => i >= 0)\n            .x0((i) => X1[i])\n            .y0((i) => Y1[i])\n            .x1((i) => X2[i])\n            .y1((i) => Y2[i])))\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.area(aapl, {x1: \"Date\", y1: 0, y2: \"Close\"})\n * ```\n *\n * Returns a new area with the given *data* and *options*. Plot.area is rarely\n * used directly; it is only needed when the baseline and topline have neither\n * common *x* nor *y* values.\n * [Plot.areaY](https://github.com/observablehq/plot/blob/main/README.md#plotareaydata-options)\n * is used in the common horizontal orientation where the baseline and topline\n * share *x* values, while\n * [Plot.areaX](https://github.com/observablehq/plot/blob/main/README.md#plotareaxdata-options)\n * is used in the vertical orientation where the baseline and topline share *y*\n * values.\n */\nexport function area(data, options) {\n    if (options === undefined)\n        return areaY(data, { x: first, y: second });\n    return new Area(data, options);\n}\n/**\n * ```js\n * Plot.areaX(aapl, {y: \"Date\", x: \"Close\"})\n * ```\n *\n * Returns a new area with the given *data* and *options*. This constructor is\n * used when the baseline and topline share *y* values, as in a time-series area\n * chart where time goes up\u2191. If neither the **x1** nor **x2** option is\n * specified, the **x** option may be specified as shorthand to apply an\n * implicit [stackX\n * transform](https://github.com/observablehq/plot/blob/main/README.md#plotstackxstack-options);\n * this is the typical configuration for an area chart with a baseline at *x* =\n * 0. If the **x** option is not specified, it defaults to the identity\n * function. The **y** option specifies the **y1** channel; and the **y1** and\n * **y2** options are ignored.\n *\n * If the **interval** option is specified, the [binY\n * transform](https://github.com/observablehq/plot/blob/main/README.md#bin) is\n * implicitly applied to the specified *options*. The reducer of the output *x*\n * channel may be specified via the **reduce** option, which defaults to\n * *first*. To default to zero instead of showing gaps in data, as when the\n * observed value represents a quantity, use the *sum* reducer.\n *\n * ```js\n * Plot.areaX(observations, {y: \"date\", x: \"temperature\", interval: d3.utcDay})\n * ```\n *\n * The **interval** option is recommended to \u201Cregularize\u201D sampled data; for\n * example, if your data represents timestamped temperature measurements and you\n * expect one sample per day, use d3.utcDay as the interval.\n */\nexport function areaX(data, options) {\n    const { y = indexOf, ...rest } = maybeDenseIntervalY(options);\n    return new Area(data, maybeStackX(maybeIdentityX({ ...rest, y1: y, y2: undefined })));\n}\n/**\n * ```js\n * Plot.areaY(aapl, {x: \"Date\", y: \"Close\"})\n * ```\n *\n * Returns a new area with the given *data* and *options*. This constructor is\n * used when the baseline and topline share *x* values, as in a time-series area\n * chart where time goes right\u2192. If neither the **y1** nor **y2** option is\n * specified, the **y** option may be specified as shorthand to apply an\n * implicit [stackY\n * transform](https://github.com/observablehq/plot/blob/main/README.md#plotstackystack-options);\n * this is the typical configuration for an area chart with a baseline at *y* =\n * 0. If the **y** option is not specified, it defaults to the identity\n * function. The **x** option specifies the **x1** channel; and the **x1** and\n * **x2** options are ignored.\n *\n * If the **interval** option is specified, the [binX\n * transform](https://github.com/observablehq/plot/blob/main/README.md#bin) is\n * implicitly applied to the specified *options*. The reducer of the output *y*\n * channel may be specified via the **reduce** option, which defaults to\n * *first*. To default to zero instead of showing gaps in data, as when the\n * observed value represents a quantity, use the *sum* reducer.\n *\n * ```js\n * Plot.areaY(observations, {x: \"date\", y: \"temperature\", interval: d3.utcDay)\n * ```\n *\n * The **interval** option is recommended to \u201Cregularize\u201D sampled data; for\n * example, if your data represents timestamped temperature measurements and you\n * expect one sample per day, use d3.utcDay as the interval.\n */\nexport function areaY(data, options) {\n    const { x = indexOf, ...rest } = maybeDenseIntervalX(options);\n    return new Area(data, maybeStackY(maybeIdentityY({ ...rest, x1: x, x2: undefined })));\n}\n", "import { create } from \"../context.js\";\nexport function markers(mark, { marker, markerStart = marker, markerMid = marker, markerEnd = marker } = {}) {\n    mark.markerStart = maybeMarker(markerStart);\n    mark.markerMid = maybeMarker(markerMid);\n    mark.markerEnd = maybeMarker(markerEnd);\n}\nfunction maybeMarker(marker) {\n    if (marker == null || marker === false)\n        return null;\n    if (marker === true)\n        return markerCircleFill;\n    if (typeof marker === \"function\")\n        return marker;\n    switch (`${marker}`.toLowerCase()) {\n        case \"none\":\n            return null;\n        case \"arrow\":\n            return markerArrow;\n        case \"dot\":\n            return markerDot;\n        case \"circle\":\n        case \"circle-fill\":\n            return markerCircleFill;\n        case \"circle-stroke\":\n            return markerCircleStroke;\n    }\n    throw new Error(`invalid marker: ${marker}`);\n}\nfunction markerArrow(color, context) {\n    return create(\"svg:marker\", context)\n        .attr(\"viewBox\", \"-5 -5 10 10\")\n        .attr(\"markerWidth\", 6.67)\n        .attr(\"markerHeight\", 6.67)\n        .attr(\"orient\", \"auto\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", color)\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"stroke-linecap\", \"round\")\n        .attr(\"stroke-linejoin\", \"round\")\n        .call((marker) => marker.append(\"path\").attr(\"d\", \"M-1.5,-3l3,3l-3,3\"))\n        .node();\n}\nfunction markerDot(color, context) {\n    return create(\"svg:marker\", context)\n        .attr(\"viewBox\", \"-5 -5 10 10\")\n        .attr(\"markerWidth\", 6.67)\n        .attr(\"markerHeight\", 6.67)\n        .attr(\"fill\", color)\n        .attr(\"stroke\", \"none\")\n        .call((marker) => marker.append(\"circle\").attr(\"r\", 2.5))\n        .node();\n}\nfunction markerCircleFill(color, context) {\n    return create(\"svg:marker\", context)\n        .attr(\"viewBox\", \"-5 -5 10 10\")\n        .attr(\"markerWidth\", 6.67)\n        .attr(\"markerHeight\", 6.67)\n        .attr(\"fill\", color)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", 1.5)\n        .call((marker) => marker.append(\"circle\").attr(\"r\", 3))\n        .node();\n}\nfunction markerCircleStroke(color, context) {\n    return create(\"svg:marker\", context)\n        .attr(\"viewBox\", \"-5 -5 10 10\")\n        .attr(\"markerWidth\", 6.67)\n        .attr(\"markerHeight\", 6.67)\n        .attr(\"fill\", \"white\")\n        .attr(\"stroke\", color)\n        .attr(\"stroke-width\", 1.5)\n        .call((marker) => marker.append(\"circle\").attr(\"r\", 3))\n        .node();\n}\nlet nextMarkerId = 0;\nexport function applyMarkers(path, mark, { stroke: S } = {}) {\n    return applyMarkersColor(path, mark, S && ((i) => S[i]));\n}\nexport function applyGroupedMarkers(path, mark, { stroke: S } = {}) {\n    return applyMarkersColor(path, mark, S && (([i]) => S[i]));\n}\nfunction applyMarkersColor(path, { markerStart, markerMid, markerEnd, stroke }, strokeof = () => stroke) {\n    const iriByMarkerColor = new Map();\n    function applyMarker(marker) {\n        return function (i) {\n            const color = strokeof(i);\n            let iriByColor = iriByMarkerColor.get(marker);\n            if (!iriByColor)\n                iriByMarkerColor.set(marker, (iriByColor = new Map()));\n            let iri = iriByColor.get(color);\n            if (!iri) {\n                const context = { document: this.ownerDocument };\n                const node = this.parentNode.insertBefore(marker(color, context), this);\n                const id = `plot-marker-${++nextMarkerId}`;\n                node.setAttribute(\"id\", id);\n                iriByColor.set(color, (iri = `url(#${id})`));\n            }\n            return iri;\n        };\n    }\n    if (markerStart)\n        path.attr(\"marker-start\", applyMarker(markerStart));\n    if (markerMid)\n        path.attr(\"marker-mid\", applyMarker(markerMid));\n    if (markerEnd)\n        path.attr(\"marker-end\", applyMarker(markerEnd));\n}\n", "import { path } from \"d3\";\nimport { create } from \"../context.js\";\nimport { Curve } from \"../curve.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyChannelStyles, applyDirectStyles, applyIndirectStyles, applyTransform } from \"../style.js\";\nimport { markers, applyMarkers } from \"./marker.js\";\nconst defaults = {\n    ariaLabel: \"link\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeMiterlimit: 1\n};\nexport class Link extends Mark {\n    constructor(data, options = {}) {\n        const { x1, y1, x2, y2, curve, tension } = options;\n        super(data, {\n            x1: { value: x1, scale: \"x\" },\n            y1: { value: y1, scale: \"y\" },\n            x2: { value: x2, scale: \"x\", optional: true },\n            y2: { value: y2, scale: \"y\", optional: true }\n        }, options, defaults);\n        this.curve = Curve(curve, tension);\n        markers(this, options);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x1: X1, y1: Y1, x2: X2 = X1, y2: Y2 = Y1 } = channels;\n        const { curve } = this;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"path\")\n            .call(applyDirectStyles, this)\n            .attr(\"d\", (i) => {\n            const p = path();\n            const c = curve(p);\n            c.lineStart();\n            c.point(X1[i], Y1[i]);\n            c.point(X2[i], Y2[i]);\n            c.lineEnd();\n            return p;\n        })\n            .call(applyChannelStyles, this, channels)\n            .call(applyMarkers, this, channels))\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.link(inequality, {x1: \"POP_1980\", y1: \"R90_10_1980\", x2: \"POP_2015\", y2: \"R90_10_2015\"})\n * ```\n *\n * Returns a new link with the given *data* and *options*.\n */\nexport function link(data, options = {}) {\n    let { x, x1, x2, y, y1, y2, ...remainingOptions } = options;\n    [x1, x2] = maybeSameValue(x, x1, x2);\n    [y1, y2] = maybeSameValue(y, y1, y2);\n    return new Link(data, { ...remainingOptions, x1, x2, y1, y2 });\n}\n// If x1 and x2 are specified, return them as {x1, x2}.\n// If x and x1 and specified, or x and x2 are specified, return them as {x1, x2}.\n// If only x, x1, or x2 are specified, return it as {x1}.\nexport function maybeSameValue(x, x1, x2) {\n    if (x === undefined) {\n        if (x1 === undefined) {\n            if (x2 !== undefined)\n                return [x2];\n        }\n        else {\n            if (x2 === undefined)\n                return [x1];\n        }\n    }\n    else if (x1 === undefined) {\n        return x2 === undefined ? [x] : [x, x2];\n    }\n    else if (x2 === undefined) {\n        return [x, x1];\n    }\n    return [x1, x2];\n}\n", "import { create } from \"../context.js\";\nimport { radians } from \"../math.js\";\nimport { constant } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyChannelStyles, applyDirectStyles, applyIndirectStyles, applyTransform } from \"../style.js\";\nimport { maybeSameValue } from \"./link.js\";\nconst defaults = {\n    ariaLabel: \"arrow\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 1,\n    strokeWidth: 1.5\n};\nexport class Arrow extends Mark {\n    constructor(data, options = {}) {\n        const { x1, y1, x2, y2, bend = 0, headAngle = 60, headLength = 8, // Disable the arrow with headLength = 0; or, use Plot.link.\n        inset = 0, insetStart = inset, insetEnd = inset } = options;\n        super(data, {\n            x1: { value: x1, scale: \"x\" },\n            y1: { value: y1, scale: \"y\" },\n            x2: { value: x2, scale: \"x\", optional: true },\n            y2: { value: y2, scale: \"y\", optional: true }\n        }, options, defaults);\n        this.bend = bend === true ? 22.5 : Math.max(-90, Math.min(90, bend));\n        this.headAngle = +headAngle;\n        this.headLength = +headLength;\n        this.insetStart = +insetStart;\n        this.insetEnd = +insetEnd;\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x1: X1, y1: Y1, x2: X2 = X1, y2: Y2 = Y1, SW } = channels;\n        const { strokeWidth, bend, headAngle, headLength, insetStart, insetEnd } = this;\n        const sw = SW ? (i) => SW[i] : constant(strokeWidth === undefined ? 1 : strokeWidth);\n        // When bending, the offset between the straight line between the two points\n        // and the outgoing tangent from the start point. (Also the negative\n        // incoming tangent to the end point.) This must be within \u00B1\u03C0/2. A positive\n        // angle will produce a clockwise curve; a negative angle will produce a\n        // counterclockwise curve; zero will produce a straight line.\n        const bendAngle = bend * radians;\n        // The angle between the arrow\u2019s shaft and one of the wings; the \u201Chead\u201D\n        // angle between the wings is twice this value.\n        const wingAngle = (headAngle * radians) / 2;\n        // The length of the arrowhead\u2019s \u201Cwings\u201D (the line segments that extend from\n        // the end point) relative to the stroke width.\n        const wingScale = headLength / 1.5;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"path\")\n            .call(applyDirectStyles, this)\n            .attr(\"d\", (i) => {\n            // The start \u27E8x1,y1\u27E9 and end \u27E8x2,y2\u27E9 points may be inset, and the\n            // ending line angle may be altered for inset swoopy arrows.\n            let x1 = X1[i], y1 = Y1[i], x2 = X2[i], y2 = Y2[i];\n            const lineLength = Math.hypot(x2 - x1, y2 - y1);\n            if (lineLength <= insetStart + insetEnd)\n                return null;\n            let lineAngle = Math.atan2(y2 - y1, x2 - x1);\n            // We don\u2019t allow the wing length to be too large relative to the\n            // length of the arrow. (Plot.vector allows arbitrarily large\n            // wings, but that\u2019s okay since vectors are usually small.)\n            const headLength = Math.min(wingScale * sw(i), lineLength / 3);\n            // The radius of the circle that intersects with the two endpoints\n            // and has the specified bend angle.\n            const r = Math.hypot(lineLength / Math.tan(bendAngle), lineLength) / 2;\n            // Apply insets.\n            if (insetStart || insetEnd) {\n                if (r < 1e5) {\n                    // For inset swoopy arrows, compute the circle-circle\n                    // intersection between a circle centered around the\n                    // respective arrow endpoint and the center of the circle\n                    // segment that forms the shaft of the arrow.\n                    const sign = Math.sign(bendAngle);\n                    const [cx, cy] = pointPointCenter([x1, y1], [x2, y2], r, sign);\n                    if (insetStart) {\n                        [x1, y1] = circleCircleIntersect([cx, cy, r], [x1, y1, insetStart], -sign * Math.sign(insetStart));\n                    }\n                    // For the end inset, rotate the arrowhead so that it aligns\n                    // with the truncated end of the arrow. Since the arrow is a\n                    // segment of the circle centered at \u27E8cx,cy\u27E9, we can compute\n                    // the angular difference to the new endpoint.\n                    if (insetEnd) {\n                        const [x, y] = circleCircleIntersect([cx, cy, r], [x2, y2, insetEnd], sign * Math.sign(insetEnd));\n                        lineAngle += Math.atan2(y - cy, x - cx) - Math.atan2(y2 - cy, x2 - cx);\n                        (x2 = x), (y2 = y);\n                    }\n                }\n                else {\n                    // For inset straight arrows, offset along the straight line.\n                    const dx = x2 - x1, dy = y2 - y1, d = Math.hypot(dx, dy);\n                    if (insetStart)\n                        (x1 += (dx / d) * insetStart), (y1 += (dy / d) * insetStart);\n                    if (insetEnd)\n                        (x2 -= (dx / d) * insetEnd), (y2 -= (dy / d) * insetEnd);\n                }\n            }\n            // The angle of the arrow as it approaches the endpoint, and the\n            // angles of the adjacent wings. Here \u201Cleft\u201D refers to if the\n            // arrow is pointing up.\n            const endAngle = lineAngle + bendAngle;\n            const leftAngle = endAngle + wingAngle;\n            const rightAngle = endAngle - wingAngle;\n            // The endpoints of the two wings.\n            const x3 = x2 - headLength * Math.cos(leftAngle);\n            const y3 = y2 - headLength * Math.sin(leftAngle);\n            const x4 = x2 - headLength * Math.cos(rightAngle);\n            const y4 = y2 - headLength * Math.sin(rightAngle);\n            // If the radius is very large (or even infinite, as when the bend\n            // angle is zero), then render a straight line.\n            return `M${x1},${y1}${r < 1e5 ? `A${r},${r} 0,0,${bendAngle > 0 ? 1 : 0} ` : `L`}${x2},${y2}M${x3},${y3}L${x2},${y2}L${x4},${y4}`;\n        })\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\n// Returns the center of a circle that goes through the two given points \u27E8ax,ay\u27E9\n// and \u27E8bx,by\u27E9 and has radius r. There are two such points; use the sign +1 or\n// -1 to chose between them. Returns [NaN, NaN] if r is too small.\nfunction pointPointCenter([ax, ay], [bx, by], r, sign) {\n    const dx = bx - ax, dy = by - ay, d = Math.hypot(dx, dy);\n    const k = (sign * Math.sqrt(r * r - (d * d) / 4)) / d;\n    return [(ax + bx) / 2 - dy * k, (ay + by) / 2 + dx * k];\n}\n// Given two circles, one centered at \u27E8ax,ay\u27E9 with radius ar, and the other\n// centered at \u27E8bx,by\u27E9 with radius br, returns a point at which the two circles\n// intersect. There are typically two such points; use the sign +1 or -1 to\n// chose between them. Returns [NaN, NaN] if there is no intersection.\n// https://mathworld.wolfram.com/Circle-CircleIntersection.html\nfunction circleCircleIntersect([ax, ay, ar], [bx, by, br], sign) {\n    const dx = bx - ax, dy = by - ay, d = Math.hypot(dx, dy);\n    const x = (dx * dx + dy * dy - br * br + ar * ar) / (2 * d);\n    const y = sign * Math.sqrt(ar * ar - x * x);\n    return [ax + (dx * x + dy * y) / d, ay + (dy * x - dx * y) / d];\n}\n/**\n * ```js\n * Plot.arrow(inequality, {x1: \"POP_1980\", y1: \"R90_10_1980\", x2: \"POP_2015\", y2: \"R90_10_2015\", bend: true})\n * ```\n *\n * Returns a new arrow with the given *data* and *options*.\n */\nexport function arrow(data, options = {}) {\n    let { x, x1, x2, y, y1, y2, ...remainingOptions } = options;\n    [x1, x2] = maybeSameValue(x, x1, x2);\n    [y1, y2] = maybeSameValue(y, y1, y2);\n    return new Arrow(data, { ...remainingOptions, x1, x2, y1, y2 });\n}\n", "import { create } from \"../context.js\";\nimport { identity, indexOf, number } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { isCollapsed } from \"../scales.js\";\nimport { applyDirectStyles, applyIndirectStyles, applyTransform, impliedString, applyAttr, applyChannelStyles } from \"../style.js\";\nimport { maybeIdentityX, maybeIdentityY } from \"../transforms/identity.js\";\nimport { maybeIntervalX, maybeIntervalY } from \"../transforms/interval.js\";\nimport { maybeStackX, maybeStackY } from \"../transforms/stack.js\";\nexport class AbstractBar extends Mark {\n    constructor(data, channels, options = {}, defaults) {\n        super(data, channels, options, defaults);\n        const { inset = 0, insetTop = inset, insetRight = inset, insetBottom = inset, insetLeft = inset, rx, ry } = options;\n        this.insetTop = number(insetTop);\n        this.insetRight = number(insetRight);\n        this.insetBottom = number(insetBottom);\n        this.insetLeft = number(insetLeft);\n        this.rx = impliedString(rx, \"auto\"); // number or percentage\n        this.ry = impliedString(ry, \"auto\");\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { rx, ry } = this;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(this._transform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"rect\")\n            .call(applyDirectStyles, this)\n            .attr(\"x\", this._x(scales, channels, dimensions))\n            .attr(\"width\", this._width(scales, channels, dimensions))\n            .attr(\"y\", this._y(scales, channels, dimensions))\n            .attr(\"height\", this._height(scales, channels, dimensions))\n            .call(applyAttr, \"rx\", rx)\n            .call(applyAttr, \"ry\", ry)\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n    _x(scales, { x: X }, { marginLeft }) {\n        const { insetLeft } = this;\n        return X ? (i) => X[i] + insetLeft : marginLeft + insetLeft;\n    }\n    _y(scales, { y: Y }, { marginTop }) {\n        const { insetTop } = this;\n        return Y ? (i) => Y[i] + insetTop : marginTop + insetTop;\n    }\n    _width({ x }, { x: X }, { marginRight, marginLeft, width }) {\n        const { insetLeft, insetRight } = this;\n        const bandwidth = X && x ? x.bandwidth() : width - marginRight - marginLeft;\n        return Math.max(0, bandwidth - insetLeft - insetRight);\n    }\n    _height({ y }, { y: Y }, { marginTop, marginBottom, height }) {\n        const { insetTop, insetBottom } = this;\n        const bandwidth = Y && y ? y.bandwidth() : height - marginTop - marginBottom;\n        return Math.max(0, bandwidth - insetTop - insetBottom);\n    }\n}\nconst defaults = {\n    ariaLabel: \"bar\"\n};\nexport class BarX extends AbstractBar {\n    constructor(data, options = {}) {\n        const { x1, x2, y } = options;\n        super(data, {\n            x1: { value: x1, scale: \"x\" },\n            x2: { value: x2, scale: \"x\" },\n            y: { value: y, scale: \"y\", type: \"band\", optional: true }\n        }, options, defaults);\n    }\n    _transform(selection, mark, { x }) {\n        selection.call(applyTransform, mark, { x }, 0, 0);\n    }\n    _x({ x }, { x1: X1, x2: X2 }, { marginLeft }) {\n        const { insetLeft } = this;\n        return isCollapsed(x) ? marginLeft + insetLeft : (i) => Math.min(X1[i], X2[i]) + insetLeft;\n    }\n    _width({ x }, { x1: X1, x2: X2 }, { marginRight, marginLeft, width }) {\n        const { insetLeft, insetRight } = this;\n        return isCollapsed(x)\n            ? width - marginRight - marginLeft - insetLeft - insetRight\n            : (i) => Math.max(0, Math.abs(X2[i] - X1[i]) - insetLeft - insetRight);\n    }\n}\nexport class BarY extends AbstractBar {\n    constructor(data, options = {}) {\n        const { x, y1, y2 } = options;\n        super(data, {\n            y1: { value: y1, scale: \"y\" },\n            y2: { value: y2, scale: \"y\" },\n            x: { value: x, scale: \"x\", type: \"band\", optional: true }\n        }, options, defaults);\n    }\n    _transform(selection, mark, { y }) {\n        selection.call(applyTransform, mark, { y }, 0, 0);\n    }\n    _y({ y }, { y1: Y1, y2: Y2 }, { marginTop }) {\n        const { insetTop } = this;\n        return isCollapsed(y) ? marginTop + insetTop : (i) => Math.min(Y1[i], Y2[i]) + insetTop;\n    }\n    _height({ y }, { y1: Y1, y2: Y2 }, { marginTop, marginBottom, height }) {\n        const { insetTop, insetBottom } = this;\n        return isCollapsed(y)\n            ? height - marginTop - marginBottom - insetTop - insetBottom\n            : (i) => Math.max(0, Math.abs(Y2[i] - Y1[i]) - insetTop - insetBottom);\n    }\n}\n/**\n * ```js\n * Plot.barX(alphabet, {y: \"letter\", x: \"frequency\"})\n * ```\n *\n * Returns a new horizontal bar\u2194\uFE0E with the given *data* and *options*. The\n * following channels are required:\n *\n * * **x1** - the starting horizontal position; bound to the *x* scale\n * * **x2** - the ending horizontal position; bound to the *x* scale\n *\n * If neither the **x1** nor **x2** option is specified, the **x** option may be\n * specified as shorthand to apply an implicit [stackX\n * transform](https://github.com/observablehq/plot/blob/main/README.md#plotstackxstack-options);\n * this is the typical configuration for a horizontal bar chart with bars\n * aligned at *x* = 0. If the **x** option is not specified, it defaults to the\n * identity function. If *options* is undefined, then it defaults to **x2** as\n * the identity function and **y** as the index of data; this allows an array of\n * numbers to be passed to Plot.barX to make a quick sequential bar chart.\n *\n * If an **interval** is specified, such as d3.utcDay, **x1** and **x2** can be\n * derived from **x**: *interval*.floor(*x*) is invoked for each *x* to produce\n * *x1*, and *interval*.offset(*x1*) is invoked for each *x1* to produce *x2*.\n * If the interval is specified as a number *n*, *x1* and *x2* are taken as the\n * two consecutive multiples of *n* that bracket *x*.\n *\n * In addition to the [standard bar\n * channels](https://github.com/observablehq/plot/blob/main/README.md#bar), the\n * following optional channels are supported:\n *\n * * **y** - the vertical position; bound to the *y* scale, which must be *band*\n *\n * If the **y** channel is not specified, the bar will span the full vertical\n * extent of the plot (or facet).\n */\nexport function barX(data, options = { y: indexOf, x2: identity }) {\n    return new BarX(data, maybeStackX(maybeIntervalX(maybeIdentityX(options))));\n}\n/**\n * ```js\n * Plot.barY(alphabet, {x: \"letter\", y: \"frequency\"})\n * ```\n *\n * Returns a new vertical bar\u2195\uFE0E with the given *data* and *options*. The\n * following channels are required:\n *\n * * **y1** - the starting vertical position; bound to the *y* scale\n * * **y2** - the ending vertical position; bound to the *y* scale\n *\n * If neither the **y1** nor **y2** option is specified, the **y** option may be\n * specified as shorthand to apply an implicit [stackY\n * transform](https://github.com/observablehq/plot/blob/main/README.md#plotstackystack-options);\n * this is the typical configuration for a vertical bar chart with bars aligned\n * at *y* = 0. If the **y** option is not specified, it defaults to the identity\n * function. If *options* is undefined, then it defaults to **y2** as the\n * identity function and **x** as the index of data; this allows an array of\n * numbers to be passed to Plot.barY to make a quick sequential bar chart.\n *\n * If an **interval** is specified, such as d3.utcDay, **y1** and **y2** can be\n * derived from **y**: *interval*.floor(*y*) is invoked for each *y* to produce\n * *y1*, and *interval*.offset(*y1*) is invoked for each *y1* to produce *y2*.\n * If the interval is specified as a number *n*, *y1* and *y2* are taken as the\n * two consecutive multiples of *n* that bracket *y*.\n *\n * In addition to the [standard bar\n * channels](https://github.com/observablehq/plot/blob/main/README.md#bar), the\n * following optional channels are supported:\n *\n * * **x** - the horizontal position; bound to the *x* scale, which must be\n *   *band*\n *\n * If the **x** channel is not specified, the bar will span the full horizontal\n * extent of the plot (or facet).\n */\nexport function barY(data, options = { x: indexOf, y2: identity }) {\n    return new BarY(data, maybeStackY(maybeIntervalY(maybeIdentityY(options))));\n}\n", "import { count, group, rank } from \"d3\";\nimport { maybeZ, take, valueof, maybeInput, column } from \"../options.js\";\nimport { basic } from \"./basic.js\";\n/**\n * ```js\n * Plot.mapX(\"cumsum\", {x: d3.randomNormal()})\n * ```\n *\n * Equivalent to Plot.map({x: *map*, x1: *map*, x2: *map*}, *options*), but\n * ignores any of **x**, **x1**, and **x2** not present in *options*.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#map\n */\nexport function mapX(map, options = {}) {\n    return mapAlias(Object.fromEntries([\"x\", \"x1\", \"x2\"].filter((key) => options[key] != null).map((key) => [key, map])), options);\n}\n/**\n * ```js\n * Plot.mapY(\"cumsum\", {y: d3.randomNormal()})\n * ```\n *\n * Equivalent to Plot.map({y: *map*, y1: *map*, y2: *map*}, *options*), but\n * ignores any of **y**, **y1**, and **y2** not present in *options*.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#map\n */\nexport function mapY(map, options = {}) {\n    return mapAlias(Object.fromEntries([\"y\", \"y1\", \"y2\"].filter((key) => options[key] != null).map((key) => [key, map])), options);\n}\n/**\n * ```js\n * Plot.map({y: \"cumsum\"}, {y: d3.randomNormal()})\n * ```\n *\n * Groups on the first channel of *z*, *fill*, or *stroke*, if any, and then for\n * each channel declared in the specified *outputs* object, applies the\n * corresponding map method. Each channel in *outputs* must have a corresponding\n * input channel in *options*.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#map\n */\nexport function map(outputs = {}, options = {}) {\n    const z = maybeZ(options);\n    const channels = Object.entries(outputs).map(([key, map]) => {\n        const input = maybeInput(key, options);\n        if (input == null)\n            throw new Error(`missing channel: ${key}`);\n        const [output, setOutput] = column(input);\n        return { key, input, output, setOutput, map: maybeMap(map) };\n    });\n    return {\n        ...basic(options, (data, facets) => {\n            const Z = valueof(data, z);\n            const X = channels.map(({ input }) => valueof(data, input));\n            const MX = channels.map(({ setOutput }) => setOutput(new Array(data.length)));\n            for (const facet of facets) {\n                for (const I of Z ? group(facet, (i) => Z[i]).values() : [facet]) {\n                    channels.forEach(({ map }, i) => map.map(I, X[i], MX[i]));\n                }\n            }\n            return { data, facets };\n        }),\n        ...Object.fromEntries(channels.map(({ key, output }) => [key, output]))\n    };\n}\n// This is used internally so we can use `map` as an argument name.\nconst mapAlias = map;\nfunction maybeMap(map) {\n    if (map && typeof map.map === \"function\")\n        return map;\n    if (typeof map === \"function\")\n        return mapFunction(map);\n    switch (`${map}`.toLowerCase()) {\n        case \"cumsum\":\n            return mapCumsum;\n        case \"rank\":\n            return mapFunction(rank);\n        case \"quantile\":\n            return mapFunction(rankQuantile);\n    }\n    throw new Error(`invalid map: ${map}`);\n}\nfunction rankQuantile(V) {\n    const n = count(V) - 1;\n    return rank(V).map((r) => r / n);\n}\nfunction mapFunction(f) {\n    return {\n        map(I, S, T) {\n            const M = f(take(S, I));\n            if (M.length !== I.length)\n                throw new Error(\"map function returned a mismatched length\");\n            for (let i = 0, n = I.length; i < n; ++i)\n                T[I[i]] = M[i];\n        }\n    };\n}\nconst mapCumsum = {\n    map(I, S, T) {\n        let sum = 0;\n        for (const i of I)\n            T[i] = sum += S[i];\n    }\n};\n", "import { path, symbolCircle } from \"d3\";\nimport { create } from \"../context.js\";\nimport { positive } from \"../defined.js\";\nimport { identity, maybeFrameAnchor, maybeNumberChannel, maybeTuple } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyChannelStyles, applyDirectStyles, applyFrameAnchor, applyIndirectStyles, applyTransform } from \"../style.js\";\nimport { maybeSymbolChannel } from \"../symbols.js\";\nimport { sort } from \"../transforms/basic.js\";\nimport { maybeIntervalMidX, maybeIntervalMidY } from \"../transforms/interval.js\";\nconst defaults = {\n    ariaLabel: \"dot\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5\n};\nexport class Dot extends Mark {\n    constructor(data, options = {}) {\n        const { x, y, r, rotate, symbol = symbolCircle, frameAnchor } = options;\n        const [vrotate, crotate] = maybeNumberChannel(rotate, 0);\n        const [vsymbol, csymbol] = maybeSymbolChannel(symbol);\n        const [vr, cr] = maybeNumberChannel(r, vsymbol == null ? 3 : 4.5);\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y: { value: y, scale: \"y\", optional: true },\n            r: { value: vr, scale: \"r\", filter: positive, optional: true },\n            rotate: { value: vrotate, optional: true },\n            symbol: { value: vsymbol, scale: \"symbol\", optional: true }\n        }, options.sort === undefined && options.reverse === undefined\n            ? sort({ channel: \"r\", order: \"descending\" }, options)\n            : options, defaults);\n        this.r = cr;\n        this.rotate = crotate;\n        this.symbol = csymbol;\n        this.frameAnchor = maybeFrameAnchor(frameAnchor);\n        // Give a hint to the symbol scale; this allows the symbol scale to chose\n        // appropriate default symbols based on whether the dots are filled or\n        // stroked, and for the symbol legend to match the appearance of the dots.\n        const { channels } = this;\n        const { symbol: symbolChannel } = channels;\n        if (symbolChannel) {\n            const { fill: fillChannel, stroke: strokeChannel } = channels;\n            symbolChannel.hint = {\n                fill: fillChannel ? (fillChannel.value === symbolChannel.value ? \"color\" : \"currentColor\") : this.fill,\n                stroke: strokeChannel ? (strokeChannel.value === symbolChannel.value ? \"color\" : \"currentColor\") : this.stroke\n            };\n        }\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y, r: R, rotate: A, symbol: S } = channels;\n        const [cx, cy] = applyFrameAnchor(this, dimensions);\n        const circle = this.symbol === symbolCircle;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(circle ? \"circle\" : \"path\")\n            .call(applyDirectStyles, this)\n            .call(circle\n            ? (selection) => {\n                selection\n                    .attr(\"cx\", X ? (i) => X[i] : cx)\n                    .attr(\"cy\", Y ? (i) => Y[i] : cy)\n                    .attr(\"r\", R ? (i) => R[i] : this.r);\n            }\n            : (selection) => {\n                const translate = X && Y\n                    ? (i) => `translate(${X[i]},${Y[i]})`\n                    : X\n                        ? (i) => `translate(${X[i]},${cy})`\n                        : Y\n                            ? (i) => `translate(${cx},${Y[i]})`\n                            : () => `translate(${cx},${cy})`;\n                selection\n                    .attr(\"transform\", A\n                    ? (i) => `${translate(i)} rotate(${A[i]})`\n                    : this.rotate\n                        ? (i) => `${translate(i)} rotate(${this.rotate})`\n                        : translate)\n                    .attr(\"d\", (i) => {\n                    const p = path(), r = R ? R[i] : this.r;\n                    (S ? S[i] : this.symbol).draw(p, r * r * Math.PI);\n                    return p;\n                });\n            })\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.dot(sales, {x: \"units\", y: \"fruit\"})\n * ```\n *\n * Returns a new dot with the given *data* and *options*. If neither the **x**\n * nor **y** nor **frameAnchor** options are specified, *data* is assumed to be\n * an array of pairs [[*x\u2080*, *y\u2080*], [*x\u2081*, *y\u2081*], [*x\u2082*, *y\u2082*], \u2026] such that\n * **x** = [*x\u2080*, *x\u2081*, *x\u2082*, \u2026] and **y** = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n */\nexport function dot(data, options = {}) {\n    let { x, y, ...remainingOptions } = options;\n    if (options.frameAnchor === undefined)\n        [x, y] = maybeTuple(x, y);\n    return new Dot(data, { ...remainingOptions, x, y });\n}\n/**\n * ```js\n * Plot.dotX(cars.map(d => d[\"economy (mpg)\"]))\n * ```\n *\n * Equivalent to\n * [Plot.dot](https://github.com/observablehq/plot/blob/main/README.md#plotdotdata-options)\n * except that if the **x** option is not specified, it defaults to the identity\n * function and assumes that *data* = [*x\u2080*, *x\u2081*, *x\u2082*, \u2026].\n *\n * If an **interval** is specified, such as d3.utcDay, **y** is transformed to\n * (*interval*.floor(*y*) + *interval*.offset(*interval*.floor(*y*))) / 2. If\n * the interval is specified as a number *n*, *y* will be the midpoint of two\n * consecutive multiples of *n* that bracket *y*.\n */\nexport function dotX(data, options = {}) {\n    const { x = identity, ...remainingOptions } = options;\n    return new Dot(data, maybeIntervalMidY({ ...remainingOptions, x }));\n}\n/**\n * ```js\n * Plot.dotY(cars.map(d => d[\"economy (mpg)\"]))\n * ```\n *\n * Equivalent to\n * [Plot.dot](https://github.com/observablehq/plot/blob/main/README.md#plotdotdata-options)\n * except that if the **y** option is not specified, it defaults to the identity\n * function and assumes that *data* = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n *\n * If an **interval** is specified, such as d3.utcDay, **x** is transformed to\n * (*interval*.floor(*x*) + *interval*.offset(*interval*.floor(*x*))) / 2. If\n * the interval is specified as a number *n*, *x* will be the midpoint of two\n * consecutive multiples of *n* that bracket *x*.\n */\nexport function dotY(data, options = {}) {\n    const { y = identity, ...remainingOptions } = options;\n    return new Dot(data, maybeIntervalMidX({ ...remainingOptions, y }));\n}\n/**\n * Equivalent to\n * [Plot.dot](https://github.com/observablehq/plot/blob/main/README.md#plotdotdata-options)\n * except that the **symbol** option is set to *circle*.\n */\nexport function circle(data, options) {\n    return dot(data, { ...options, symbol: \"circle\" });\n}\n/**\n * Equivalent to\n * [Plot.dot](https://github.com/observablehq/plot/blob/main/README.md#plotdotdata-options)\n * except that the **symbol** option is set to *hexagon*.\n */\nexport function hexagon(data, options) {\n    return dot(data, { ...options, symbol: \"hexagon\" });\n}\n", "import { create } from \"../context.js\";\nimport { identity, number } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { isCollapsed } from \"../scales.js\";\nimport { applyDirectStyles, applyIndirectStyles, applyTransform, applyChannelStyles, offset } from \"../style.js\";\nimport { maybeIntervalX, maybeIntervalY } from \"../transforms/interval.js\";\nconst defaults = {\n    ariaLabel: \"rule\",\n    fill: null,\n    stroke: \"currentColor\"\n};\nexport class RuleX extends Mark {\n    constructor(data, options = {}) {\n        const { x, y1, y2, inset = 0, insetTop = inset, insetBottom = inset } = options;\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y1: { value: y1, scale: \"y\", optional: true },\n            y2: { value: y2, scale: \"y\", optional: true }\n        }, options, defaults);\n        this.insetTop = number(insetTop);\n        this.insetBottom = number(insetBottom);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x, y } = scales;\n        const { x: X, y1: Y1, y2: Y2 } = channels;\n        const { width, height, marginTop, marginRight, marginLeft, marginBottom } = dimensions;\n        const { insetTop, insetBottom } = this;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, { x: X && x }, offset, 0)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"line\")\n            .call(applyDirectStyles, this)\n            .attr(\"x1\", X ? (i) => X[i] : (marginLeft + width - marginRight) / 2)\n            .attr(\"x2\", X ? (i) => X[i] : (marginLeft + width - marginRight) / 2)\n            .attr(\"y1\", Y1 && !isCollapsed(y) ? (i) => Y1[i] + insetTop : marginTop + insetTop)\n            .attr(\"y2\", Y2 && !isCollapsed(y)\n            ? y.bandwidth\n                ? (i) => Y2[i] + y.bandwidth() - insetBottom\n                : (i) => Y2[i] - insetBottom\n            : height - marginBottom - insetBottom)\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\nexport class RuleY extends Mark {\n    constructor(data, options = {}) {\n        const { x1, x2, y, inset = 0, insetRight = inset, insetLeft = inset } = options;\n        super(data, {\n            y: { value: y, scale: \"y\", optional: true },\n            x1: { value: x1, scale: \"x\", optional: true },\n            x2: { value: x2, scale: \"x\", optional: true }\n        }, options, defaults);\n        this.insetRight = number(insetRight);\n        this.insetLeft = number(insetLeft);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x, y } = scales;\n        const { y: Y, x1: X1, x2: X2 } = channels;\n        const { width, height, marginTop, marginRight, marginLeft, marginBottom } = dimensions;\n        const { insetLeft, insetRight } = this;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, { y: Y && y }, 0, offset)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"line\")\n            .call(applyDirectStyles, this)\n            .attr(\"x1\", X1 && !isCollapsed(x) ? (i) => X1[i] + insetLeft : marginLeft + insetLeft)\n            .attr(\"x2\", X2 && !isCollapsed(x)\n            ? x.bandwidth\n                ? (i) => X2[i] + x.bandwidth() - insetRight\n                : (i) => X2[i] - insetRight\n            : width - marginRight - insetRight)\n            .attr(\"y1\", Y ? (i) => Y[i] : (marginTop + height - marginBottom) / 2)\n            .attr(\"y2\", Y ? (i) => Y[i] : (marginTop + height - marginBottom) / 2)\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.ruleX([0]) // as annotation\n * ```\n * ```js\n * Plot.ruleX(alphabet, {x: \"letter\", y: \"frequency\"}) // like barY\n * ```\n *\n * Returns a new rule\u2195\uFE0E with the given *data* and *options*. In addition to the\n * [standard mark\n * options](https://github.com/observablehq/plot/blob/main/README.md#marks), the\n * following channels are optional:\n *\n * * **x** - the horizontal position; bound to the *x* scale\n * * **y1** - the starting vertical position; bound to the *y* scale\n * * **y2** - the ending vertical position; bound to the *y* scale\n *\n * If the **x** option is not specified, it defaults to the identity function\n * and assumes that *data* = [*x\u2080*, *x\u2081*, *x\u2082*, \u2026]. If a **y** option is\n * specified, it is shorthand for the **y2** option with **y1** equal to zero;\n * this is the typical configuration for a vertical lollipop chart with rules\n * aligned at *y* = 0. If the **y1** channel is not specified, the rule will\n * start at the top of the plot (or facet). If the **y2** channel is not\n * specified, the rule will end at the bottom of the plot (or facet).\n *\n * If an **interval** is specified, such as d3.utcDay, **y1** and **y2** can be\n * derived from **y**: *interval*.floor(*y*) is invoked for each *y* to produce\n * *y1*, and *interval*.offset(*y1*) is invoked for each *y1* to produce *y2*.\n * If the interval is specified as a number *n*, *y1* and *y2* are taken as the\n * two consecutive multiples of *n* that bracket *y*.\n */\nexport function ruleX(data, options) {\n    let { x = identity, y, y1, y2, ...rest } = maybeIntervalY(options);\n    [y1, y2] = maybeOptionalZero(y, y1, y2);\n    return new RuleX(data, { ...rest, x, y1, y2 });\n}\n/**\n * ```js\n * Plot.ruleY([0]) // as annotation\n * ```\n *\n * ```js\n * Plot.ruleY(alphabet, {y: \"letter\", x: \"frequency\"}) // like barX\n * ```\n *\n * Returns a new rule\u2194\uFE0E with the given *data* and *options*. In addition to the\n * [standard mark\n * options](https://github.com/observablehq/plot/blob/main/README.md#marks), the\n * following channels are optional:\n *\n * * **y** - the vertical position; bound to the *y* scale\n * * **x1** - the starting horizontal position; bound to the *x* scale\n * * **x2** - the ending horizontal position; bound to the *x* scale\n *\n * If the **y** option is not specified, it defaults to the identity function\n * and assumes that *data* = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026]. If the **x** option is\n * specified, it is shorthand for the **x2** option with **x1** equal to zero;\n * this is the typical configuration for a horizontal lollipop chart with rules\n * aligned at *x* = 0. If the **x1** channel is not specified, the rule will\n * start at the left edge of the plot (or facet). If the **x2** channel is not\n * specified, the rule will end at the right edge of the plot (or facet).\n *\n * If an **interval** is specified, such as d3.utcDay, **x1** and **x2** can be\n * derived from **x**: *interval*.floor(*x*) is invoked for each *x* to produce\n * *x1*, and *interval*.offset(*x1*) is invoked for each *x1* to produce *x2*.\n * If the interval is specified as a number *n*, *x1* and *x2* are taken as the\n * two consecutive multiples of *n* that bracket *x*.\n */\nexport function ruleY(data, options) {\n    let { y = identity, x, x1, x2, ...rest } = maybeIntervalX(options);\n    [x1, x2] = maybeOptionalZero(x, x1, x2);\n    return new RuleY(data, { ...rest, y, x1, x2 });\n}\n// For marks specified either as [0, x] or [x1, x2], or nothing.\nfunction maybeOptionalZero(x, x1, x2) {\n    if (x === undefined) {\n        if (x1 === undefined) {\n            if (x2 !== undefined)\n                return [0, x2];\n        }\n        else {\n            if (x2 === undefined)\n                return [0, x1];\n        }\n    }\n    else if (x1 === undefined) {\n        return x2 === undefined ? [0, x] : [x, x2];\n    }\n    else if (x2 === undefined) {\n        return [x, x1];\n    }\n    return [x1, x2];\n}\n", "import { create } from \"../context.js\";\nimport { identity, number } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyDirectStyles, applyIndirectStyles, applyTransform, applyChannelStyles, offset } from \"../style.js\";\nconst defaults = {\n    ariaLabel: \"tick\",\n    fill: null,\n    stroke: \"currentColor\"\n};\nclass AbstractTick extends Mark {\n    constructor(data, channels, options) {\n        super(data, channels, options, defaults);\n    }\n    render(index, scales, channels, dimensions, context) {\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(this._transform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"line\")\n            .call(applyDirectStyles, this)\n            .attr(\"x1\", this._x1(scales, channels, dimensions))\n            .attr(\"x2\", this._x2(scales, channels, dimensions))\n            .attr(\"y1\", this._y1(scales, channels, dimensions))\n            .attr(\"y2\", this._y2(scales, channels, dimensions))\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\nexport class TickX extends AbstractTick {\n    constructor(data, options = {}) {\n        const { x, y, inset = 0, insetTop = inset, insetBottom = inset } = options;\n        super(data, {\n            x: { value: x, scale: \"x\" },\n            y: { value: y, scale: \"y\", type: \"band\", optional: true }\n        }, options);\n        this.insetTop = number(insetTop);\n        this.insetBottom = number(insetBottom);\n    }\n    _transform(selection, mark, { x }) {\n        selection.call(applyTransform, mark, { x }, offset, 0);\n    }\n    _x1(scales, { x: X }) {\n        return (i) => X[i];\n    }\n    _x2(scales, { x: X }) {\n        return (i) => X[i];\n    }\n    _y1({ y }, { y: Y }, { marginTop }) {\n        const { insetTop } = this;\n        return Y && y ? (i) => Y[i] + insetTop : marginTop + insetTop;\n    }\n    _y2({ y }, { y: Y }, { height, marginBottom }) {\n        const { insetBottom } = this;\n        return Y && y ? (i) => Y[i] + y.bandwidth() - insetBottom : height - marginBottom - insetBottom;\n    }\n}\nexport class TickY extends AbstractTick {\n    constructor(data, options = {}) {\n        const { x, y, inset = 0, insetRight = inset, insetLeft = inset } = options;\n        super(data, {\n            y: { value: y, scale: \"y\" },\n            x: { value: x, scale: \"x\", type: \"band\", optional: true }\n        }, options);\n        this.insetRight = number(insetRight);\n        this.insetLeft = number(insetLeft);\n    }\n    _transform(selection, mark, { y }) {\n        selection.call(applyTransform, mark, { y }, 0, offset);\n    }\n    _x1({ x }, { x: X }, { marginLeft }) {\n        const { insetLeft } = this;\n        return X && x ? (i) => X[i] + insetLeft : marginLeft + insetLeft;\n    }\n    _x2({ x }, { x: X }, { width, marginRight }) {\n        const { insetRight } = this;\n        return X && x ? (i) => X[i] + x.bandwidth() - insetRight : width - marginRight - insetRight;\n    }\n    _y1(scales, { y: Y }) {\n        return (i) => Y[i];\n    }\n    _y2(scales, { y: Y }) {\n        return (i) => Y[i];\n    }\n}\n/**\n * ```js\n * Plot.tickX(stateage, {x: \"population\", y: \"age\"})\n * ```\n *\n * Returns a new tick\u2195\uFE0E with the given *data* and *options*. The following\n * channels are required:\n *\n * * **x** - the horizontal position; bound to the *x* scale\n *\n * The following optional channels are supported:\n *\n * * **y** - the vertical position; bound to the *y* scale, which must be *band*\n *\n * If the **y** channel is not specified, the tick will span the full vertical\n * extent of the plot (or facet).\n */\nexport function tickX(data, options = {}) {\n    const { x = identity, ...remainingOptions } = options;\n    return new TickX(data, { ...remainingOptions, x });\n}\n/**\n * ```js\n * Plot.tickY(stateage, {y: \"population\", x: \"age\"})\n * ```\n *\n * Returns a new tick\u2194\uFE0E with the given *data* and *options*. The following\n * channels are required:\n *\n * * **y** - the vertical position; bound to the *y* scale\n *\n * The following optional channels are supported:\n *\n * * **x** - the horizontal position; bound to the *x* scale, which must be\n *   *band*\n *\n * If the **x** channel is not specified, the tick will span the full vertical\n * extent of the plot (or facet).\n */\nexport function tickY(data, options = {}) {\n    const { y = identity, ...remainingOptions } = options;\n    return new TickY(data, { ...remainingOptions, y });\n}\n", "import { min, max, quantile } from \"d3\";\nimport { marks } from \"../plot.js\";\nimport { groupX, groupY, groupZ } from \"../transforms/group.js\";\nimport { map } from \"../transforms/map.js\";\nimport { barX, barY } from \"./bar.js\";\nimport { dot } from \"./dot.js\";\nimport { ruleX, ruleY } from \"./rule.js\";\nimport { tickX, tickY } from \"./tick.js\";\n/**\n * ```js\n * Plot.boxX(simpsons.map(d => d.imdb_rating))\n * ```\n *\n * Returns a horizontal boxplot mark. If the **x** option is not specified, it\n * defaults to the identity function, as when *data* is an array of numbers. If\n * the **y** option is not specified, it defaults to null; if the **y** option\n * is specified, it should represent an ordinal (discrete) value.\n */\nexport function boxX(data, options = {}) {\n    // Returns a composite mark for producing a horizontal box plot, applying the\n    // necessary statistical transforms. The boxes are grouped by y, if present.\n    const { x = { transform: (x) => x }, y = null, fill = \"#ccc\", fillOpacity, stroke = \"currentColor\", strokeOpacity, strokeWidth = 2, sort, ...remainingOptions } = options;\n    const group = y != null ? groupY : groupZ;\n    return marks(ruleY(data, group({ x1: loqr1, x2: hiqr2 }, { x, y, stroke, strokeOpacity, ...remainingOptions })), barX(data, group({ x1: \"p25\", x2: \"p75\" }, { x, y, fill, fillOpacity, ...remainingOptions })), tickX(data, group({ x: \"p50\" }, { x, y, stroke, strokeOpacity, strokeWidth, sort, ...remainingOptions })), dot(data, map({ x: oqr }, { x, y, z: y, stroke, strokeOpacity, ...remainingOptions })));\n}\n/**\n * ```js\n * Plot.boxY(simpsons.map(d => d.imdb_rating))\n * ```\n *\n * Returns a vertical boxplot mark. If the **y** option is not specified, it\n * defaults to the identity function, as when *data* is an array of numbers. If\n * the **x** option is not specified, it defaults to null; if the **x** option\n * is specified, it should represent an ordinal (discrete) value.\n */\nexport function boxY(data, options = {}) {\n    // Returns a composite mark for producing a vertical box plot, applying the\n    // necessary statistical transforms. The boxes are grouped by x, if present.\n    const { y = { transform: (y) => y }, x = null, fill = \"#ccc\", fillOpacity, stroke = \"currentColor\", strokeOpacity, strokeWidth = 2, sort, ...remainingOptions } = options;\n    const group = x != null ? groupX : groupZ;\n    return marks(ruleX(data, group({ y1: loqr1, y2: hiqr2 }, { x, y, stroke, strokeOpacity, ...remainingOptions })), barY(data, group({ y1: \"p25\", y2: \"p75\" }, { x, y, fill, fillOpacity, ...remainingOptions })), tickY(data, group({ y: \"p50\" }, { x, y, stroke, strokeOpacity, strokeWidth, sort, ...remainingOptions })), dot(data, map({ y: oqr }, { x, y, z: x, stroke, strokeOpacity, ...remainingOptions })));\n}\n// A map function that returns only outliers, returning NaN for non-outliers\nfunction oqr(values) {\n    const r1 = loqr1(values);\n    const r2 = hiqr2(values);\n    return values.map((v) => (v < r1 || v > r2 ? v : NaN));\n}\nfunction loqr1(values, value) {\n    const lo = quartile1(values, value) * 2.5 - quartile3(values, value) * 1.5;\n    return min(values, (d) => (d >= lo ? d : NaN));\n}\nfunction hiqr2(values, value) {\n    const hi = quartile3(values, value) * 2.5 - quartile1(values, value) * 1.5;\n    return max(values, (d) => (d <= hi ? d : NaN));\n}\nfunction quartile1(values, value) {\n    return quantile(values, 0.25, value);\n}\nfunction quartile3(values, value) {\n    return quantile(values, 0.75, value);\n}\n", "import { identity, indexOf, maybeColorChannel, maybeTuple } from \"../options.js\";\nimport { applyTransform } from \"../style.js\";\nimport { AbstractBar } from \"./bar.js\";\nconst defaults = {\n    ariaLabel: \"cell\"\n};\nexport class Cell extends AbstractBar {\n    constructor(data, { x, y, ...options } = {}) {\n        super(data, {\n            x: { value: x, scale: \"x\", type: \"band\", optional: true },\n            y: { value: y, scale: \"y\", type: \"band\", optional: true }\n        }, options, defaults);\n    }\n    _transform(selection, mark) {\n        // apply dx, dy\n        selection.call(applyTransform, mark, {}, 0, 0);\n    }\n}\n/**\n * ```js\n * Plot.cell(simpsons, {x: \"number_in_season\", y: \"season\", fill: \"imdb_rating\"})\n * ```\n *\n * Returns a new cell with the given *data* and *options*. If neither the **x**\n * nor **y** options are specified, *data* is assumed to be an array of pairs\n * [[*x\u2080*, *y\u2080*], [*x\u2081*, *y\u2081*], [*x\u2082*, *y\u2082*], \u2026] such that **x** = [*x\u2080*, *x\u2081*,\n * *x\u2082*, \u2026] and **y** = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n */\nexport function cell(data, options = {}) {\n    let { x, y, ...remainingOptions } = options;\n    [x, y] = maybeTuple(x, y);\n    return new Cell(data, { ...remainingOptions, x, y });\n}\n/**\n * ```js\n * Plot.cellX(simpsons.map(d => d.imdb_rating))\n * ```\n *\n * Equivalent to\n * [Plot.cell](https://github.com/observablehq/plot/blob/main/README.md#plotcelldata-options),\n * except that if the **x** option is not specified, it defaults to [0, 1, 2,\n * \u2026], and if the **fill** option is not specified and **stroke** is not a\n * channel, the fill defaults to the identity function and assumes that *data* =\n * [*x\u2080*, *x\u2081*, *x\u2082*, \u2026].\n */\nexport function cellX(data, options = {}) {\n    let { x = indexOf, fill, stroke, ...remainingOptions } = options;\n    if (fill === undefined && maybeColorChannel(stroke)[0] === undefined)\n        fill = identity;\n    return new Cell(data, { ...remainingOptions, x, fill, stroke });\n}\n/**\n * ```js\n * Plot.cellY(simpsons.map(d => d.imdb_rating))\n * ```\n *\n * Equivalent to\n * [Plot.cell](https://github.com/observablehq/plot/blob/main/README.md#plotcelldata-options),\n * except that if the **y** option is not specified, it defaults to [0, 1, 2,\n * \u2026], and if the **fill** option is not specified and **stroke** is not a\n * channel, the fill defaults to the identity function and assumes that *data* =\n * [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n */\nexport function cellY(data, options = {}) {\n    let { y = indexOf, fill, stroke, ...remainingOptions } = options;\n    if (fill === undefined && maybeColorChannel(stroke)[0] === undefined)\n        fill = identity;\n    return new Cell(data, { ...remainingOptions, y, fill, stroke });\n}\n", "import { group, path, select, Delaunay } from \"d3\";\nimport { create } from \"../context.js\";\nimport { Curve } from \"../curve.js\";\nimport { constant, maybeTuple, maybeZ } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyChannelStyles, applyDirectStyles, applyFrameAnchor, applyIndirectStyles, applyTransform } from \"../style.js\";\nimport { markers, applyMarkers } from \"./marker.js\";\nconst delaunayLinkDefaults = {\n    ariaLabel: \"delaunay link\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeMiterlimit: 1\n};\nconst delaunayMeshDefaults = {\n    ariaLabel: \"delaunay mesh\",\n    fill: null,\n    stroke: \"currentColor\",\n    strokeOpacity: 0.2\n};\nconst hullDefaults = {\n    ariaLabel: \"hull\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 1\n};\nconst voronoiDefaults = {\n    ariaLabel: \"voronoi\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeMiterlimit: 1\n};\nconst voronoiMeshDefaults = {\n    ariaLabel: \"voronoi mesh\",\n    fill: null,\n    stroke: \"currentColor\",\n    strokeOpacity: 0.2\n};\nclass DelaunayLink extends Mark {\n    constructor(data, options = {}) {\n        const { x, y, z, curve, tension } = options;\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y: { value: y, scale: \"y\", optional: true },\n            z: { value: z, optional: true }\n        }, options, delaunayLinkDefaults);\n        this.curve = Curve(curve, tension);\n        markers(this, options);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y, z: Z } = channels;\n        const { curve } = this;\n        const [cx, cy] = applyFrameAnchor(this, dimensions);\n        const xi = X ? (i) => X[i] : constant(cx);\n        const yi = Y ? (i) => Y[i] : constant(cy);\n        const mark = this;\n        function links(index) {\n            let i = -1;\n            const newIndex = [];\n            const newChannels = {};\n            for (const k in channels)\n                newChannels[k] = [];\n            const X1 = [];\n            const X2 = [];\n            const Y1 = [];\n            const Y2 = [];\n            function link(ti, tj) {\n                ti = index[ti];\n                tj = index[tj];\n                newIndex.push(++i);\n                X1[i] = xi(ti);\n                Y1[i] = yi(ti);\n                X2[i] = xi(tj);\n                Y2[i] = yi(tj);\n                for (const k in channels)\n                    newChannels[k].push(channels[k][tj]);\n            }\n            const { halfedges, hull, triangles } = Delaunay.from(index, xi, yi);\n            for (let i = 0; i < halfedges.length; ++i) {\n                // inner edges\n                const j = halfedges[i];\n                if (j > i)\n                    link(triangles[i], triangles[j]);\n            }\n            for (let i = 0; i < hull.length; ++i) {\n                // convex hull\n                link(hull[i], hull[(i + 1) % hull.length]);\n            }\n            select(this)\n                .selectAll()\n                .data(newIndex)\n                .join(\"path\")\n                .call(applyDirectStyles, mark)\n                .attr(\"d\", (i) => {\n                const p = path();\n                const c = curve(p);\n                c.lineStart();\n                c.point(X1[i], Y1[i]);\n                c.point(X2[i], Y2[i]);\n                c.lineEnd();\n                return p;\n            })\n                .call(applyChannelStyles, mark, newChannels)\n                .call(applyMarkers, mark, newChannels);\n        }\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call(Z\n            ? (g) => g\n                .selectAll()\n                .data(group(index, (i) => Z[i]).values())\n                .enter()\n                .append(\"g\")\n                .each(links)\n            : (g) => g.datum(index).each(links))\n            .node();\n    }\n}\nclass AbstractDelaunayMark extends Mark {\n    constructor(data, options = {}, defaults, zof = ({ z }) => z) {\n        const { x, y } = options;\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y: { value: y, scale: \"y\", optional: true },\n            z: { value: zof(options), optional: true }\n        }, options, defaults);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y, z: Z } = channels;\n        const [cx, cy] = applyFrameAnchor(this, dimensions);\n        const xi = X ? (i) => X[i] : constant(cx);\n        const yi = Y ? (i) => Y[i] : constant(cy);\n        const mark = this;\n        function mesh(index) {\n            const delaunay = Delaunay.from(index, xi, yi);\n            select(this)\n                .append(\"path\")\n                .datum(index[0])\n                .call(applyDirectStyles, mark)\n                .attr(\"d\", mark._render(delaunay, dimensions))\n                .call(applyChannelStyles, mark, channels);\n        }\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call(Z\n            ? (g) => g\n                .selectAll()\n                .data(group(index, (i) => Z[i]).values())\n                .enter()\n                .append(\"g\")\n                .each(mesh)\n            : (g) => g.datum(index).each(mesh))\n            .node();\n    }\n}\nclass DelaunayMesh extends AbstractDelaunayMark {\n    constructor(data, options = {}) {\n        super(data, options, delaunayMeshDefaults);\n        this.fill = \"none\";\n    }\n    _render(delaunay) {\n        return delaunay.render();\n    }\n}\nclass Hull extends AbstractDelaunayMark {\n    constructor(data, options = {}) {\n        super(data, options, hullDefaults, maybeZ);\n    }\n    _render(delaunay) {\n        return delaunay.renderHull();\n    }\n}\nclass Voronoi extends Mark {\n    constructor(data, options = {}) {\n        const { x, y, z } = options;\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y: { value: y, scale: \"y\", optional: true },\n            z: { value: z, optional: true }\n        }, options, voronoiDefaults);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y, z: Z } = channels;\n        const [cx, cy] = applyFrameAnchor(this, dimensions);\n        const xi = X ? (i) => X[i] : constant(cx);\n        const yi = Y ? (i) => Y[i] : constant(cy);\n        function cells(index) {\n            const delaunay = Delaunay.from(index, xi, yi);\n            const voronoi = voronoiof(delaunay, dimensions);\n            select(this)\n                .selectAll()\n                .data(index)\n                .enter()\n                .append(\"path\")\n                .call(applyDirectStyles, this)\n                .attr(\"d\", (_, i) => voronoi.renderCell(i))\n                .call(applyChannelStyles, this, channels);\n        }\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call(Z\n            ? (g) => g\n                .selectAll()\n                .data(group(index, (i) => Z[i]).values())\n                .enter()\n                .append(\"g\")\n                .each(cells)\n            : (g) => g.datum(index).each(cells))\n            .node();\n    }\n}\nclass VoronoiMesh extends AbstractDelaunayMark {\n    constructor(data, options) {\n        super(data, options, voronoiMeshDefaults);\n        this.fill = \"none\";\n    }\n    _render(delaunay, dimensions) {\n        return voronoiof(delaunay, dimensions).render();\n    }\n}\nfunction voronoiof(delaunay, dimensions) {\n    const { width, height, marginTop, marginRight, marginBottom, marginLeft } = dimensions;\n    return delaunay.voronoi([marginLeft, marginTop, width - marginRight, height - marginBottom]);\n}\nfunction delaunayMark(DelaunayMark, data, { x, y, ...options } = {}) {\n    [x, y] = maybeTuple(x, y);\n    return new DelaunayMark(data, { ...options, x, y });\n}\n/**\n * Draws links for each edge of the Delaunay triangulation of the points given\n * by the **x** and **y** channels. Supports the same options as the [link\n * mark](#link), except that **x1**, **y1**, **x2**, and **y2** are derived\n * automatically from **x** and **y**. When an aesthetic channel is specified\n * (such as **stroke** or **strokeWidth**), the link inherits the corresponding\n * channel value from one of its two endpoints arbitrarily.\n *\n * If a **z** channel is specified, the input points are grouped by *z*, and\n * separate Delaunay triangulations are constructed for each group.\n */\nexport function delaunayLink(data, options) {\n    return delaunayMark(DelaunayLink, data, options);\n}\n/**\n * Draws a mesh of the Delaunay triangulation of the points given by the **x**\n * and **y** channels. The **stroke** option defaults to _currentColor_, and the\n * **strokeOpacity** defaults to 0.2. The **fill** option is not supported. When\n * an aesthetic channel is specified (such as **stroke** or **strokeWidth**),\n * the mesh inherits the corresponding channel value from one of its constituent\n * points arbitrarily.\n *\n * If a **z** channel is specified, the input points are grouped by *z*, and\n * separate Delaunay triangulations are constructed for each group.\n */\nexport function delaunayMesh(data, options) {\n    return delaunayMark(DelaunayMesh, data, options);\n}\n/**\n * Draws a convex hull around the points given by the **x** and **y** channels.\n * The **stroke** option defaults to _currentColor_ and the **fill** option\n * defaults to _none_. When an aesthetic channel is specified (such as\n * **stroke** or **strokeWidth**), the hull inherits the corresponding channel\n * value from one of its constituent points arbitrarily.\n *\n * If a **z** channel is specified, the input points are grouped by *z*, and\n * separate convex hulls are constructed for each group. If the **z** channel is\n * not specified, it defaults to either the **fill** channel, if any, or the\n * **stroke** channel, if any.\n */\nexport function hull(data, options) {\n    return delaunayMark(Hull, data, options);\n}\n/**\n * Draws polygons for each cell of the Voronoi tesselation of the points given\n * by the **x** and **y** channels.\n *\n * If a **z** channel is specified, the input points are grouped by *z*, and\n * separate Voronoi tesselations are constructed for each group.\n */\nexport function voronoi(data, options) {\n    return delaunayMark(Voronoi, data, options);\n}\n/**\n * Draws a mesh for the cell boundaries of the Voronoi tesselation of the points\n * given by the **x** and **y** channels. The **stroke** option defaults to\n * _currentColor_, and the **strokeOpacity** defaults to 0.2. The **fill**\n * option is not supported. When an aesthetic channel is specified (such as\n * **stroke** or **strokeWidth**), the mesh inherits the corresponding channel\n * value from one of its constituent points arbitrarily.\n *\n * If a **z** channel is specified, the input points are grouped by *z*, and\n * separate Voronoi tesselations are constructed for each group.\n */\nexport function voronoiMesh(data, options) {\n    return delaunayMark(VoronoiMesh, data, options);\n}\n", "import { contourDensity, create, geoPath } from \"d3\";\nimport { identity, isTypedArray, maybeTuple, maybeZ, valueof } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { coerceNumbers } from \"../scales.js\";\nimport { applyFrameAnchor, applyDirectStyles, applyIndirectStyles, applyChannelStyles, applyTransform, groupZ } from \"../style.js\";\nimport { initializer } from \"../transforms/basic.js\";\nconst defaults = {\n    ariaLabel: \"density\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeMiterlimit: 1\n};\nexport class Density extends Mark {\n    constructor(data, { x, y, z, weight, fill, stroke, ...options } = {}) {\n        // If fill or stroke is specified as \u201Cdensity\u201D, then temporarily treat these\n        // as a literal color when computing defaults and maybeZ; below, we\u2019ll unset\n        // these constant colors back to undefined since they will instead be\n        // populated by a channel generated by the initializer.\n        const fillDensity = isDensity(fill) && ((fill = \"currentColor\"), true);\n        const strokeDensity = isDensity(stroke) && ((stroke = \"currentColor\"), true);\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y: { value: y, scale: \"y\", optional: true },\n            z: { value: maybeZ({ z, fill, stroke }), optional: true },\n            weight: { value: weight, optional: true }\n        }, densityInitializer({ ...options, fill, stroke }, fillDensity, strokeDensity), defaults);\n        if (fillDensity)\n            this.fill = undefined;\n        if (strokeDensity)\n            this.stroke = undefined;\n        this.z = z;\n    }\n    filter(index) {\n        return index; // don\u2019t filter contours constructed by initializer\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { contours } = channels;\n        const path = geoPath();\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"path\")\n            .call(applyDirectStyles, this)\n            .call(applyChannelStyles, this, channels)\n            .attr(\"d\", (i) => path(contours[i])))\n            .node();\n    }\n}\n/**\n * Draws contours representing the estimated density of the two-dimensional\n * points given by the **x** and **y** channels, and possibly weighted by the\n * **weight** channel. If either of the **x** or **y** channels are not\n * specified, the corresponding position is controlled by the **frameAnchor**\n * option.\n *\n * The **thresholds** option, which defaults to 20, specifies one more than the\n * number of contours that will be computed at uniformly-spaced intervals\n * between 0 (exclusive) and the maximum density (exclusive). The **thresholds**\n * option may also be specified as an array or iterable of explicit density\n * values. The **bandwidth** option, which defaults to 20, specifies the\n * standard deviation of the Gaussian kernel used for estimation in pixels.\n *\n * If a **z**, **stroke** or **fill** channel is specified, the input points are\n * grouped by series, and separate sets of contours are generated for each\n * series. If the **stroke** or **fill** is specified as *density*, a color\n * channel is constructed with values representing the density threshold value\n * of each contour.\n */\nexport function density(data, options = {}) {\n    let { x, y, ...remainingOptions } = options;\n    [x, y] = maybeTuple(x, y);\n    return new Density(data, { ...remainingOptions, x, y });\n}\nconst dropChannels = new Set([\"x\", \"y\", \"z\", \"weight\"]);\nfunction densityInitializer(options, fillDensity, strokeDensity) {\n    const k = 100; // arbitrary scale factor for readability\n    let { bandwidth, thresholds } = options;\n    bandwidth = bandwidth === undefined ? 20 : +bandwidth;\n    thresholds =\n        thresholds === undefined\n            ? 20\n            : typeof thresholds?.[Symbol.iterator] === \"function\"\n                ? coerceNumbers(thresholds)\n                : +thresholds;\n    return initializer(options, function (data, facets, channels, scales, dimensions) {\n        const X = channels.x ? coerceNumbers(valueof(channels.x.value, scales[channels.x.scale] || identity)) : null;\n        const Y = channels.y ? coerceNumbers(valueof(channels.y.value, scales[channels.y.scale] || identity)) : null;\n        const W = channels.weight ? coerceNumbers(channels.weight.value) : null;\n        const Z = channels.z?.value;\n        const { z } = this;\n        const [cx, cy] = applyFrameAnchor(this, dimensions);\n        const { width, height } = dimensions;\n        // Group any of the input channels according to the first index associated\n        // with each z-series or facet. Drop any channels not be needed for\n        // rendering after the contours are computed.\n        const newChannels = Object.fromEntries(Object.entries(channels)\n            .filter(([key]) => !dropChannels.has(key))\n            .map(([key, channel]) => [key, { ...channel, value: [] }]));\n        // If the fill or stroke encodes density, construct new output channels.\n        const FD = fillDensity && [];\n        const SD = strokeDensity && [];\n        const density = contourDensity()\n            .x(X ? (i) => X[i] : cx)\n            .y(Y ? (i) => Y[i] : cy)\n            .weight(W ? (i) => W[i] : 1)\n            .size([width, height])\n            .bandwidth(bandwidth);\n        // Compute the grid for each facet-series.\n        const facetsContours = [];\n        for (const facet of facets) {\n            const facetContours = [];\n            facetsContours.push(facetContours);\n            for (const index of Z ? groupZ(facet, Z, z) : [facet]) {\n                const contour = density.contours(index);\n                facetContours.push([index, contour]);\n            }\n        }\n        // If explicit thresholds were not specified, find the maximum density of\n        // all grids and use this to compute thresholds.\n        let T = thresholds;\n        if (!isTypedArray(T)) {\n            let maxValue = 0;\n            for (const facetContours of facetsContours) {\n                for (const [, contour] of facetContours) {\n                    const max = contour.max;\n                    if (max > maxValue)\n                        maxValue = max;\n                }\n            }\n            T = Float64Array.from({ length: thresholds - 1 }, (_, i) => (maxValue * k * (i + 1)) / thresholds);\n        }\n        // Generate contours for each facet-series.\n        const newFacets = [];\n        const contours = [];\n        for (const facetContours of facetsContours) {\n            const newFacet = [];\n            newFacets.push(newFacet);\n            for (const [index, contour] of facetContours) {\n                for (const t of T) {\n                    newFacet.push(contours.length);\n                    contours.push(contour(t / k));\n                    if (FD)\n                        FD.push(t);\n                    if (SD)\n                        SD.push(t);\n                    for (const key in newChannels) {\n                        newChannels[key].value.push(channels[key].value[index[0]]);\n                    }\n                }\n            }\n        }\n        // If the fill or stroke encodes density, ensure that a zero value is\n        // included so that the default color scale domain starts at zero. Otherwise\n        // if the starting range value is the same as the background color, the\n        // first contour might not be visible.\n        if (FD)\n            FD.push(0);\n        if (SD)\n            SD.push(0);\n        return {\n            data,\n            facets: newFacets,\n            channels: {\n                ...newChannels,\n                ...(FD && { fill: { value: FD, scale: \"color\" } }),\n                ...(SD && { stroke: { value: SD, scale: \"color\" } }),\n                contours: { value: contours }\n            }\n        };\n    });\n}\nfunction isDensity(value) {\n    return /^density$/i.test(value);\n}\n", "import { create } from \"../context.js\";\nimport { number } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyDirectStyles, applyIndirectStyles, applyTransform } from \"../style.js\";\nconst defaults = {\n    ariaLabel: \"frame\",\n    fill: \"none\",\n    stroke: \"currentColor\"\n};\nexport class Frame extends Mark {\n    constructor(options = {}) {\n        const { inset = 0, insetTop = inset, insetRight = inset, insetBottom = inset, insetLeft = inset, rx, ry } = options;\n        super(undefined, undefined, options, defaults);\n        this.insetTop = number(insetTop);\n        this.insetRight = number(insetRight);\n        this.insetBottom = number(insetBottom);\n        this.insetLeft = number(insetLeft);\n        this.rx = number(rx);\n        this.ry = number(ry);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { marginTop, marginRight, marginBottom, marginLeft, width, height } = dimensions;\n        const { insetTop, insetRight, insetBottom, insetLeft, rx, ry } = this;\n        return create(\"svg:rect\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyDirectStyles, this)\n            .call(applyTransform, this, {})\n            .attr(\"x\", marginLeft + insetLeft)\n            .attr(\"y\", marginTop + insetTop)\n            .attr(\"width\", width - marginLeft - marginRight - insetLeft - insetRight)\n            .attr(\"height\", height - marginTop - marginBottom - insetTop - insetBottom)\n            .attr(\"rx\", rx)\n            .attr(\"ry\", ry)\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.frame({stroke: \"red\"})\n * ```\n *\n * Returns a new frame with the specified *options*.\n */\nexport function frame(options) {\n    return new Frame(options);\n}\n", "import { coerceNumbers } from \"../scales.js\";\nimport { sqrt3 } from \"../symbols.js\";\nimport { identity, isNoneish, number, valueof } from \"../options.js\";\nimport { initializer } from \"./basic.js\";\nimport { hasOutput, maybeGroup, maybeOutputs, maybeSubgroup } from \"./group.js\";\n// We don\u2019t want the hexagons to align with the edges of the plot frame, as that\n// would cause extreme x-values (the upper bound of the default x-scale domain)\n// to be rounded up into a floating bin to the right of the plot. Therefore,\n// rather than centering the origin hexagon around \u27E80,0\u27E9 in screen coordinates,\n// we offset slightly to \u27E80.5,0\u27E9. The hexgrid mark uses the same origin.\nexport const ox = 0.5, oy = 0;\n/**\n * Aggregates the given input channels into hexagonal bins, creating output\n * channels with the reduced data. The *options* must specify the **x** and\n * **y** channels. The **binWidth** option (default 20) defines the distance\n * between centers of neighboring hexagons in pixels. If any of **z**, **fill**,\n * or **stroke** is a channel, the first of these channels will be used to\n * subdivide bins. The *outputs* options are similar to the [bin\n * transform](https://github.com/observablehq/plot/blob/main/README.md#bin);\n * each output channel receives as input, for each hexagon, the subset of the\n * data which has been matched to its center. The outputs object specifies the\n * aggregation method for each output channel.\n *\n * The following aggregation methods are supported:\n *\n * * *first* - the first value, in input order\n * * *last* - the last value, in input order\n * * *count* - the number of elements (frequency)\n * * *distinct* - the number of distinct values\n * * *sum* - the sum of values\n * * *proportion* - the sum proportional to the overall total (weighted\n *   frequency)\n * * *proportion-facet* - the sum proportional to the facet total\n * * *min* - the minimum value\n * * *min-index* - the zero-based index of the minimum value\n * * *max* - the maximum value\n * * *max-index* - the zero-based index of the maximum value\n * * *mean* - the mean value (average)\n * * *median* - the median value\n * * *deviation* - the standard deviation\n * * *variance* - the variance per [Welford\u2019s\n *   algorithm](https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_online_algorithm)\n * * *mode* - the value with the most occurrences\n * * a function to be passed the array of values for each bin and the extent of\n *   the bin\n * * an object with a *reduce* method\n *\n * See also the\n * [hexgrid](https://github.com/observablehq/plot/blob/main/README.md#hexgrid)\n * mark.\n */\nexport function hexbin(outputs = { fill: \"count\" }, options = {}) {\n    // TODO filter e.g. to show empty hexbins?\n    // TODO disallow x, x1, x2, y, y1, y2 reducers?\n    let { binWidth, ...remainingOptions } = options;\n    binWidth = binWidth === undefined ? 20 : number(binWidth);\n    outputs = maybeOutputs(outputs, remainingOptions);\n    // A fill output means a fill channel, and hence the stroke should default to\n    // none (assuming a mark that defaults to fill and no stroke, such as dot).\n    // Note that it\u2019s safe to mutate options here because we just created it with\n    // the rest operator above.\n    const { z, fill, stroke } = remainingOptions;\n    if (stroke === undefined && isNoneish(fill) && hasOutput(outputs, \"fill\"))\n        remainingOptions.stroke = \"none\";\n    // Populate default values for the r and symbol options, as appropriate.\n    if (remainingOptions.symbol === undefined)\n        remainingOptions.symbol = \"hexagon\";\n    if (remainingOptions.r === undefined && !hasOutput(outputs, \"r\"))\n        remainingOptions.r = binWidth / 2;\n    return initializer(remainingOptions, (data, facets, { x: X, y: Y, z: Z, fill: F, stroke: S, symbol: Q }, scales) => {\n        if (X === undefined)\n            throw new Error(\"missing channel: x\");\n        if (Y === undefined)\n            throw new Error(\"missing channel: y\");\n        // Coerce the X and Y channels to numbers (so that null is properly treated\n        // as an undefined value rather than being coerced to zero).\n        X = coerceNumbers(valueof(X.value, scales[X.scale] || identity));\n        Y = coerceNumbers(valueof(Y.value, scales[Y.scale] || identity));\n        // Extract the values for channels that are eligible for grouping; not all\n        // marks define a z channel, so compute one if it not already computed. If z\n        // was explicitly set to null, ensure that we don\u2019t subdivide bins.\n        Z = Z ? Z.value : valueof(data, z);\n        F = F?.value;\n        S = S?.value;\n        Q = Q?.value;\n        // Group on the first of z, fill, stroke, and symbol. Implicitly reduce\n        // these channels using the first corresponding value for each bin.\n        const G = maybeSubgroup(outputs, { z: Z, fill: F, stroke: S, symbol: Q });\n        const GZ = Z && [];\n        const GF = F && [];\n        const GS = S && [];\n        const GQ = Q && [];\n        // Construct the hexbins and populate the output channels.\n        const binFacets = [];\n        const BX = [];\n        const BY = [];\n        let i = -1;\n        for (const o of outputs)\n            o.initialize(data);\n        for (const facet of facets) {\n            const binFacet = [];\n            for (const o of outputs)\n                o.scope(\"facet\", facet);\n            for (const [f, I] of maybeGroup(facet, G)) {\n                for (const bin of hbin(I, X, Y, binWidth)) {\n                    binFacet.push(++i);\n                    BX.push(bin.x);\n                    BY.push(bin.y);\n                    if (Z)\n                        GZ.push(G === Z ? f : Z[bin[0]]);\n                    if (F)\n                        GF.push(G === F ? f : F[bin[0]]);\n                    if (S)\n                        GS.push(G === S ? f : S[bin[0]]);\n                    if (Q)\n                        GQ.push(G === Q ? f : Q[bin[0]]);\n                    for (const o of outputs)\n                        o.reduce(bin);\n                }\n            }\n            binFacets.push(binFacet);\n        }\n        // Construct the output channels, and populate the radius scale hint.\n        const channels = {\n            x: { value: BX },\n            y: { value: BY },\n            ...(Z && { z: { value: GZ } }),\n            ...(F && { fill: { value: GF, scale: true } }),\n            ...(S && { stroke: { value: GS, scale: true } }),\n            ...(Q && { symbol: { value: GQ, scale: true } }),\n            ...Object.fromEntries(outputs.map(({ name, output }) => [\n                name,\n                { scale: true, radius: name === \"r\" ? binWidth / 2 : undefined, value: output.transform() }\n            ]))\n        };\n        return { data, facets: binFacets, channels };\n    });\n}\nfunction hbin(I, X, Y, dx) {\n    const dy = dx * (1.5 / sqrt3);\n    const bins = new Map();\n    for (const i of I) {\n        let px = X[i], py = Y[i];\n        if (isNaN(px) || isNaN(py))\n            continue;\n        let pj = Math.round((py = (py - oy) / dy)), pi = Math.round((px = (px - ox) / dx - (pj & 1) / 2)), py1 = py - pj;\n        if (Math.abs(py1) * 3 > 1) {\n            let px1 = px - pi, pi2 = pi + (px < pi ? -1 : 1) / 2, pj2 = pj + (py < pj ? -1 : 1), px2 = px - pi2, py2 = py - pj2;\n            if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2)\n                (pi = pi2 + (pj & 1 ? 1 : -1) / 2), (pj = pj2);\n        }\n        const key = `${pi},${pj}`;\n        let bin = bins.get(key);\n        if (bin === undefined) {\n            bins.set(key, (bin = []));\n            bin.x = (pi + (pj & 1) / 2) * dx + ox;\n            bin.y = pj * dy + oy;\n        }\n        bin.push(i);\n    }\n    return bins.values();\n}\n", "import { create } from \"../context.js\";\nimport { number } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyDirectStyles, applyIndirectStyles, applyTransform, offset } from \"../style.js\";\nimport { sqrt4_3 } from \"../symbols.js\";\nimport { ox, oy } from \"../transforms/hexbin.js\";\nconst defaults = {\n    ariaLabel: \"hexgrid\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeOpacity: 0.1\n};\n/**\n * The **binWidth** option specifies the distance between the centers of\n * neighboring hexagons, in pixels (defaults to 20). The **clip** option\n * defaults to true, clipping the mark to the frame\u2019s dimensions.\n */\nexport function hexgrid(options) {\n    return new Hexgrid(options);\n}\nexport class Hexgrid extends Mark {\n    constructor({ binWidth = 20, clip = true, ...options } = {}) {\n        super(undefined, undefined, { clip, ...options }, defaults);\n        this.binWidth = number(binWidth);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { binWidth } = this;\n        const { marginTop, marginRight, marginBottom, marginLeft, width, height } = dimensions;\n        const x0 = marginLeft - ox, x1 = width - marginRight - ox, y0 = marginTop - oy, y1 = height - marginBottom - oy;\n        const rx = binWidth / 2, ry = rx * sqrt4_3, hy = ry / 2, wx = rx * 2, wy = ry * 1.5;\n        const path = `m0,${-ry}l${rx},${hy}v${ry}l${-rx},${hy}`;\n        const i0 = Math.floor(x0 / wx), i1 = Math.ceil(x1 / wx);\n        const j0 = Math.floor((y0 + hy) / wy), j1 = Math.ceil((y1 - hy) / wy) + 1;\n        const m = [];\n        for (let j = j0; j < j1; ++j) {\n            for (let i = i0; i < i1; ++i) {\n                m.push(`M${i * wx + (j & 1) * rx},${j * wy}${path}`);\n            }\n        }\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call((g) => g\n            .append(\"path\")\n            .call(applyDirectStyles, this)\n            .call(applyTransform, this, {}, offset + ox, offset + oy)\n            .attr(\"d\", m.join(\"\")))\n            .node();\n    }\n}\n", "import { create } from \"../context.js\";\nimport { positive } from \"../defined.js\";\nimport { maybeFrameAnchor, maybeNumberChannel, maybeTuple, string } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyChannelStyles, applyDirectStyles, applyIndirectStyles, applyTransform, applyAttr, impliedString, applyFrameAnchor } from \"../style.js\";\nconst defaults = {\n    ariaLabel: \"image\",\n    fill: null,\n    stroke: null\n};\n// Tests if the given string is a path: does it start with a dot-slash\n// (./foo.png), dot-dot-slash (../foo.png), or slash (/foo.png)?\nfunction isPath(string) {\n    return /^\\.*\\//.test(string);\n}\n// Tests if the given string is a URL (e.g., https://placekitten.com/200/300).\n// The allowed protocols is overly restrictive, but we don\u2019t want to allow any\n// scheme here because it would increase the likelihood of a false positive with\n// a field name that happens to contain a colon.\nfunction isUrl(string) {\n    return /^(blob|data|file|http|https):/i.test(string);\n}\n// Disambiguates a constant src definition from a channel. A path or URL string\n// is assumed to be a constant; any other string is assumed to be a field name.\nfunction maybePathChannel(value) {\n    return typeof value === \"string\" && (isPath(value) || isUrl(value)) ? [undefined, value] : [value, undefined];\n}\nexport class Image extends Mark {\n    constructor(data, options = {}) {\n        let { x, y, width, height, src, preserveAspectRatio, crossOrigin, frameAnchor } = options;\n        if (width === undefined && height !== undefined)\n            width = height;\n        else if (height === undefined && width !== undefined)\n            height = width;\n        const [vs, cs] = maybePathChannel(src);\n        const [vw, cw] = maybeNumberChannel(width, 16);\n        const [vh, ch] = maybeNumberChannel(height, 16);\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y: { value: y, scale: \"y\", optional: true },\n            width: { value: vw, filter: positive, optional: true },\n            height: { value: vh, filter: positive, optional: true },\n            src: { value: vs, optional: true }\n        }, options, defaults);\n        this.src = cs;\n        this.width = cw;\n        this.height = ch;\n        this.preserveAspectRatio = impliedString(preserveAspectRatio, \"xMidYMid\");\n        this.crossOrigin = string(crossOrigin);\n        this.frameAnchor = maybeFrameAnchor(frameAnchor);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y, width: W, height: H, src: S } = channels;\n        const [cx, cy] = applyFrameAnchor(this, dimensions);\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"image\")\n            .call(applyDirectStyles, this)\n            .attr(\"x\", W && X\n            ? (i) => X[i] - W[i] / 2\n            : W\n                ? (i) => cx - W[i] / 2\n                : X\n                    ? (i) => X[i] - this.width / 2\n                    : cx - this.width / 2)\n            .attr(\"y\", H && Y\n            ? (i) => Y[i] - H[i] / 2\n            : H\n                ? (i) => cy - H[i] / 2\n                : Y\n                    ? (i) => Y[i] - this.height / 2\n                    : cy - this.height / 2)\n            .attr(\"width\", W ? (i) => W[i] : this.width)\n            .attr(\"height\", H ? (i) => H[i] : this.height)\n            .call(applyAttr, \"href\", S ? (i) => S[i] : this.src)\n            .call(applyAttr, \"preserveAspectRatio\", this.preserveAspectRatio)\n            .call(applyAttr, \"crossorigin\", this.crossOrigin)\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.image(presidents, {x: \"inauguration\", y: \"favorability\", src: \"portrait\"})\n * ```\n *\n * Returns a new image with the given *data* and *options*. If neither the **x**\n * nor **y** nor **frameAnchor** options are specified, *data* is assumed to be\n * an array of pairs [[*x\u2080*, *y\u2080*], [*x\u2081*, *y\u2081*], [*x\u2082*, *y\u2082*], \u2026] such that\n * **x** = [*x\u2080*, *x\u2081*, *x\u2082*, \u2026] and **y** = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n */\nexport function image(data, options = {}) {\n    let { x, y, ...remainingOptions } = options;\n    if (options.frameAnchor === undefined)\n        [x, y] = maybeTuple(x, y);\n    return new Image(data, { ...remainingOptions, x, y });\n}\n", "import { line as shapeLine } from \"d3\";\nimport { create } from \"../context.js\";\nimport { Curve } from \"../curve.js\";\nimport { indexOf, identity, maybeTuple, maybeZ } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyDirectStyles, applyIndirectStyles, applyTransform, applyGroupedChannelStyles, groupIndex } from \"../style.js\";\nimport { maybeDenseIntervalX, maybeDenseIntervalY } from \"../transforms/bin.js\";\nimport { applyGroupedMarkers, markers } from \"./marker.js\";\nconst defaults = {\n    ariaLabel: \"line\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: 1\n};\nexport class Line extends Mark {\n    constructor(data, options = {}) {\n        const { x, y, z, curve, tension } = options;\n        super(data, {\n            x: { value: x, scale: \"x\" },\n            y: { value: y, scale: \"y\" },\n            z: { value: maybeZ(options), optional: true }\n        }, options, defaults);\n        this.z = z;\n        this.curve = Curve(curve, tension);\n        markers(this, options);\n    }\n    filter(index) {\n        return index;\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y } = channels;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(groupIndex(index, [X, Y], this, channels))\n            .enter()\n            .append(\"path\")\n            .call(applyDirectStyles, this)\n            .call(applyGroupedChannelStyles, this, channels)\n            .call(applyGroupedMarkers, this, channels)\n            .attr(\"d\", shapeLine()\n            .curve(this.curve)\n            .defined((i) => i >= 0)\n            .x((i) => X[i])\n            .y((i) => Y[i])))\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.line(aapl, {x: \"Date\", y: \"Close\"})\n * ```\n *\n * Returns a new line with the given *data* and *options*. If neither the **x**\n * nor **y** options are specified, *data* is assumed to be an array of pairs\n * [[*x\u2080*, *y\u2080*], [*x\u2081*, *y\u2081*], [*x\u2082*, *y\u2082*], \u2026] such that **x** = [*x\u2080*, *x\u2081*,\n * *x\u2082*, \u2026] and **y** = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n */\nexport function line(data, options = {}) {\n    let { x, y, ...remainingOptions } = options;\n    [x, y] = maybeTuple(x, y);\n    return new Line(data, { ...remainingOptions, x, y });\n}\n/**\n * ```js\n * Plot.lineX(aapl.map(d => d.Close))\n * ```\n *\n * Similar to\n * [Plot.line](https://github.com/observablehq/plot/blob/main/README.md#plotlinedata-options)\n * except that if the **x** option is not specified, it defaults to the identity\n * function and assumes that *data* = [*x\u2080*, *x\u2081*, *x\u2082*, \u2026]. If the **y** option\n * is not specified, it defaults to [0, 1, 2, \u2026].\n *\n * If the **interval** option is specified, the [binY\n * transform](https://github.com/observablehq/plot/blob/main/README.md#bin) is\n * implicitly applied to the specified *options*. The reducer of the output *x*\n * channel may be specified via the **reduce** option, which defaults to\n * *first*. To default to zero instead of showing gaps in data, as when the\n * observed value represents a quantity, use the *sum* reducer.\n *\n * ```js\n * Plot.lineX(observations, {y: \"date\", x: \"temperature\", interval: d3.utcDay})\n * ```\n *\n * The **interval** option is recommended to \u201Cregularize\u201D sampled data; for\n * example, if your data represents timestamped temperature measurements and you\n * expect one sample per day, use d3.utcDay as the interval.\n */\nexport function lineX(data, options = {}) {\n    const { x = identity, y = indexOf, ...remainingOptions } = options;\n    return new Line(data, maybeDenseIntervalY({ ...remainingOptions, x, y }));\n}\n/**\n * ```js\n * Plot.lineY(aapl.map(d => d.Close))\n * ```\n *\n * Similar to\n * [Plot.line](https://github.com/observablehq/plot/blob/main/README.md#plotlinedata-options)\n * except that if the **y** option is not specified, it defaults to the identity\n * function and assumes that *data* = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026]. If the **x** option\n * is not specified, it defaults to [0, 1, 2, \u2026].\n *\n * If the **interval** option is specified, the [binX\n * transform](https://github.com/observablehq/plot/blob/main/README.md#bin) is\n * implicitly applied to the specified *options*. The reducer of the output *y*\n * channel may be specified via the **reduce** option, which defaults to\n * *first*. To default to zero instead of showing gaps in data, as when the\n * observed value represents a quantity, use the *sum* reducer.\n *\n * ```js\n * Plot.lineY(observations, {x: \"date\", y: \"temperature\", interval: d3.utcDay})\n * ```\n *\n * The **interval** option is recommended to \u201Cregularize\u201D sampled data; for\n * example, if your data represents timestamped temperature measurements and you\n * expect one sample per day, use d3.utcDay as the interval.\n */\nexport function lineY(data, options = {}) {\n    const { x = indexOf, y = identity, ...remainingOptions } = options;\n    return new Line(data, maybeDenseIntervalX({ ...remainingOptions, x, y }));\n}\n", "// https://github.com/jstat/jstat\n//\n// Copyright (c) 2013 jStat\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function ibetainv(p, a, b) {\n    var EPS = 1e-8;\n    var a1 = a - 1;\n    var b1 = b - 1;\n    var j = 0;\n    var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n    if (p <= 0)\n        return 0;\n    if (p >= 1)\n        return 1;\n    if (a >= 1 && b >= 1) {\n        pp = p < 0.5 ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5)\n            x = -x;\n        al = (x * x - 3) / 6;\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\n        w = (x * Math.sqrt(al + h)) / h - (1 / (2 * b - 1) - 1 / (2 * a - 1)) * (al + 5 / 6 - 2 / (3 * h));\n        x = a / (a + b * Math.exp(2 * w));\n    }\n    else {\n        lna = Math.log(a / (a + b));\n        lnb = Math.log(b / (a + b));\n        t = Math.exp(a * lna) / a;\n        u = Math.exp(b * lnb) / b;\n        w = t + u;\n        if (p < t / w)\n            x = Math.pow(a * w * p, 1 / a);\n        else\n            x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n    }\n    afac = -gammaln(a) - gammaln(b) + gammaln(a + b);\n    for (; j < 10; j++) {\n        if (x === 0 || x === 1)\n            return x;\n        err = ibeta(x, a, b) - p;\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n        u = err / t;\n        x -= t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x))));\n        if (x <= 0)\n            x = 0.5 * (x + t);\n        if (x >= 1)\n            x = 0.5 * (x + t + 1);\n        if (Math.abs(t) < EPS * x && j > 0)\n            break;\n    }\n    return x;\n}\nexport function ibeta(x, a, b) {\n    // Factors in front of the continued fraction.\n    var bt = x === 0 || x === 1 ? 0 : Math.exp(gammaln(a + b) - gammaln(a) - gammaln(b) + a * Math.log(x) + b * Math.log(1 - x));\n    if (x < 0 || x > 1)\n        return false;\n    if (x < (a + 1) / (a + b + 2))\n        // Use continued fraction directly.\n        return (bt * betacf(x, a, b)) / a;\n    // else use continued fraction after making the symmetry transformation.\n    return 1 - (bt * betacf(1 - x, b, a)) / b;\n}\nexport function betacf(x, a, b) {\n    var fpmin = 1e-30;\n    var m = 1;\n    var qab = a + b;\n    var qap = a + 1;\n    var qam = a - 1;\n    var c = 1;\n    var d = 1 - (qab * x) / qap;\n    var m2, aa, del, h;\n    // These q's will be used in factors that occur in the coefficients\n    if (Math.abs(d) < fpmin)\n        d = fpmin;\n    d = 1 / d;\n    h = d;\n    for (; m <= 100; m++) {\n        m2 = 2 * m;\n        aa = (m * (b - m) * x) / ((qam + m2) * (a + m2));\n        // One step (the even one) of the recurrence\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin)\n            d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin)\n            c = fpmin;\n        d = 1 / d;\n        h *= d * c;\n        aa = (-(a + m) * (qab + m) * x) / ((a + m2) * (qap + m2));\n        // Next step of the recurrence (the odd one)\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin)\n            d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin)\n            c = fpmin;\n        d = 1 / d;\n        del = d * c;\n        h *= del;\n        if (Math.abs(del - 1.0) < 3e-7)\n            break;\n    }\n    return h;\n}\nexport function gammaln(x) {\n    var j = 0;\n    var cof = [\n        76.18009172947146, -86.5053203294167, 24.01409824083091, -1.231739572450155, 0.1208650973866179e-2,\n        -0.5395239384953e-5\n    ];\n    var ser = 1.000000000190015;\n    var xx, y, tmp;\n    tmp = (y = xx = x) + 5.5;\n    tmp -= (xx + 0.5) * Math.log(tmp);\n    for (; j < 6; j++)\n        ser += cof[j] / ++y;\n    return Math.log((2.506628274631 * ser) / xx) - tmp;\n}\nexport function qt(p, dof) {\n    var x = ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt((dof * (1 - x)) / x);\n    return p > 0.5 ? x : -x;\n}\n", "import { extent, range, sum, area as shapeArea, namespaces } from \"d3\";\nimport { create } from \"../context.js\";\nimport { identity, indexOf, isNone, isNoneish, maybeZ } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { qt } from \"../stats.js\";\nimport { applyDirectStyles, applyGroupedChannelStyles, applyIndirectStyles, applyTransform, groupZ } from \"../style.js\";\nimport { maybeDenseIntervalX, maybeDenseIntervalY } from \"../transforms/bin.js\";\nconst defaults = {\n    ariaLabel: \"linear-regression\",\n    fill: \"currentColor\",\n    fillOpacity: 0.1,\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: 1\n};\nclass LinearRegression extends Mark {\n    constructor(data, options = {}) {\n        const { x, y, z, ci = 0.95, precision = 4 } = options;\n        super(data, {\n            x: { value: x, scale: \"x\" },\n            y: { value: y, scale: \"y\" },\n            z: { value: maybeZ(options), optional: true }\n        }, options, defaults);\n        this.z = z;\n        this.ci = +ci;\n        this.precision = +precision;\n        if (!(0 <= this.ci && this.ci < 1))\n            throw new Error(`invalid ci; not in [0, 1): ${ci}`);\n        if (!(this.precision > 0))\n            throw new Error(`invalid precision: ${precision}`);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y, z: Z } = channels;\n        const { ci } = this;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(Z ? groupZ(index, Z, this.z) : [index])\n            .enter()\n            .call((enter) => enter\n            .append(\"path\")\n            .attr(\"fill\", \"none\")\n            .call(applyDirectStyles, this)\n            .call(applyGroupedChannelStyles, this, { ...channels, fill: null, fillOpacity: null })\n            .attr(\"d\", (I) => this._renderLine(I, X, Y))\n            .call(ci && !isNone(this.fill)\n            ? (path) => path\n                .select(pathBefore)\n                .attr(\"stroke\", \"none\")\n                .call(applyDirectStyles, this)\n                .call(applyGroupedChannelStyles, this, {\n                ...channels,\n                stroke: null,\n                strokeOpacity: null,\n                strokeWidth: null\n            })\n                .attr(\"d\", (I) => this._renderBand(I, X, Y))\n            : () => { })))\n            .node();\n    }\n}\nfunction pathBefore() {\n    return this.parentNode.insertBefore(this.ownerDocument.createElementNS(namespaces.svg, \"path\"), this);\n}\nclass LinearRegressionX extends LinearRegression {\n    constructor(data, options) {\n        super(data, options);\n    }\n    _renderBand(I, X, Y) {\n        const { ci, precision } = this;\n        const [y1, y2] = extent(I, (i) => Y[i]);\n        const f = linearRegressionF(I, Y, X);\n        const g = confidenceIntervalF(I, Y, X, (1 - ci) / 2, f);\n        return shapeArea()\n            .y((y) => y)\n            .x0((y) => g(y, -1))\n            .x1((y) => g(y, +1))(range(y1, y2 - precision / 2, precision).concat(y2));\n    }\n    _renderLine(I, X, Y) {\n        const [y1, y2] = extent(I, (i) => Y[i]);\n        const f = linearRegressionF(I, Y, X);\n        return `M${f(y1)},${y1}L${f(y2)},${y2}`;\n    }\n}\nclass LinearRegressionY extends LinearRegression {\n    constructor(data, options) {\n        super(data, options);\n    }\n    _renderBand(I, X, Y) {\n        const { ci, precision } = this;\n        const [x1, x2] = extent(I, (i) => X[i]);\n        const f = linearRegressionF(I, X, Y);\n        const g = confidenceIntervalF(I, X, Y, (1 - ci) / 2, f);\n        return shapeArea()\n            .x((x) => x)\n            .y0((x) => g(x, -1))\n            .y1((x) => g(x, +1))(range(x1, x2 - precision / 2, precision).concat(x2));\n    }\n    _renderLine(I, X, Y) {\n        const [x1, x2] = extent(I, (i) => X[i]);\n        const f = linearRegressionF(I, X, Y);\n        return `M${x1},${f(x1)}L${x2},${f(x2)}`;\n    }\n}\n/**\n * ```js\n * Plot.linearRegressionX(mtcars, {y: \"wt\", x: \"hp\"})\n * ```\n *\n * Returns a linear regression mark where *x* is the dependent variable and *y*\n * is the independent variable.\n */\nexport function linearRegressionX(data, options = {}) {\n    const { y = indexOf, x = identity, stroke, fill = isNoneish(stroke) ? \"currentColor\" : stroke, ...remainingOptions } = options;\n    return new LinearRegressionX(data, maybeDenseIntervalY({ ...remainingOptions, x, y, fill, stroke }));\n}\n/**\n * ```js\n * Plot.linearRegressionY(mtcars, {x: \"wt\", y: \"hp\"})\n * ```\n *\n * Returns a linear regression mark where *y* is the dependent variable and *x*\n * is the independent variable.\n */\nexport function linearRegressionY(data, options = {}) {\n    const { x = indexOf, y = identity, stroke, fill = isNoneish(stroke) ? \"currentColor\" : stroke, ...remainingOptions } = options;\n    return new LinearRegressionY(data, maybeDenseIntervalX({ ...remainingOptions, x, y, fill, stroke }));\n}\nfunction linearRegressionF(I, X, Y) {\n    let sumX = 0, sumY = 0, sumXY = 0, sumX2 = 0;\n    for (const i of I) {\n        const xi = X[i];\n        const yi = Y[i];\n        sumX += xi;\n        sumY += yi;\n        sumXY += xi * yi;\n        sumX2 += xi * xi;\n    }\n    const n = I.length;\n    const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n    const intercept = (sumY - slope * sumX) / n;\n    return (x) => slope * x + intercept;\n}\nfunction confidenceIntervalF(I, X, Y, p, f) {\n    const mean = sum(I, (i) => X[i]) / I.length;\n    let a = 0, b = 0;\n    for (const i of I) {\n        a += (X[i] - mean) ** 2;\n        b += (Y[i] - f(X[i])) ** 2;\n    }\n    const sy = Math.sqrt(b / (I.length - 2));\n    const t = qt(p, I.length - 2);\n    return (x, k) => {\n        const Y = f(x);\n        const se = sy * Math.sqrt(1 / I.length + (x - mean) ** 2 / a);\n        return Y + k * t * se;\n    };\n}\n", "import { create } from \"../context.js\";\nimport { identity, indexOf, number } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { isCollapsed } from \"../scales.js\";\nimport { applyDirectStyles, applyIndirectStyles, applyTransform, impliedString, applyAttr, applyChannelStyles } from \"../style.js\";\nimport { maybeIdentityX, maybeIdentityY } from \"../transforms/identity.js\";\nimport { maybeTrivialIntervalX, maybeTrivialIntervalY } from \"../transforms/interval.js\";\nimport { maybeStackX, maybeStackY } from \"../transforms/stack.js\";\nconst defaults = {\n    ariaLabel: \"rect\"\n};\nexport class Rect extends Mark {\n    constructor(data, options = {}) {\n        const { x1, y1, x2, y2, inset = 0, insetTop = inset, insetRight = inset, insetBottom = inset, insetLeft = inset, rx, ry } = options;\n        super(data, {\n            x1: { value: x1, scale: \"x\", optional: true },\n            y1: { value: y1, scale: \"y\", optional: true },\n            x2: { value: x2, scale: \"x\", optional: true },\n            y2: { value: y2, scale: \"y\", optional: true }\n        }, options, defaults);\n        this.insetTop = number(insetTop);\n        this.insetRight = number(insetRight);\n        this.insetBottom = number(insetBottom);\n        this.insetLeft = number(insetLeft);\n        this.rx = impliedString(rx, \"auto\"); // number or percentage\n        this.ry = impliedString(ry, \"auto\");\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x, y } = scales;\n        const { x1: X1, y1: Y1, x2: X2, y2: Y2 } = channels;\n        const { marginTop, marginRight, marginBottom, marginLeft, width, height } = dimensions;\n        const { insetTop, insetRight, insetBottom, insetLeft, rx, ry } = this;\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, { x: X1 && X2 ? x : null, y: Y1 && Y2 ? y : null }, 0, 0)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"rect\")\n            .call(applyDirectStyles, this)\n            .attr(\"x\", X1 && X2 && !isCollapsed(x) ? (i) => Math.min(X1[i], X2[i]) + insetLeft : marginLeft + insetLeft)\n            .attr(\"y\", Y1 && Y2 && !isCollapsed(y) ? (i) => Math.min(Y1[i], Y2[i]) + insetTop : marginTop + insetTop)\n            .attr(\"width\", X1 && X2 && !isCollapsed(x)\n            ? (i) => Math.max(0, Math.abs(X2[i] - X1[i]) - insetLeft - insetRight)\n            : width - marginRight - marginLeft - insetRight - insetLeft)\n            .attr(\"height\", Y1 && Y2 && !isCollapsed(y)\n            ? (i) => Math.max(0, Math.abs(Y1[i] - Y2[i]) - insetTop - insetBottom)\n            : height - marginTop - marginBottom - insetTop - insetBottom)\n            .call(applyAttr, \"rx\", rx)\n            .call(applyAttr, \"ry\", ry)\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.rect(athletes, Plot.bin({fill: \"count\"}, {x: \"weight\", y: \"height\"}))\n * ```\n *\n * Returns a new rect with the given *data* and *options*.\n */\nexport function rect(data, options) {\n    return new Rect(data, maybeTrivialIntervalX(maybeTrivialIntervalY(options)));\n}\n/**\n * ```js\n * Plot.rectX(athletes, Plot.binY({x: \"count\"}, {y: \"weight\"}))\n * ```\n *\n * Equivalent to\n * [Plot.rect](https://github.com/observablehq/plot/blob/main/README.md#plotrectdata-options),\n * except that if neither the **x1** nor **x2** option is specified, the **x**\n * option may be specified as shorthand to apply an implicit [stackX\n * transform](https://github.com/observablehq/plot/blob/main/README.md#plotstackxstack-options);\n * this is the typical configuration for a histogram with rects aligned at *x* =\n * 0. If the **x** option is not specified, it defaults to the identity\n * function.\n */\nexport function rectX(data, options = { y: indexOf, interval: 1, x2: identity }) {\n    return new Rect(data, maybeStackX(maybeTrivialIntervalY(maybeIdentityX(options))));\n}\n/**\n * ```js\n * Plot.rectY(athletes, Plot.binX({y: \"count\"}, {x: \"weight\"}))\n * ```\n *\n * Equivalent to\n * [Plot.rect](https://github.com/observablehq/plot/blob/main/README.md#plotrectdata-options),\n * except that if neither the **y1** nor **y2** option is specified, the **y**\n * option may be specified as shorthand to apply an implicit [stackY\n * transform](https://github.com/observablehq/plot/blob/main/README.md#plotstackystack-options);\n * this is the typical configuration for a histogram with rects aligned at *y* =\n * 0. If the **y** option is not specified, it defaults to the identity\n * function.\n */\nexport function rectY(data, options = { x: indexOf, interval: 1, y2: identity }) {\n    return new Rect(data, maybeStackY(maybeTrivialIntervalX(maybeIdentityY(options))));\n}\n", "import { namespaces } from \"d3\";\nimport { create } from \"../context.js\";\nimport { nonempty } from \"../defined.js\";\nimport { formatDefault } from \"../format.js\";\nimport { indexOf, identity, string, maybeNumberChannel, maybeTuple, numberChannel, isNumeric, isTemporal, keyword, maybeFrameAnchor, isTextual, isIterable } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyChannelStyles, applyDirectStyles, applyIndirectStyles, applyAttr, applyTransform, impliedString, applyFrameAnchor } from \"../style.js\";\nimport { maybeIntervalMidX, maybeIntervalMidY } from \"../transforms/interval.js\";\nconst defaults = {\n    ariaLabel: \"text\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3,\n    paintOrder: \"stroke\"\n};\nexport class Text extends Mark {\n    constructor(data, options = {}) {\n        const { x, y, text = isIterable(data) && isTextual(data) ? identity : indexOf, frameAnchor, textAnchor = /right$/i.test(frameAnchor) ? \"end\" : /left$/i.test(frameAnchor) ? \"start\" : \"middle\", lineAnchor = /^top/i.test(frameAnchor) ? \"top\" : /^bottom/i.test(frameAnchor) ? \"bottom\" : \"middle\", lineHeight = 1, lineWidth = Infinity, monospace, fontFamily = monospace ? \"ui-monospace, monospace\" : undefined, fontSize, fontStyle, fontVariant, fontWeight, rotate } = options;\n        const [vrotate, crotate] = maybeNumberChannel(rotate, 0);\n        const [vfontSize, cfontSize] = maybeFontSizeChannel(fontSize);\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y: { value: y, scale: \"y\", optional: true },\n            fontSize: { value: vfontSize, optional: true },\n            rotate: { value: numberChannel(vrotate), optional: true },\n            text: { value: text, filter: nonempty }\n        }, options, defaults);\n        this.rotate = crotate;\n        this.textAnchor = impliedString(textAnchor, \"middle\");\n        this.lineAnchor = keyword(lineAnchor, \"lineAnchor\", [\"top\", \"middle\", \"bottom\"]);\n        this.lineHeight = +lineHeight;\n        this.lineWidth = +lineWidth;\n        this.monospace = !!monospace;\n        this.fontFamily = string(fontFamily);\n        this.fontSize = cfontSize;\n        this.fontStyle = string(fontStyle);\n        this.fontVariant = string(fontVariant);\n        this.fontWeight = string(fontWeight);\n        this.frameAnchor = maybeFrameAnchor(frameAnchor);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y, rotate: R, text: T, fontSize: FS } = channels;\n        const { rotate } = this;\n        const [cx, cy] = applyFrameAnchor(this, dimensions);\n        return create(\"svg:g\", context)\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyIndirectTextStyles, this, T, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"text\")\n            .call(applyDirectStyles, this)\n            .call(applyMultilineText, this, T)\n            .attr(\"transform\", R\n            ? X && Y\n                ? (i) => `translate(${X[i]},${Y[i]}) rotate(${R[i]})`\n                : X\n                    ? (i) => `translate(${X[i]},${cy}) rotate(${R[i]})`\n                    : Y\n                        ? (i) => `translate(${cx},${Y[i]}) rotate(${R[i]})`\n                        : (i) => `translate(${cx},${cy}) rotate(${R[i]})`\n            : rotate\n                ? X && Y\n                    ? (i) => `translate(${X[i]},${Y[i]}) rotate(${rotate})`\n                    : X\n                        ? (i) => `translate(${X[i]},${cy}) rotate(${rotate})`\n                        : Y\n                            ? (i) => `translate(${cx},${Y[i]}) rotate(${rotate})`\n                            : `translate(${cx},${cy}) rotate(${rotate})`\n                : X && Y\n                    ? (i) => `translate(${X[i]},${Y[i]})`\n                    : X\n                        ? (i) => `translate(${X[i]},${cy})`\n                        : Y\n                            ? (i) => `translate(${cx},${Y[i]})`\n                            : `translate(${cx},${cy})`)\n            .call(applyAttr, \"font-size\", FS && ((i) => FS[i]))\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\nfunction applyMultilineText(selection, { monospace, lineAnchor, lineHeight, lineWidth }, T) {\n    if (!T)\n        return;\n    const linesof = isFinite(lineWidth)\n        ? monospace\n            ? (t) => lineWrap(t, lineWidth, monospaceWidth)\n            : (t) => lineWrap(t, lineWidth * 100, defaultWidth)\n        : (t) => t.split(/\\r\\n?|\\n/g);\n    selection.each(function (i) {\n        const lines = linesof(formatDefault(T[i]));\n        const n = lines.length;\n        const y = lineAnchor === \"top\" ? 0.71 : lineAnchor === \"bottom\" ? 1 - n : (164 - n * 100) / 200;\n        if (n > 1) {\n            for (let i = 0; i < n; ++i) {\n                if (!lines[i])\n                    continue;\n                const tspan = this.ownerDocument.createElementNS(namespaces.svg, \"tspan\");\n                tspan.setAttribute(\"x\", 0);\n                tspan.setAttribute(\"y\", `${(y + i) * lineHeight}em`);\n                tspan.textContent = lines[i];\n                this.appendChild(tspan);\n            }\n        }\n        else {\n            if (y)\n                this.setAttribute(\"y\", `${y * lineHeight}em`);\n            this.textContent = lines[0];\n        }\n    });\n}\n/**\n * Returns a new text mark with the given *data* and *options*. If neither the\n * **x** nor **y** nor **frameAnchor** options are specified, *data* is assumed\n * to be an array of pairs [[*x\u2080*, *y\u2080*], [*x\u2081*, *y\u2081*], [*x\u2082*, *y\u2082*], \u2026] such\n * that **x** = [*x\u2080*, *x\u2081*, *x\u2082*, \u2026] and **y** = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n */\nexport function text(data, options = {}) {\n    let { x, y, ...remainingOptions } = options;\n    if (options.frameAnchor === undefined)\n        [x, y] = maybeTuple(x, y);\n    return new Text(data, { ...remainingOptions, x, y });\n}\n/**\n * Equivalent to\n * [Plot.text](https://github.com/observablehq/plot/blob/main/README.md#plottextdata-options),\n * except **x** defaults to the identity function and assumes that *data* =\n * [*x\u2080*, *x\u2081*, *x\u2082*, \u2026].\n *\n * If an **interval** is specified, such as d3.utcDay, **y** is transformed to\n * (*interval*.floor(*y*) + *interval*.offset(*interval*.floor(*y*))) / 2. If\n * the interval is specified as a number *n*, *y* will be the midpoint of two\n * consecutive multiples of *n* that bracket *y*.\n */\nexport function textX(data, options = {}) {\n    const { x = identity, ...remainingOptions } = options;\n    return new Text(data, maybeIntervalMidY({ ...remainingOptions, x }));\n}\n/**\n * Equivalent to\n * [Plot.text](https://github.com/observablehq/plot/blob/main/README.md#plottextdata-options),\n * except **y** defaults to the identity function and assumes that *data* =\n * [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n *\n * If an **interval** is specified, such as d3.utcDay, **x** is transformed to\n * (*interval*.floor(*x*) + *interval*.offset(*interval*.floor(*x*))) / 2. If\n * the interval is specified as a number *n*, *x* will be the midpoint of two\n * consecutive multiples of *n* that bracket *x*.\n */\nexport function textY(data, options = {}) {\n    const { y = identity, ...remainingOptions } = options;\n    return new Text(data, maybeIntervalMidX({ ...remainingOptions, y }));\n}\nfunction applyIndirectTextStyles(selection, mark, T) {\n    applyAttr(selection, \"text-anchor\", mark.textAnchor);\n    applyAttr(selection, \"font-family\", mark.fontFamily);\n    applyAttr(selection, \"font-size\", mark.fontSize);\n    applyAttr(selection, \"font-style\", mark.fontStyle);\n    applyAttr(selection, \"font-variant\", mark.fontVariant === undefined && (isNumeric(T) || isTemporal(T)) ? \"tabular-nums\" : mark.fontVariant);\n    applyAttr(selection, \"font-weight\", mark.fontWeight);\n}\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-size\nconst fontSizes = new Set([\n    // global keywords\n    \"inherit\",\n    \"initial\",\n    \"revert\",\n    \"unset\",\n    // absolute keywords\n    \"xx-small\",\n    \"x-small\",\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"x-large\",\n    \"xx-large\",\n    \"xxx-large\",\n    // relative keywords\n    \"larger\",\n    \"smaller\"\n]);\n// The font size may be expressed as a constant in the following forms:\n// - number in pixels\n// - string keyword: see above\n// - string <length>: e.g., \"12px\"\n// - string <percentage>: e.g., \"80%\"\n// Anything else is assumed to be a channel definition.\nfunction maybeFontSizeChannel(fontSize) {\n    if (fontSize == null || typeof fontSize === \"number\")\n        return [undefined, fontSize];\n    if (typeof fontSize !== \"string\")\n        return [fontSize, undefined];\n    fontSize = fontSize.trim().toLowerCase();\n    return fontSizes.has(fontSize) || /^[+-]?\\d*\\.?\\d+(e[+-]?\\d+)?(\\w*|%)$/.test(fontSize)\n        ? [undefined, fontSize]\n        : [fontSize, undefined];\n}\n// This is a greedy algorithm for line wrapping. It would be better to use the\n// Knuth\u2013Plass line breaking algorithm (but that would be much more complex).\n// https://en.wikipedia.org/wiki/Line_wrap_and_word_wrap\nfunction lineWrap(input, maxWidth, widthof = (_, i, j) => j - i) {\n    const lines = [];\n    let lineStart, lineEnd = 0;\n    for (const [wordStart, wordEnd, required] of lineBreaks(input)) {\n        // Record the start of a line. This isn\u2019t the same as the previous line\u2019s\n        // end because we often skip spaces between lines.\n        if (lineStart === undefined)\n            lineStart = wordStart;\n        // If the current line is not empty, and if adding the current word would\n        // make the line longer than the allowed width, then break the line at the\n        // previous word end.\n        if (lineEnd > lineStart && widthof(input, lineStart, wordEnd) > maxWidth) {\n            lines.push(input.slice(lineStart, lineEnd));\n            lineStart = wordStart;\n        }\n        // If this is a required break (a newline), emit the line and reset.\n        if (required) {\n            lines.push(input.slice(lineStart, wordEnd));\n            lineStart = undefined;\n            continue;\n        }\n        // Extend the current line to include the new word.\n        lineEnd = wordEnd;\n    }\n    return lines;\n}\n// This is a rudimentary (and U.S.-centric) algorithm for finding opportunities\n// to break lines between words. A better and far more comprehensive approach\n// would be to use the official Unicode Line Breaking Algorithm.\n// https://unicode.org/reports/tr14/\nfunction* lineBreaks(input) {\n    let i = 0, j = 0;\n    const n = input.length;\n    while (j < n) {\n        let k = 1;\n        switch (input[j]) {\n            case \"-\": // hyphen\n                ++j;\n                yield [i, j, false];\n                i = j;\n                break;\n            case \" \":\n                yield [i, j, false];\n                while (input[++j] === \" \")\n                    ; // skip multiple spaces\n                i = j;\n                break;\n            case \"\\r\":\n                if (input[j + 1] === \"\\n\")\n                    ++k; // falls through\n            case \"\\n\":\n                yield [i, j, true];\n                j += k;\n                i = j;\n                break;\n            default:\n                ++j;\n                break;\n        }\n    }\n    yield [i, j, true];\n}\n// Computed as round(measureText(text).width * 10) at 10px system-ui. For\n// characters that are not represented in this map, we\u2019d ideally want to use a\n// weighted average of what we expect to see. But since we don\u2019t really know\n// what that is, using \u201Ce\u201D seems reasonable.\nconst defaultWidthMap = {\n    a: 56,\n    b: 63,\n    c: 57,\n    d: 63,\n    e: 58,\n    f: 37,\n    g: 62,\n    h: 60,\n    i: 26,\n    j: 26,\n    k: 55,\n    l: 26,\n    m: 88,\n    n: 60,\n    o: 60,\n    p: 62,\n    q: 62,\n    r: 39,\n    s: 54,\n    t: 38,\n    u: 60,\n    v: 55,\n    w: 79,\n    x: 54,\n    y: 55,\n    z: 55,\n    A: 69,\n    B: 67,\n    C: 73,\n    D: 74,\n    E: 61,\n    F: 58,\n    G: 76,\n    H: 75,\n    I: 28,\n    J: 55,\n    K: 67,\n    L: 58,\n    M: 89,\n    N: 75,\n    O: 78,\n    P: 65,\n    Q: 78,\n    R: 67,\n    S: 65,\n    T: 65,\n    U: 75,\n    V: 69,\n    W: 98,\n    X: 69,\n    Y: 67,\n    Z: 67,\n    0: 64,\n    1: 48,\n    2: 62,\n    3: 64,\n    4: 66,\n    5: 63,\n    6: 65,\n    7: 58,\n    8: 65,\n    9: 65,\n    \" \": 29,\n    \"!\": 32,\n    '\"': 49,\n    \"'\": 31,\n    \"(\": 39,\n    \")\": 39,\n    \",\": 31,\n    \"-\": 48,\n    \".\": 31,\n    \"/\": 32,\n    \":\": 31,\n    \";\": 31,\n    \"?\": 52,\n    \"\u2018\": 31,\n    \"\u2019\": 31,\n    \"\u201C\": 47,\n    \"\u201D\": 47\n};\n// This is a rudimentary (and U.S.-centric) algorithm for measuring the width of\n// a string based on a technique of Gregor Aisch; it assumes that individual\n// characters are laid out independently and does not implement the Unicode\n// grapheme cluster breaking algorithm. It does understand code points, though,\n// and so treats things like emoji as having the width of a lowercase e (and\n// should be equivalent to using for-of to iterate over code points, while also\n// being fast). TODO Optimize this by noting that we often re-measure characters\n// that were previously measured?\n// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries\n// https://exploringjs.com/impatient-js/ch_strings.html#atoms-of-text\nfunction defaultWidth(text, start, end) {\n    let sum = 0;\n    for (let i = start; i < end; ++i) {\n        sum += defaultWidthMap[text[i]] || defaultWidthMap.e;\n        const first = text.charCodeAt(i);\n        if (first >= 0xd800 && first <= 0xdbff) {\n            // high surrogate\n            const second = text.charCodeAt(i + 1);\n            if (second >= 0xdc00 && second <= 0xdfff) {\n                // low surrogate\n                ++i; // surrogate pair\n            }\n        }\n    }\n    return sum;\n}\nfunction monospaceWidth(text, start, end) {\n    return end - start;\n}\n", "import { stratify, tree } from \"d3\";\nimport { ascendingDefined } from \"../defined.js\";\nimport { column, identity, isObject, one, valueof } from \"../options.js\";\nimport { basic } from \"./basic.js\";\n/**\n * Based on the tree options described above, populates the **x** and **y**\n * channels with the positions for each node. The following defaults are also\n * applied: the default **frameAnchor** inherits the **treeAnchor**. This\n * transform is intended to be used with\n * [dot](https://github.com/observablehq/plot/blob/main/README.md#dot),\n * [text](https://github.com/observablehq/plot/blob/main/README.md#text), and\n * other point-based marks. This transform is rarely used directly; see the\n * [Plot.tree compound\n * mark](https://github.com/observablehq/plot/blob/main/README.md#plottreedata-options).\n *\n * The treeNode transform will derive output columns for any *options* that have\n * one of the following named node values:\n *\n * * *node:name* - the node\u2019s name (the last part of its path)\n * * *node:path* - the node\u2019s full, normalized, slash-separated path\n * * *node:internal* - true if the node is internal, or false for leaves\n * * *node:depth* - the distance from the node to the root\n * * *node:height* - the distance from the node to its deepest descendant\n *\n * In addition, if any option value is specified as an object with a **node**\n * method, a derived output column will be generated by invoking the **node**\n * method for each node in the tree.\n */\nexport function treeNode(options = {}) {\n    let { path = identity, // the delimited path\n    delimiter, // how the path is separated\n    frameAnchor, treeLayout = tree, treeSort, treeSeparation, treeAnchor, ...remainingOptions } = options;\n    treeAnchor = maybeTreeAnchor(treeAnchor);\n    treeSort = maybeTreeSort(treeSort);\n    if (frameAnchor === undefined)\n        frameAnchor = treeAnchor.frameAnchor;\n    const normalize = normalizer(delimiter);\n    const outputs = treeOutputs(remainingOptions, maybeNodeValue);\n    const [X, setX] = column();\n    const [Y, setY] = column();\n    return {\n        x: X,\n        y: Y,\n        frameAnchor,\n        ...basic(remainingOptions, (data, facets) => {\n            const P = normalize(valueof(data, path));\n            const X = setX([]);\n            const Y = setY([]);\n            let treeIndex = -1;\n            const treeData = [];\n            const treeFacets = [];\n            const rootof = stratify().path((i) => P[i]);\n            const layout = treeLayout();\n            if (layout.nodeSize)\n                layout.nodeSize([1, 1]);\n            if (layout.separation && treeSeparation !== undefined)\n                layout.separation(treeSeparation ?? one);\n            for (const o of outputs)\n                o[output_values] = o[output_setValues]([]);\n            for (const facet of facets) {\n                const treeFacet = [];\n                const root = rootof(facet.filter((i) => P[i] != null)).each((node) => (node.data = data[node.data]));\n                if (treeSort != null)\n                    root.sort(treeSort);\n                layout(root);\n                for (const node of root.descendants()) {\n                    treeFacet.push(++treeIndex);\n                    treeData[treeIndex] = node.data;\n                    treeAnchor.position(node, treeIndex, X, Y);\n                    for (const o of outputs)\n                        o[output_values][treeIndex] = o[output_evaluate](node);\n                }\n                treeFacets.push(treeFacet);\n            }\n            return { data: treeData, facets: treeFacets };\n        }),\n        ...Object.fromEntries(outputs)\n    };\n}\n/**\n * Based on the tree options described above, populates the **x1**, **y1**,\n * **x2**, and **y2** channels. The following defaults are also applied: the\n * default **curve** is *bump-x*, the default **stroke** is #555, the default\n * **strokeWidth** is 1.5, and the default **strokeOpacity** is 0.5. This\n * transform is intended to be used with\n * [link](https://github.com/observablehq/plot/blob/main/README.md#link),\n * [arrow](https://github.com/observablehq/plot/blob/main/README.md#arrow), and\n * other two-point-based marks. This transform is rarely used directly; see the\n * [Plot.tree compound\n * mark](https://github.com/observablehq/plot/blob/main/README.md#plottreedata-options).\n *\n * The treeLink transform will derive output columns for any *options* that have\n * one of the following named link values:\n *\n * * *node:name* - the child node\u2019s name (the last part of its path)\n * * *node:path* - the child node\u2019s full, normalized, slash-separated path\n * * *node:internal* - true if the child node is internal, or false for leaves\n * * *node:depth* - the distance from the child node to the root\n * * *node:height* - the distance from the child node to its deepest descendant\n * * *parent:name* - the parent node\u2019s name (the last part of its path)\n * * *parent:path* - the parent node\u2019s full, normalized, slash-separated path\n * * *parent:depth* - the distance from the parent node to the root\n * * *parent:height* - the distance from the parent node to its deepest\n *   descendant\n *\n * In addition, if any option value is specified as an object with a **node**\n * method, a derived output column will be generated by invoking the **node**\n * method for each child node in the tree; likewise if any option value is\n * specified as an object with a **link** method, a derived output column will\n * be generated by invoking the **link** method for each link in the tree, being\n * passed two node arguments, the child and the parent.\n */\nexport function treeLink(options = {}) {\n    let { path = identity, // the delimited path\n    delimiter, // how the path is separated\n    curve = \"bump-x\", stroke = \"#555\", strokeWidth = 1.5, strokeOpacity = 0.5, treeLayout = tree, treeSort, treeSeparation, treeAnchor, ...remainingOptions } = options;\n    treeAnchor = maybeTreeAnchor(treeAnchor);\n    treeSort = maybeTreeSort(treeSort);\n    remainingOptions = { curve, stroke, strokeWidth, strokeOpacity, ...remainingOptions };\n    const normalize = normalizer(delimiter);\n    const outputs = treeOutputs(remainingOptions, maybeLinkValue);\n    const [X1, setX1] = column();\n    const [X2, setX2] = column();\n    const [Y1, setY1] = column();\n    const [Y2, setY2] = column();\n    return {\n        x1: X1,\n        x2: X2,\n        y1: Y1,\n        y2: Y2,\n        ...basic(remainingOptions, (data, facets) => {\n            const P = normalize(valueof(data, path));\n            const X1 = setX1([]);\n            const X2 = setX2([]);\n            const Y1 = setY1([]);\n            const Y2 = setY2([]);\n            let treeIndex = -1;\n            const treeData = [];\n            const treeFacets = [];\n            const rootof = stratify().path((i) => P[i]);\n            const layout = treeLayout();\n            if (layout.nodeSize)\n                layout.nodeSize([1, 1]);\n            if (layout.separation && treeSeparation !== undefined)\n                layout.separation(treeSeparation ?? one);\n            for (const o of outputs)\n                o[output_values] = o[output_setValues]([]);\n            for (const facet of facets) {\n                const treeFacet = [];\n                const root = rootof(facet.filter((i) => P[i] != null)).each((node) => (node.data = data[node.data]));\n                if (treeSort != null)\n                    root.sort(treeSort);\n                layout(root);\n                for (const { source, target } of root.links()) {\n                    treeFacet.push(++treeIndex);\n                    treeData[treeIndex] = target.data;\n                    treeAnchor.position(source, treeIndex, X1, Y1);\n                    treeAnchor.position(target, treeIndex, X2, Y2);\n                    for (const o of outputs)\n                        o[output_values][treeIndex] = o[output_evaluate](target, source);\n                }\n                treeFacets.push(treeFacet);\n            }\n            return { data: treeData, facets: treeFacets };\n        }),\n        ...Object.fromEntries(outputs)\n    };\n}\nexport function maybeTreeAnchor(anchor = \"left\") {\n    switch (`${anchor}`.trim().toLowerCase()) {\n        case \"left\":\n            return treeAnchorLeft;\n        case \"right\":\n            return treeAnchorRight;\n    }\n    throw new Error(`invalid tree anchor: ${anchor}`);\n}\nconst treeAnchorLeft = {\n    frameAnchor: \"left\",\n    dx: 6,\n    position({ x, y }, i, X, Y) {\n        X[i] = y;\n        Y[i] = -x;\n    }\n};\nconst treeAnchorRight = {\n    frameAnchor: \"right\",\n    dx: -6,\n    position({ x, y }, i, X, Y) {\n        X[i] = -y;\n        Y[i] = -x;\n    }\n};\nfunction maybeTreeSort(sort) {\n    return sort == null || typeof sort === \"function\"\n        ? sort\n        : `${sort}`.trim().toLowerCase().startsWith(\"node:\")\n            ? nodeSort(maybeNodeValue(sort))\n            : nodeSort(nodeData(sort));\n}\nfunction nodeSort(value) {\n    return (a, b) => ascendingDefined(value(a), value(b));\n}\nfunction nodeData(field) {\n    return (node) => node.data?.[field];\n}\nfunction normalizer(delimiter = \"/\") {\n    return `${delimiter}` === \"/\"\n        ? (P) => P // paths are already slash-separated\n        : (P) => P.map(replaceAll(delimiter, \"/\")); // TODO string.replaceAll when supported\n}\nfunction replaceAll(search, replace) {\n    search = new RegExp(regexEscape(search), \"g\");\n    return (value) => (value == null ? null : `${value}`.replace(search, replace));\n}\nfunction regexEscape(string) {\n    return `${string}`.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nfunction isNodeValue(option) {\n    return isObject(option) && typeof option.node === \"function\";\n}\nfunction isLinkValue(option) {\n    return isObject(option) && typeof option.link === \"function\";\n}\nfunction maybeNodeValue(value) {\n    if (isNodeValue(value))\n        return value.node;\n    value = `${value}`.trim().toLowerCase();\n    if (!value.startsWith(\"node:\"))\n        return;\n    switch (value) {\n        case \"node:name\":\n            return nodeName;\n        case \"node:path\":\n            return nodePath;\n        case \"node:internal\":\n            return nodeInternal;\n        case \"node:depth\":\n            return nodeDepth;\n        case \"node:height\":\n            return nodeHeight;\n    }\n    throw new Error(`invalid node value: ${value}`);\n}\nfunction maybeLinkValue(value) {\n    if (isNodeValue(value))\n        return value.node;\n    if (isLinkValue(value))\n        return value.link;\n    value = `${value}`.trim().toLowerCase();\n    if (!value.startsWith(\"node:\") && !value.startsWith(\"parent:\"))\n        return;\n    switch (value) {\n        case \"parent:name\":\n            return parentValue(nodeName);\n        case \"parent:path\":\n            return parentValue(nodePath);\n        case \"parent:depth\":\n            return parentValue(nodeDepth);\n        case \"parent:height\":\n            return parentValue(nodeHeight);\n        case \"node:name\":\n            return nodeName;\n        case \"node:path\":\n            return nodePath;\n        case \"node:internal\":\n            return nodeInternal;\n        case \"node:depth\":\n            return nodeDepth;\n        case \"node:height\":\n            return nodeHeight;\n    }\n    throw new Error(`invalid link value: ${value}`);\n}\nfunction nodePath(node) {\n    return node.id;\n}\nfunction nodeName(node) {\n    return nameof(node.id);\n}\nfunction nodeDepth(node) {\n    return node.depth;\n}\nfunction nodeHeight(node) {\n    return node.height;\n}\nfunction nodeInternal(node) {\n    return !!node.children;\n}\nfunction parentValue(evaluate) {\n    return (child, parent) => (parent == null ? undefined : evaluate(parent));\n}\n// Walk backwards to find the first slash.\nfunction nameof(path) {\n    let i = path.length;\n    while (--i > 0)\n        if (slash(path, i))\n            break;\n    return path.slice(i + 1);\n}\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\n// count the number of preceding backslashes escaping the forward slash: an odd\n// number indicates an escaped forward slash.\nfunction slash(path, i) {\n    if (path[i] === \"/\") {\n        let k = 0;\n        while (i > 0 && path[--i] === \"\\\\\")\n            ++k;\n        if ((k & 1) === 0)\n            return true;\n    }\n    return false;\n}\n// These indexes match the array returned by nodeOutputs. The first two elements\n// are always the name of the output and its column value definition so that\n// the outputs can be passed directly to Object.fromEntries.\nconst output_setValues = 2;\nconst output_evaluate = 3;\nconst output_values = 4;\nfunction treeOutputs(options, maybeTreeValue) {\n    const outputs = [];\n    for (const name in options) {\n        const value = options[name];\n        const treeValue = maybeTreeValue(value);\n        if (treeValue !== undefined) {\n            outputs.push([name, ...column(value), treeValue]);\n        }\n    }\n    return outputs;\n}\n", "import { cluster as Cluster } from \"d3\";\nimport { isNoneish } from \"../options.js\";\nimport { marks } from \"../plot.js\";\nimport { maybeTreeAnchor, treeLink, treeNode } from \"../transforms/tree.js\";\nimport { dot } from \"./dot.js\";\nimport { link } from \"./link.js\";\nimport { text } from \"./text.js\";\n/**\n * A convenience compound mark for rendering a tree diagram, including a\n * [link](https://github.com/observablehq/plot/blob/main/README.md#link) to\n * render links from parent to child, an optional\n * [dot](https://github.com/observablehq/plot/blob/main/README.md#dot) for\n * nodes, and a\n * [text](https://github.com/observablehq/plot/blob/main/README.md#text) for\n * node labels. The link mark uses the [treeLink\n * transform](https://github.com/observablehq/plot/blob/main/README.md#plottreelinkoptions),\n * while the dot and text marks use the [treeNode\n * transform](https://github.com/observablehq/plot/blob/main/README.md#plottreenodeoptions).\n * The following options are supported:\n *\n * * **fill** - the dot and text fill color; defaults to *node:internal*\n * * **stroke** - the link stroke color; inherits **fill** by default\n * * **strokeWidth** - the link stroke width\n * * **strokeOpacity** - the link stroke opacity\n * * **strokeLinejoin** - the link stroke linejoin\n * * **strokeLinecap** - the link stroke linecap\n * * **strokeMiterlimit** - the link stroke miter limit\n * * **strokeDasharray** - the link stroke dash array\n * * **strokeDashoffset** - the link stroke dash offset\n * * **marker** - the link start and end marker\n * * **markerStart** - the link start marker\n * * **markerEnd** - the link end marker\n * * **dot** - if true, whether to render a dot; defaults to false if no link\n *   marker\n * * **title** - the text and dot title; defaults to *node:path*\n * * **text** - the text label; defaults to *node:name*\n * * **textStroke** - the text stroke; defaults to *white*\n * * **dx** - the text horizontal offset; defaults to 6 if left-anchored, or -6\n *   if right-anchored\n * * **dy** - the text vertical offset; defaults to 0\n *\n * Any additional *options* are passed through to the constituent link, dot, and\n * text marks and their corresponding treeLink or treeNode transform.\n */\nexport function tree(data, options = {}) {\n    let { fill, stroke, strokeWidth, strokeOpacity, strokeLinejoin, strokeLinecap, strokeMiterlimit, strokeDasharray, strokeDashoffset, marker, markerStart = marker, markerEnd = marker, dot: dotDot = isNoneish(markerStart) && isNoneish(markerEnd), text: textText = \"node:name\", textStroke = \"white\", title = \"node:path\", dx, dy, ...remainingOptions } = options;\n    if (dx === undefined)\n        dx = maybeTreeAnchor(remainingOptions.treeAnchor).dx;\n    return marks(link(data, treeLink({\n        markerStart,\n        markerEnd,\n        stroke: stroke !== undefined ? stroke : fill === undefined ? \"node:internal\" : fill,\n        strokeWidth,\n        strokeOpacity,\n        strokeLinejoin,\n        strokeLinecap,\n        strokeMiterlimit,\n        strokeDasharray,\n        strokeDashoffset,\n        ...remainingOptions\n    })), dotDot\n        ? dot(data, treeNode({ fill: fill === undefined ? \"node:internal\" : fill, title, ...remainingOptions }))\n        : null, textText != null\n        ? text(data, treeNode({\n            text: textText,\n            fill: fill === undefined ? \"currentColor\" : fill,\n            stroke: textStroke,\n            dx,\n            dy,\n            title,\n            ...remainingOptions\n        }))\n        : null);\n}\n/**\n * Like\n * [Plot.tree](https://github.com/observablehq/plot/blob/main/README.md#plottreedata-options),\n * except sets the **treeLayout** option to D3\u2019s cluster (dendrogram) algorithm,\n * which aligns leaf nodes.\n */\nexport function cluster(data, options) {\n    return tree(data, { ...options, treeLayout: Cluster });\n}\n", "import { create } from \"../context.js\";\nimport { radians } from \"../math.js\";\nimport { maybeFrameAnchor, maybeNumberChannel, maybeTuple, keyword, identity } from \"../options.js\";\nimport { Mark } from \"../plot.js\";\nimport { applyChannelStyles, applyDirectStyles, applyFrameAnchor, applyIndirectStyles, applyTransform } from \"../style.js\";\nconst defaults = {\n    ariaLabel: \"vector\",\n    fill: null,\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\"\n};\nexport class Vector extends Mark {\n    constructor(data, options = {}) {\n        const { x, y, length, rotate, anchor = \"middle\", frameAnchor } = options;\n        const [vl, cl] = maybeNumberChannel(length, 12);\n        const [vr, cr] = maybeNumberChannel(rotate, 0);\n        super(data, {\n            x: { value: x, scale: \"x\", optional: true },\n            y: { value: y, scale: \"y\", optional: true },\n            length: { value: vl, scale: \"length\", optional: true },\n            rotate: { value: vr, optional: true }\n        }, options, defaults);\n        this.length = cl;\n        this.rotate = cr;\n        this.anchor = keyword(anchor, \"anchor\", [\"start\", \"middle\", \"end\"]);\n        this.frameAnchor = maybeFrameAnchor(frameAnchor);\n    }\n    render(index, scales, channels, dimensions, context) {\n        const { x: X, y: Y, length: L, rotate: R } = channels;\n        const { length, rotate, anchor } = this;\n        const [cx, cy] = applyFrameAnchor(this, dimensions);\n        const fl = L ? (i) => L[i] : () => length;\n        const fr = R ? (i) => R[i] : () => rotate;\n        const fx = X ? (i) => X[i] : () => cx;\n        const fy = Y ? (i) => Y[i] : () => cy;\n        const k = anchor === \"start\" ? 0 : anchor === \"end\" ? 1 : 0.5;\n        return create(\"svg:g\", context)\n            .attr(\"fill\", \"none\")\n            .call(applyIndirectStyles, this, scales, dimensions)\n            .call(applyTransform, this, scales)\n            .call((g) => g\n            .selectAll()\n            .data(index)\n            .enter()\n            .append(\"path\")\n            .call(applyDirectStyles, this)\n            .attr(\"d\", (i) => {\n            const l = fl(i), a = fr(i) * radians;\n            const x = Math.sin(a) * l, y = -Math.cos(a) * l;\n            const d = (x + y) / 5, e = (x - y) / 5;\n            return `M${fx(i) - x * k},${fy(i) - y * k}l${x},${y}m${-e},${-d}l${e},${d}l${-d},${e}`;\n        })\n            .call(applyChannelStyles, this, channels))\n            .node();\n    }\n}\n/**\n * ```js\n * Plot.vector(wind, {x: \"longitude\", y: \"latitude\", length: \"speed\", rotate: \"direction\"})\n * ```\n *\n * Returns a new vector with the given *data* and *options*. If neither the\n * **x** nor **y** options are specified, *data* is assumed to be an array of\n * pairs [[*x\u2080*, *y\u2080*], [*x\u2081*, *y\u2081*], [*x\u2082*, *y\u2082*], \u2026] such that **x** = [*x\u2080*,\n * *x\u2081*, *x\u2082*, \u2026] and **y** = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n */\nexport function vector(data, options = {}) {\n    let { x, y, ...remainingOptions } = options;\n    if (options.frameAnchor === undefined)\n        [x, y] = maybeTuple(x, y);\n    return new Vector(data, { ...remainingOptions, x, y });\n}\n/**\n * Equivalent to\n * [Plot.vector](https://github.com/observablehq/plot/blob/main/README.md#plotvectordata-options)\n * except that if the **x** option is not specified, it defaults to the identity\n * function and assumes that *data* = [*x\u2080*, *x\u2081*, *x\u2082*, \u2026].\n */\nexport function vectorX(data, options = {}) {\n    const { x = identity, ...remainingOptions } = options;\n    return new Vector(data, { ...remainingOptions, x });\n}\n/**\n * Equivalent to\n * [Plot.vector](https://github.com/observablehq/plot/blob/main/README.md#plotvectordata-options)\n * except that if the **y** option is not specified, it defaults to the identity\n * function and assumes that *data* = [*y\u2080*, *y\u2081*, *y\u2082*, \u2026].\n */\nexport function vectorY(data, options = {}) {\n    const { y = identity, ...remainingOptions } = options;\n    return new Vector(data, { ...remainingOptions, y });\n}\n", "import IntervalTree from \"interval-tree-1d\";\nimport { finite, positive } from \"../defined.js\";\nimport { identity, maybeNamed, number, valueof } from \"../options.js\";\nimport { coerceNumbers } from \"../scales.js\";\nimport { initializer } from \"./basic.js\";\nconst anchorXLeft = ({ marginLeft }) => [1, marginLeft];\nconst anchorXRight = ({ width, marginRight }) => [-1, width - marginRight];\nconst anchorXMiddle = ({ width, marginLeft, marginRight }) => [0, (marginLeft + width - marginRight) / 2];\nconst anchorYTop = ({ marginTop }) => [1, marginTop];\nconst anchorYBottom = ({ height, marginBottom }) => [-1, height - marginBottom];\nconst anchorYMiddle = ({ height, marginTop, marginBottom }) => [0, (marginTop + height - marginBottom) / 2];\nfunction maybeAnchor(anchor) {\n    return typeof anchor === \"string\" ? { anchor } : anchor;\n}\n/**\n * ```js\n * Plot.dodgeX({y: \"value\"})\n * ```\n *\n * Equivalent to Plot.dodgeY, but piling horizontally, creating a new *x*\n * position channel that avoids overlapping. The *y* position channel is\n * unchanged.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#dodge\n */\nexport function dodgeX(dodgeOptions = {}, options = {}) {\n    if (arguments.length === 1)\n        [dodgeOptions, options] = mergeOptions(dodgeOptions);\n    let { anchor = \"left\", padding = 1 } = maybeAnchor(dodgeOptions);\n    switch (`${anchor}`.toLowerCase()) {\n        case \"left\":\n            anchor = anchorXLeft;\n            break;\n        case \"right\":\n            anchor = anchorXRight;\n            break;\n        case \"middle\":\n            anchor = anchorXMiddle;\n            break;\n        default:\n            throw new Error(`unknown dodge anchor: ${anchor}`);\n    }\n    return dodge(\"x\", \"y\", anchor, number(padding), options);\n}\n/**\n * ```js\n * Plot.dodgeY({x: \"date\"})\n * ```\n *\n * Given marks arranged along the *x* axis, the dodgeY transform piles them\n * vertically by defining a *y* position channel that avoids overlapping. The\n * *x* position channel is unchanged.\n *\n * @link https://github.com/observablehq/plot/blob/main/README.md#dodge\n */\nexport function dodgeY(dodgeOptions = {}, options = {}) {\n    if (arguments.length === 1)\n        [dodgeOptions, options] = mergeOptions(dodgeOptions);\n    let { anchor = \"bottom\", padding = 1 } = maybeAnchor(dodgeOptions);\n    switch (`${anchor}`.toLowerCase()) {\n        case \"top\":\n            anchor = anchorYTop;\n            break;\n        case \"bottom\":\n            anchor = anchorYBottom;\n            break;\n        case \"middle\":\n            anchor = anchorYMiddle;\n            break;\n        default:\n            throw new Error(`unknown dodge anchor: ${anchor}`);\n    }\n    return dodge(\"y\", \"x\", anchor, number(padding), options);\n}\nfunction mergeOptions(options) {\n    const { anchor, padding, ...rest } = options;\n    return [{ anchor, padding }, rest];\n}\nfunction dodge(y, x, anchor, padding, options) {\n    const { r } = options;\n    if (r != null && typeof r !== \"number\") {\n        const { channels, sort, reverse } = options;\n        options = { ...options, channels: { r: { value: r, scale: \"r\" }, ...maybeNamed(channels) } };\n        if (sort === undefined && reverse === undefined)\n            options.sort = { channel: \"r\", order: \"descending\" };\n    }\n    return initializer(options, function (data, facets, { [x]: X, r: R }, scales, dimensions) {\n        if (!X)\n            throw new Error(`missing channel: ${x}`);\n        X = coerceNumbers(valueof(X.value, scales[X.scale] || identity));\n        const r = R ? undefined : this.r !== undefined ? this.r : options.r !== undefined ? number(options.r) : 3;\n        if (R)\n            R = coerceNumbers(valueof(R.value, scales[R.scale] || identity));\n        let [ky, ty] = anchor(dimensions);\n        const compare = ky ? compareAscending : compareSymmetric;\n        const Y = new Float64Array(X.length);\n        const radius = R ? (i) => R[i] : () => r;\n        for (let I of facets) {\n            const tree = IntervalTree();\n            I = I.filter(R ? (i) => finite(X[i]) && positive(R[i]) : (i) => finite(X[i]));\n            const intervals = new Float64Array(2 * I.length + 2);\n            for (const i of I) {\n                const ri = radius(i);\n                const y0 = ky ? ri + padding : 0; // offset baseline for varying radius\n                const l = X[i] - ri;\n                const h = X[i] + ri;\n                // The first two positions are 0 to test placing the dot on the baseline.\n                let k = 2;\n                // For any previously placed circles that may overlap this circle, compute\n                // the y-positions that place this circle tangent to these other circles.\n                // https://observablehq.com/@mbostock/circle-offset-along-line\n                tree.queryInterval(l - padding, h + padding, ([, , j]) => {\n                    const yj = Y[j] - y0;\n                    const dx = X[i] - X[j];\n                    const dr = padding + (R ? R[i] + R[j] : 2 * r);\n                    const dy = Math.sqrt(dr * dr - dx * dx);\n                    intervals[k++] = yj - dy;\n                    intervals[k++] = yj + dy;\n                });\n                // Find the best y-value where this circle can fit.\n                let candidates = intervals.slice(0, k);\n                if (ky)\n                    candidates = candidates.filter((y) => y >= 0);\n                out: for (const y of candidates.sort(compare)) {\n                    for (let j = 0; j < k; j += 2) {\n                        if (intervals[j] + 1e-6 < y && y < intervals[j + 1] - 1e-6) {\n                            continue out;\n                        }\n                    }\n                    Y[i] = y + y0;\n                    break;\n                }\n                // Insert the placed circle into the interval tree.\n                tree.insert([l, h, i]);\n            }\n        }\n        if (!ky)\n            ky = 1;\n        for (const I of facets) {\n            for (const i of I) {\n                Y[i] = Y[i] * ky + ty;\n            }\n        }\n        return {\n            data,\n            facets,\n            channels: {\n                [x]: { value: X },\n                [y]: { value: Y },\n                ...(R && { r: { value: R } })\n            }\n        };\n    });\n}\nfunction compareSymmetric(a, b) {\n    return Math.abs(a) - Math.abs(b);\n}\nfunction compareAscending(a, b) {\n    return a - b;\n}\n", "import { extent, deviation, max, mean, median, min, sum } from \"d3\";\nimport { defined } from \"../defined.js\";\nimport { percentile, take } from \"../options.js\";\nimport { mapX, mapY } from \"./map.js\";\n/**\n * ```js\n * Plot.normalizeX(\"first\", {y: \"Date\", x: \"Close\", stroke: \"Symbol\"})\n * ```\n *\n * Like\n * [Plot.mapX](https://github.com/observablehq/plot/blob/main/README.md#plotmapxmap-options),\n * but applies the normalize map method with the given *basis*.\n */\nexport function normalizeX(basis, options) {\n    if (arguments.length === 1)\n        ({ basis, ...options } = basis);\n    return mapX(normalize(basis), options);\n}\n/**\n * ```js\n * Plot.normalizeY(\"first\", {x: \"Date\", y: \"Close\", stroke: \"Symbol\"})\n * ```\n *\n * Like\n * [Plot.mapY](https://github.com/observablehq/plot/blob/main/README.md#plotmapymap-options),\n * but applies the normalize map method with the given *basis*.\n */\nexport function normalizeY(basis, options) {\n    if (arguments.length === 1)\n        ({ basis, ...options } = basis);\n    return mapY(normalize(basis), options);\n}\n/**\n * ```js\n * Plot.map({y: Plot.normalize(\"first\")}, {x: \"Date\", y: \"Close\", stroke: \"Symbol\"})\n * ```\n *\n * Returns a normalize map method for the given *basis*, suitable for use with\n * Plot.map.\n */\nexport function normalize(basis) {\n    if (basis === undefined)\n        return normalizeFirst;\n    if (typeof basis === \"function\")\n        return normalizeBasis((I, S) => basis(take(S, I)));\n    if (/^p\\d{2}$/i.test(basis))\n        return normalizeAccessor(percentile(basis));\n    switch (`${basis}`.toLowerCase()) {\n        case \"deviation\":\n            return normalizeDeviation;\n        case \"first\":\n            return normalizeFirst;\n        case \"last\":\n            return normalizeLast;\n        case \"max\":\n            return normalizeMax;\n        case \"mean\":\n            return normalizeMean;\n        case \"median\":\n            return normalizeMedian;\n        case \"min\":\n            return normalizeMin;\n        case \"sum\":\n            return normalizeSum;\n        case \"extent\":\n            return normalizeExtent;\n    }\n    throw new Error(`invalid basis: ${basis}`);\n}\nfunction normalizeBasis(basis) {\n    return {\n        map(I, S, T) {\n            const b = +basis(I, S);\n            for (const i of I) {\n                T[i] = S[i] === null ? NaN : S[i] / b;\n            }\n        }\n    };\n}\nfunction normalizeAccessor(f) {\n    return normalizeBasis((I, S) => f(I, (i) => S[i]));\n}\nconst normalizeExtent = {\n    map(I, S, T) {\n        const [s1, s2] = extent(I, (i) => S[i]), d = s2 - s1;\n        for (const i of I) {\n            T[i] = S[i] === null ? NaN : (S[i] - s1) / d;\n        }\n    }\n};\nconst normalizeFirst = normalizeBasis((I, S) => {\n    for (let i = 0; i < I.length; ++i) {\n        const s = S[I[i]];\n        if (defined(s))\n            return s;\n    }\n});\nconst normalizeLast = normalizeBasis((I, S) => {\n    for (let i = I.length - 1; i >= 0; --i) {\n        const s = S[I[i]];\n        if (defined(s))\n            return s;\n    }\n});\nconst normalizeDeviation = {\n    map(I, S, T) {\n        const m = mean(I, (i) => S[i]);\n        const d = deviation(I, (i) => S[i]);\n        for (const i of I) {\n            T[i] = S[i] === null ? NaN : d ? (S[i] - m) / d : 0;\n        }\n    }\n};\nconst normalizeMax = normalizeAccessor(max);\nconst normalizeMean = normalizeAccessor(mean);\nconst normalizeMedian = normalizeAccessor(median);\nconst normalizeMin = normalizeAccessor(min);\nconst normalizeSum = normalizeAccessor(sum);\n", "import { deviation, max, min, median, mode, variance } from \"d3\";\nimport { defined } from \"../defined.js\";\nimport { percentile, take } from \"../options.js\";\nimport { warn } from \"../warnings.js\";\nimport { mapX, mapY } from \"./map.js\";\nexport function windowX(windowOptions = {}, options) {\n    if (arguments.length === 1)\n        options = windowOptions;\n    return mapX(window(windowOptions), options);\n}\nexport function windowY(windowOptions = {}, options) {\n    if (arguments.length === 1)\n        options = windowOptions;\n    return mapY(window(windowOptions), options);\n}\nexport function window(options = {}) {\n    if (typeof options === \"number\")\n        options = { k: options };\n    let { k, reduce, shift, anchor, strict } = options;\n    if (anchor === undefined && shift !== undefined) {\n        anchor = maybeShift(shift);\n        warn(`Warning: the shift option is deprecated; please use anchor \"${anchor}\" instead.`);\n    }\n    if (!((k = Math.floor(k)) > 0))\n        throw new Error(`invalid k: ${k}`);\n    return maybeReduce(reduce)(k, maybeAnchor(anchor, k), strict);\n}\nfunction maybeAnchor(anchor = \"middle\", k) {\n    switch (`${anchor}`.toLowerCase()) {\n        case \"middle\":\n            return (k - 1) >> 1;\n        case \"start\":\n            return 0;\n        case \"end\":\n            return k - 1;\n    }\n    throw new Error(`invalid anchor: ${anchor}`);\n}\nfunction maybeShift(shift) {\n    switch (`${shift}`.toLowerCase()) {\n        case \"centered\":\n            return \"middle\";\n        case \"leading\":\n            return \"start\";\n        case \"trailing\":\n            return \"end\";\n    }\n    throw new Error(`invalid shift: ${shift}`);\n}\nfunction maybeReduce(reduce = \"mean\") {\n    if (typeof reduce === \"string\") {\n        if (/^p\\d{2}$/i.test(reduce))\n            return reduceNumbers(percentile(reduce));\n        switch (reduce.toLowerCase()) {\n            case \"deviation\":\n                return reduceNumbers(deviation);\n            case \"max\":\n                return reduceArray(max);\n            case \"mean\":\n                return reduceMean;\n            case \"median\":\n                return reduceNumbers(median);\n            case \"min\":\n                return reduceArray(min);\n            case \"mode\":\n                return reduceArray(mode);\n            case \"sum\":\n                return reduceSum;\n            case \"variance\":\n                return reduceNumbers(variance);\n            case \"difference\":\n                return reduceDifference;\n            case \"ratio\":\n                return reduceRatio;\n            case \"first\":\n                return reduceFirst;\n            case \"last\":\n                return reduceLast;\n        }\n    }\n    if (typeof reduce !== \"function\")\n        throw new Error(`invalid reduce: ${reduce}`);\n    return reduceArray(reduce);\n}\nfunction slice(I, i, j) {\n    return I.subarray ? I.subarray(i, j) : I.slice(i, j);\n}\n// Note that the subarray may include NaN in the non-strict case; we expect the\n// function f to handle that itself (e.g., by filtering as needed). The D3\n// reducers (e.g., min, max, mean, median) do, and it\u2019s faster to avoid\n// redundant filtering.\nfunction reduceNumbers(f) {\n    return (k, s, strict) => strict\n        ? {\n            map(I, S, T) {\n                const C = Float64Array.from(I, (i) => (S[i] === null ? NaN : S[i]));\n                let nans = 0;\n                for (let i = 0; i < k - 1; ++i)\n                    if (isNaN(C[i]))\n                        ++nans;\n                for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n                    if (isNaN(C[i + k - 1]))\n                        ++nans;\n                    T[I[i + s]] = nans === 0 ? f(C.subarray(i, i + k)) : NaN;\n                    if (isNaN(C[i]))\n                        --nans;\n                }\n            }\n        }\n        : {\n            map(I, S, T) {\n                const C = Float64Array.from(I, (i) => (S[i] === null ? NaN : S[i]));\n                for (let i = -s; i < 0; ++i) {\n                    T[I[i + s]] = f(C.subarray(0, i + k));\n                }\n                for (let i = 0, n = I.length - s; i < n; ++i) {\n                    T[I[i + s]] = f(C.subarray(i, i + k));\n                }\n            }\n        };\n}\nfunction reduceArray(f) {\n    return (k, s, strict) => strict\n        ? {\n            map(I, S, T) {\n                let count = 0;\n                for (let i = 0; i < k - 1; ++i)\n                    count += defined(S[I[i]]);\n                for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n                    count += defined(S[I[i + k - 1]]);\n                    if (count === k)\n                        T[I[i + s]] = f(take(S, slice(I, i, i + k)));\n                    count -= defined(S[I[i]]);\n                }\n            }\n        }\n        : {\n            map(I, S, T) {\n                for (let i = -s; i < 0; ++i) {\n                    T[I[i + s]] = f(take(S, slice(I, 0, i + k)));\n                }\n                for (let i = 0, n = I.length - s; i < n; ++i) {\n                    T[I[i + s]] = f(take(S, slice(I, i, i + k)));\n                }\n            }\n        };\n}\nfunction reduceSum(k, s, strict) {\n    return strict\n        ? {\n            map(I, S, T) {\n                let nans = 0;\n                let sum = 0;\n                for (let i = 0; i < k - 1; ++i) {\n                    const v = S[I[i]];\n                    if (v === null || isNaN(v))\n                        ++nans;\n                    else\n                        sum += +v;\n                }\n                for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n                    const a = S[I[i]];\n                    const b = S[I[i + k - 1]];\n                    if (b === null || isNaN(b))\n                        ++nans;\n                    else\n                        sum += +b;\n                    T[I[i + s]] = nans === 0 ? sum : NaN;\n                    if (a === null || isNaN(a))\n                        --nans;\n                    else\n                        sum -= +a;\n                }\n            }\n        }\n        : {\n            map(I, S, T) {\n                let sum = 0;\n                const n = I.length;\n                for (let i = 0, j = Math.min(n, k - s - 1); i < j; ++i) {\n                    sum += +S[I[i]] || 0;\n                }\n                for (let i = -s, j = n - s; i < j; ++i) {\n                    sum += +S[I[i + k - 1]] || 0;\n                    T[I[i + s]] = sum;\n                    sum -= +S[I[i]] || 0;\n                }\n            }\n        };\n}\nfunction reduceMean(k, s, strict) {\n    if (strict) {\n        const sum = reduceSum(k, s, strict);\n        return {\n            map(I, S, T) {\n                sum.map(I, S, T);\n                for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n                    T[I[i + s]] /= k;\n                }\n            }\n        };\n    }\n    else {\n        return {\n            map(I, S, T) {\n                let sum = 0;\n                let count = 0;\n                const n = I.length;\n                for (let i = 0, j = Math.min(n, k - s - 1); i < j; ++i) {\n                    let v = S[I[i]];\n                    if (v !== null && !isNaN((v = +v)))\n                        (sum += v), ++count;\n                }\n                for (let i = -s, j = n - s; i < j; ++i) {\n                    let a = S[I[i + k - 1]];\n                    let b = S[I[i]];\n                    if (a !== null && !isNaN((a = +a)))\n                        (sum += a), ++count;\n                    T[I[i + s]] = sum / count;\n                    if (b !== null && !isNaN((b = +b)))\n                        (sum -= b), --count;\n                }\n            }\n        };\n    }\n}\nfunction firstDefined(S, I, i, k) {\n    for (let j = i + k; i < j; ++i) {\n        const v = S[I[i]];\n        if (defined(v))\n            return v;\n    }\n}\nfunction lastDefined(S, I, i, k) {\n    for (let j = i + k - 1; j >= i; --j) {\n        const v = S[I[j]];\n        if (defined(v))\n            return v;\n    }\n}\nfunction firstNumber(S, I, i, k) {\n    for (let j = i + k; i < j; ++i) {\n        let v = S[I[i]];\n        if (v !== null && !isNaN((v = +v)))\n            return v;\n    }\n}\nfunction lastNumber(S, I, i, k) {\n    for (let j = i + k - 1; j >= i; --j) {\n        let v = S[I[j]];\n        if (v !== null && !isNaN((v = +v)))\n            return v;\n    }\n}\nfunction reduceDifference(k, s, strict) {\n    return strict\n        ? {\n            map(I, S, T) {\n                for (let i = 0, n = I.length - k; i < n; ++i) {\n                    const a = S[I[i]];\n                    const b = S[I[i + k - 1]];\n                    T[I[i + s]] = a === null || b === null ? NaN : b - a;\n                }\n            }\n        }\n        : {\n            map(I, S, T) {\n                for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n                    T[I[i + s]] = lastNumber(S, I, i, k) - firstNumber(S, I, i, k);\n                }\n            }\n        };\n}\nfunction reduceRatio(k, s, strict) {\n    return strict\n        ? {\n            map(I, S, T) {\n                for (let i = 0, n = I.length - k; i < n; ++i) {\n                    const a = S[I[i]];\n                    const b = S[I[i + k - 1]];\n                    T[I[i + s]] = a === null || b === null ? NaN : b / a;\n                }\n            }\n        }\n        : {\n            map(I, S, T) {\n                for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n                    T[I[i + s]] = lastNumber(S, I, i, k) / firstNumber(S, I, i, k);\n                }\n            }\n        };\n}\nfunction reduceFirst(k, s, strict) {\n    return strict\n        ? {\n            map(I, S, T) {\n                for (let i = 0, n = I.length - k; i < n; ++i) {\n                    T[I[i + s]] = S[I[i]];\n                }\n            }\n        }\n        : {\n            map(I, S, T) {\n                for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n                    T[I[i + s]] = firstDefined(S, I, i, k);\n                }\n            }\n        };\n}\nfunction reduceLast(k, s, strict) {\n    return strict\n        ? {\n            map(I, S, T) {\n                for (let i = 0, n = I.length - k; i < n; ++i) {\n                    T[I[i + s]] = S[I[i + k - 1]];\n                }\n            }\n        }\n        : {\n            map(I, S, T) {\n                for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n                    T[I[i + s]] = lastDefined(S, I, i, k);\n                }\n            }\n        };\n}\n", "import { greatest, group, least } from \"d3\";\nimport { maybeZ, valueof } from \"../options.js\";\nimport { basic } from \"./basic.js\";\n/**\n * Selects the points of each series selected by the *selector*, which can be\n * specified either as a function which receives as input the index of the\n * series, the shorthand \u201Cfirst\u201D or \u201Clast\u201D, or as a {*key*: *value*} object with\n * exactly one *key* being the name of a channel and the *value* being a\n * function which receives as input the index of the series and the channel\n * values. The *value* may alternatively be specified as the shorthand \u201Cmin\u201D and\n * \u201Cmax\u201D which respectively select the minimum and maximum points for the\n * specified channel.\n *\n * For example, to select the point within each series that is the closest to\n * the median of the *y* channel:\n *\n * ```js\n * Plot.select({\n *   y: (I, V) => {\n *     const median = d3.median(I, i => V[i]);\n *     const i = d3.least(I, i => Math.abs(V[i] - median));\n *     return [i];\n *   }\n * }, {\n *   x: \"year\",\n *   y: \"revenue\",\n *   fill: \"format\"\n * })\n * ```\n *\n * To pick three points at random in each series:\n *\n * ```js\n * Plot.select(I => d3.shuffle(I.slice()).slice(0, 3), {z: \"year\", ...})\n * ```\n *\n * To pick the point in each city with the highest temperature:\n *\n * ```js\n * Plot.select({fill: \"max\"}, {x: \"date\", y: \"city\", fill: \"temperature\", z: \"city\"})\n * ```\n */\nexport function select(selector, options = {}) {\n    // If specified selector is a string or function, it\u2019s a selector without an\n    // input channel such as first or last.\n    if (typeof selector === \"string\") {\n        switch (selector.toLowerCase()) {\n            case \"first\":\n                return selectFirst(options);\n            case \"last\":\n                return selectLast(options);\n        }\n    }\n    if (typeof selector === \"function\") {\n        return selectChannel(null, selector, options);\n    }\n    // Otherwise the selector is an option {name: value} where name is a channel\n    // name and value is a selector definition that additionally takes the given\n    // channel values as input. The selector object must have exactly one key.\n    let key, value;\n    for (key in selector) {\n        if (value !== undefined)\n            throw new Error(\"ambiguous selector; multiple inputs\");\n        value = maybeSelector(selector[key]);\n    }\n    if (value === undefined)\n        throw new Error(`invalid selector: ${selector}`);\n    return selectChannel(key, value, options);\n}\nfunction maybeSelector(selector) {\n    if (typeof selector === \"function\")\n        return selector;\n    switch (`${selector}`.toLowerCase()) {\n        case \"min\":\n            return selectorMin;\n        case \"max\":\n            return selectorMax;\n    }\n    throw new Error(`unknown selector: ${selector}`);\n}\n/**\n * Selects the first point of each series according to input order.\n */\nexport function selectFirst(options) {\n    return selectChannel(null, selectorFirst, options);\n}\n/**\n * Selects the last point of each series according to input order.\n */\nexport function selectLast(options) {\n    return selectChannel(null, selectorLast, options);\n}\n/**\n * Selects the leftmost point of each series.\n */\nexport function selectMinX(options) {\n    return selectChannel(\"x\", selectorMin, options);\n}\n/**\n * Selects the lowest point of each series.\n */\nexport function selectMinY(options) {\n    return selectChannel(\"y\", selectorMin, options);\n}\n/**\n * Selects the rightmost point of each series.\n */\nexport function selectMaxX(options) {\n    return selectChannel(\"x\", selectorMax, options);\n}\n/**\n * Selects the highest point of each series.\n */\nexport function selectMaxY(options) {\n    return selectChannel(\"y\", selectorMax, options);\n}\nfunction* selectorFirst(I) {\n    yield I[0];\n}\nfunction* selectorLast(I) {\n    yield I[I.length - 1];\n}\nfunction* selectorMin(I, X) {\n    yield least(I, (i) => X[i]);\n}\nfunction* selectorMax(I, X) {\n    yield greatest(I, (i) => X[i]);\n}\nfunction selectChannel(v, selector, options) {\n    if (v != null) {\n        if (options[v] == null)\n            throw new Error(`missing channel: ${v}`);\n        v = options[v];\n    }\n    const z = maybeZ(options);\n    return basic(options, (data, facets) => {\n        const Z = valueof(data, z);\n        const V = valueof(data, v);\n        const selectFacets = [];\n        for (const facet of facets) {\n            const selectFacet = [];\n            for (const I of Z ? group(facet, (i) => Z[i]).values() : [facet]) {\n                for (const i of selector(I, V)) {\n                    selectFacet.push(i);\n                }\n            }\n            selectFacets.push(selectFacet);\n        }\n        return { data, facets: selectFacets };\n    });\n}\n"],
  "mappings": "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",
  "names": ["y", "c", "x", "mid", "left", "right", "interval", "x", "IntervalTree", "root", "x", "x", "y", "scale", "offset", "transform", "axis", "values", "format", "range", "position", "selection", "line", "text", "type", "c", "document", "select", "groups", "group", "x", "select", "groups", "group", "groups", "group", "datum", "x", "group", "groups", "selection", "merge", "groups", "group", "ascending", "groups", "group", "groups", "group", "groups", "group", "string", "create", "create", "select", "parseTypenames", "type", "window", "dispatch_default", "groups", "group", "groups", "dispatch_default", "select_default", "select_default", "id", "type", "x", "y", "dispatch", "time", "now", "time", "id", "group", "get", "set", "start", "empty", "interrupt_default", "id", "set", "get", "transition", "c", "attrRemove", "attrRemoveNS", "attrConstant", "attrConstantNS", "attrFunction", "attrFunctionNS", "attr_default", "id", "get", "id", "set", "get", "id", "set", "get", "id", "set", "filter_default", "groups", "group", "merge_default", "transition", "merge", "id", "set", "on_default", "get", "id", "remove_default", "select_default", "select", "id", "groups", "group", "get", "selectAll_default", "select", "id", "groups", "group", "children", "inherit", "get", "Selection", "selection_default", "styleRemove", "styleConstant", "styleFunction", "id", "remove", "set", "style_default", "textConstant", "textFunction", "text_default", "groups", "group", "inherit", "get", "id", "set", "groups", "id", "select_default", "selectAll_default", "filter_default", "merge_default", "selection_default", "on_default", "attr_default", "style_default", "text_default", "remove_default", "polyIn", "custom", "polyOut", "polyInOut", "x", "custom", "backIn", "backOut", "backInOut", "custom", "elasticIn", "a", "p", "elasticOut", "elasticInOut", "id", "transition_default", "groups", "group", "interrupt_default", "transition_default", "max", "min", "x", "y", "pi", "halfPi", "tau", "array", "slice", "area_default", "area", "constant_default", "x", "c", "point", "x", "y", "pi", "threshold", "values", "area_default", "x", "y", "line", "start", "point", "constant_default", "slice", "x", "y", "threshold", "constant_default", "values", "x0", "y0", "density", "c", "transform", "slice", "column", "length", "parse", "text", "c", "format", "text_default", "init", "parse", "init", "text_default", "csv", "tsv", "type", "init", "text_default", "text", "x", "y", "tree", "x0", "y0", "x1", "y1", "right", "bottom", "x", "y", "x0", "y0", "x1", "y1", "data_default", "x0", "y0", "x1", "y1", "x", "y", "radius", "x0", "y0", "x1", "y1", "x2", "y2", "remove_default", "x", "y", "x0", "y0", "x1", "y1", "right", "bottom", "size_default", "x0", "y0", "x1", "y1", "x0", "y0", "x1", "y1", "defaultX", "x_default", "defaultY", "x", "y", "tree", "defaultX", "defaultY", "x0", "y0", "x1", "y1", "data_default", "remove_default", "size_default", "x_default", "epsilon", "epsilon2", "pi", "halfPi", "tau", "abs", "cos", "log", "sin", "x", "pi", "halfPi", "noop", "spherical", "phi", "cos", "sin", "phi", "abs", "pi", "tau", "buffer_default", "line", "x", "y", "noop", "abs", "epsilon", "point", "compareIntersection", "n", "x", "epsilon", "start", "array", "point", "abs", "pi", "tau", "phi", "sin", "cos", "sum", "halfPi", "epsilon", "sign", "epsilon2", "start", "line", "buffer_default", "point", "phi", "halfPi", "epsilon", "pi", "halfPi", "abs", "epsilon", "sin", "cos", "phi", "identity_default", "x", "areaSum", "areaRingSum", "areaStream", "noop", "abs", "area", "x", "y", "area_default", "x0", "y0", "noop", "x", "y", "x00", "y00", "x0", "y0", "x", "y", "x", "y", "tau", "noop", "x00", "y00", "x0", "y0", "noop", "length", "x", "y", "x", "y", "radius", "path_default", "projection", "area_default", "identity_default", "x", "y", "cos", "x", "y", "scale", "x", "y", "cos", "sin", "c", "c", "sin", "phi", "log", "halfPi", "x", "y", "phi", "phi", "sin", "cos", "x", "y", "abs", "epsilon2", "x", "y", "cos", "sin", "phi", "phi2", "x", "y", "abs", "epsilon", "x", "y", "cos", "sin", "x", "y", "cos", "sin", "phi", "log", "halfPi", "x", "y", "children", "x", "c", "y", "cluster", "root", "left", "right", "x0", "x1", "count", "sum", "children", "each_default", "children", "children", "find_default", "sum", "children", "sort_default", "path_default", "start", "c", "root", "iterator_default", "children", "children", "root", "Node", "each_default", "find_default", "sort_default", "path_default", "iterator_default", "x0", "y0", "x1", "y1", "id", "root", "d", "i", "Node", "node", "x", "defaultSeparation", "children", "Node", "root", "tree", "left", "right", "bottom", "x", "x0", "y0", "x1", "y1", "x0", "y0", "x1", "y1", "custom", "x", "custom", "x0", "y0", "x1", "y1", "x", "min", "max", "min", "max", "x", "y", "sum", "c", "x", "X", "Y", "x", "y", "sign", "x", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "c", "x", "range", "x", "y", "point", "identity", "document", "create", "select_default", "format", "formatYear", "pad", "string", "type", "identity", "x", "number", "type", "values", "slice", "sort", "x1", "x2", "identity", "y", "range", "X1", "X2", "first", "inherit", "defaults", "format", "number", "radians", "x", "opacity", "selection", "c", "position", "x", "y", "id", "number", "axis", "ticks", "line", "number", "x", "offset", "create", "y", "selection", "scale", "text", "radians", "color", "scheme11", "scheme", "scheme9", "length", "range", "interval", "x", "transform", "v", "scale", "type", "scheme", "interval", "range", "color", "reverse", "min", "max", "slice", "exponent", "constant", "quantile", "x", "sign", "radius", "scale", "transform", "type", "scheme", "range", "color", "reverse", "min", "max", "mid", "exponent", "constant", "x", "scale", "symbol", "scale", "type", "interval", "range", "reverse", "inferDomain", "scheme", "color", "values", "min", "max", "scale", "transform", "x", "y", "left", "right", "top", "bottom", "start", "length", "type", "values", "range", "scheme", "color", "range", "scale", "c", "values", "x", "type", "interval", "transform", "slice", "x", "y", "axis", "line", "scale", "interval", "min", "max", "type", "order", "transform", "initializer", "c2", "filter", "reverse", "shuffle", "sort", "order", "groupZ", "x", "identity", "y", "group", "filter", "sort", "reverse", "x1", "x2", "y1", "y2", "X", "Y", "GX", "GY", "GZ", "GF", "GS", "extent", "range", "groups", "top", "bottom", "mid", "scale", "type", "filter", "x", "y", "reverse", "X", "difference", "range", "X1", "X2", "y", "color", "ticks", "svg", "create", "x", "range", "type", "scale", "scale", "color", "selection", "symbol", "create", "scale", "key", "defaults", "ticks", "inherit", "color", "legend", "type", "marks", "x", "y", "fx", "fy", "range", "facets", "scale", "svg", "create", "selection", "select_default", "values", "facet", "document", "legend", "defaults", "sort", "optional", "filter", "interval", "transform", "channels", "axis", "map", "c", "x", "y", "identity", "bin", "filter", "sort", "reverse", "x1", "x2", "y1", "y2", "interval", "GK", "GZ", "GF", "GS", "BX1", "BX2", "BY1", "BY2", "k", "extent", "min", "max", "range", "values", "x0", "set", "x", "x1", "x2", "identity", "y", "y1", "y2", "stack", "mergeOptions", "y1", "y", "x", "transform", "Y", "x1", "x2", "X", "y2", "offset", "order", "reverse", "Y1", "Y2", "extent", "min", "max", "range", "I", "x1", "y1", "X1", "Y1", "X2", "Y2", "create", "y", "x", "color", "create", "id", "defaults", "x1", "y1", "X1", "Y1", "X2", "Y2", "create", "c", "link", "x", "x2", "y", "y2", "defaults", "x1", "y1", "X1", "Y1", "X2", "Y2", "radians", "create", "headLength", "sign", "x", "y", "x2", "y2", "defaults", "number", "create", "X", "Y", "x", "y", "x1", "selection", "X1", "X2", "y1", "Y1", "Y2", "identity", "map", "X", "M", "sum", "defaults", "x", "y", "symbol", "sort", "X", "Y", "circle", "create", "selection", "identity", "defaults", "x", "y1", "number", "y", "X", "Y1", "Y2", "create", "x1", "Y", "X1", "X2", "identity", "y2", "x2", "defaults", "create", "x", "y", "number", "selection", "X", "Y", "identity", "x", "y", "sort", "group", "groupZ", "map", "values", "defaults", "x", "y", "selection", "identity", "x", "y", "X", "Y", "index", "X1", "X2", "Y1", "Y2", "link", "hull", "i", "select_default", "c", "create", "defaults", "voronoi", "defaults", "x", "y", "path_default", "X", "identity", "Y", "density", "max", "defaults", "number", "create", "frame", "number", "X", "Y", "identity", "bin", "pi", "pi2", "defaults", "number", "x0", "x1", "y0", "y1", "create", "defaults", "string", "Image", "x", "y", "X", "Y", "create", "defaults", "x", "y", "X", "Y", "create", "identity", "b1", "x", "c", "y", "defaults", "x", "y", "X", "Y", "create", "y1", "x1", "identity", "mean", "defaults", "x1", "y1", "number", "x", "y", "X1", "Y1", "X2", "Y2", "create", "identity", "defaults", "x", "y", "text", "identity", "X", "Y", "create", "selection", "i", "required", "start", "sum", "first", "second", "identity", "normalize", "X", "Y", "root", "X1", "X2", "Y1", "Y2", "x", "y", "sort", "field", "string", "slash", "link", "defaults", "x", "y", "length", "X", "Y", "create", "radians", "identity", "mergeOptions", "number", "y", "x", "sort", "reverse", "X", "identity", "r", "Y", "radius", "tree", "IntervalTree", "y0", "normalize", "window", "maybeReduce", "maybeAnchor", "reduceSum", "reduceFirst", "reduceLast", "slice", "count", "sum", "X"]
}
